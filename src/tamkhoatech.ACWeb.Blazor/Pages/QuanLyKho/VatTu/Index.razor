@page "/vattu"
@using Syncfusion.Blazor.Data
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.DropDowns
@using Volo.Abp.ObjectMapping
@using Blazored.LocalStorage;
@using tamkhoatech.ACWeb.Blazor.Pages.Common
@using tamkhoatech.ACWeb.Constants
@using tamkhoatech.ACWeb.Dto
@using tamkhoatech.ACWeb.IService

@inject NavigationManager NavigationManager
@inject IObjectMapper _objectMapper
@inject IJSRuntime _jsRuntime
@inject ILocalStorageService _localStorage
@inject IVatTuService _vatTu
@inject IDMChungService _dmChung
@inject ITaiKhoanService _taiKhoan
@inject IKhoService _kho



<link rel="stylesheet" href="/Css/danh-sach-phieu.css">
@if (hasRefreshed)
{
    <div class="row gy-2 gx-3 align-items-center">
        <div class="col-auto">
            <h4>
                <label>
                    <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="currentColor" class="bi bi-person-lines-fill" viewBox="0 0 16 16">
                        <path d="M6 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6m-5 6s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1zM11 3.5a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1h-4a.5.5 0 0 1-.5-.5m.5 2.5a.5.5 0 0 0 0 1h4a.5.5 0 0 0 0-1zm2 3a.5.5 0 0 0 0 1h2a.5.5 0 0 0 0-1zm0 3a.5.5 0 0 0 0 1h2a.5.5 0 0 0 0-1z" />
                    </svg>
                    <strong>Danh sách hàng hóa, vật tư</strong>
                </label>
            </h4>
        </div>
    </div>
    <br>
    <div class="row g-3">
                        <NavbarMenu Content="@ContentNavbarMenu" IsAdd="true" OnValidSubmitAdd="@AddAsync" 
                                        IsEdit="true" OnValidSubmitEdit="@EditAsync" 
                                        IsDelete="true" OnValidSubmitDelete="@DeleteAsync"
                                        IsMerged="true" OnValidSubmitMerged="@GopMaAsync"
                                        IsPrint="true" OnValidSubmitPrint="@PrintAsync"
                                        IsExcel="true" OnValidSubmitExcel="@ExportToExcelAsync"
                                        IsShowColumn="true" OnValidSubmitShowColumn="@ShowColumnAsync"
                                        IsRefresh="true" OnValidSubmitRefresh="@RefreshAsync"
                                        IsSearch="true" OnValidSubmitSearch="@SearchAsync"
                                        HelpUrl=@HelpUrl />
    </div>
    <br />
    <div class="row g-3">
        <SfGrid ID="vat-tu" @ref="SfGridVT" DataSource="@VatTuDtos" EnablePersistence="true" AllowPaging="true" AllowSorting="true" AllowResizing="true" AllowReordering="true" AllowExcelExport="true" ShowColumnChooser="true" Width="auto" Height="360">
            <GridColumnChooserSettings>
                <FooterTemplate>
                    @{
                        var ContextData = context as ColumnChooserFooterTemplateContext;
                        if (ContextData != null)
                        {
                            var visibles = ContextData.Columns.Where(x => x.Visible).Select(x => x.HeaderText).ToArray();
                            var hiddens = ContextData.Columns.Where(x => !x.Visible).Select(x => x.HeaderText).ToArray();
                            <SfButton IsPrimary="true" OnClick="@(async () => {
                              await SfGridVT.ShowColumnsAsync(visibles);
                              await SfGridVT.HideColumnsAsync(hiddens); })">Nhận</SfButton>
                            <SfButton @onclick="@(async () => await ContextData.CancelAsync())">Hủy</SfButton>
                        }
                    }
                </FooterTemplate>
            </GridColumnChooserSettings>
            <GridSelectionSettings CheckboxMode="CheckboxSelectionType.ResetOnRowClick" Type="Syncfusion.Blazor.Grids.SelectionType.Single"></GridSelectionSettings>
            <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false"></GridEditSettings>
            <GridPageSettings PageSize="10"></GridPageSettings>
            <GridEvents OnRecordDoubleClick="RecordDoubleClickHandler" TValue="VatTuDto"></GridEvents>
            <GridColumns>
                <GridColumn Type="ColumnType.CheckBox" Width="50" TextAlign="TextAlign.Center"></GridColumn>
                <GridColumn Field=@nameof(VatTuDto.Id) HeaderText="#" Visible="false" ShowInColumnChooser="false" IsPrimaryKey="true" TextAlign="TextAlign.Left" Width="120"></GridColumn>
                <GridColumn Field=@nameof(VatTuDto.VatTuUd) HeaderText="Mã vật tư" TextAlign="TextAlign.Left" Width="120"></GridColumn>
                <GridColumn Field=@nameof(VatTuDto.VatTuNm) HeaderText="Tên vật tư" TextAlign="TextAlign.Left" Width="120"></GridColumn>
                <GridColumn Field=@nameof(VatTuDto.DonViTinh) HeaderText="Đơn vị tính" TextAlign="TextAlign.Left" Width="120"></GridColumn>
                <GridColumn Field=@nameof(VatTuDto.NhomVT1) HeaderText="Nhóm vật tư 1" TextAlign="TextAlign.Left" Width="120"></GridColumn>
                <GridColumn Field=@nameof(VatTuDto.NhomVT2) HeaderText="Nhóm vật tư 2" TextAlign="TextAlign.Left" Width="120"></GridColumn>
                <GridColumn Field=@nameof(VatTuDto.NhomVT3) HeaderText="Nhóm vật tư 3" TextAlign="TextAlign.Left" Width="120"></GridColumn>
                <GridColumn Field=@nameof(VatTuDto.IsTheoDoiTonKho) HeaderText="Vật tư tồn kho" TextAlign="TextAlign.Center" Width="120">
                    <Template>
                        @{
                            var item = (context as VatTuDto);
                            if (item != null)
                            {
                                <SfCheckBox @bind-Checked="item.IsTheoDoiTonKho" readonly="true"></SfCheckBox>
                            }
                        }
                    </Template>
                </GridColumn>
                <GridColumn Field=@nameof(VatTuDto.CachTinhGia) HeaderText="Cách tính giá" TextAlign="TextAlign.Right" Width="120"></GridColumn>
                <GridColumn Field=@nameof(VatTuDto.TkKhoUd) HeaderText="Tk vật tư" TextAlign="TextAlign.Left" Width="120"></GridColumn>
                <GridColumn Field=@nameof(VatTuDto.TkGiaVonUd) HeaderText="Tk giá vốn" TextAlign="TextAlign.Left" Width="120"></GridColumn>
                <GridColumn Field=@nameof(VatTuDto.TkDoanhThuUd) HeaderText="Tk doanh thu" TextAlign="TextAlign.Left" Width="120"></GridColumn>
                <GridColumn Field=@nameof(VatTuDto.TkHangBiTraUd) HeaderText="Tk hàng bán trả lại" TextAlign="TextAlign.Left" Width="120"></GridColumn>
                <GridColumn Field=@nameof(VatTuDto.TkSpDoDangUd) HeaderText="Tk sản phẩm dở dang" TextAlign="TextAlign.Left" Width="120"></GridColumn>
                <GridColumn Field=@nameof(VatTuDto.TkChenhLechGiaVtUd) HeaderText="Tk chênh lệch giá vt" TextAlign="TextAlign.Left" Width="120"></GridColumn>
                <GridColumn Field=@nameof(VatTuDto.GhiChu) HeaderText="Ghi chú" TextAlign="TextAlign.Left" Width="300"></GridColumn>
                <GridColumn Field=@nameof(VatTuDto.VatTuNm2) HeaderText="Tên 2" TextAlign="TextAlign.Left" Width="120"></GridColumn>
            </GridColumns>
        </SfGrid>
    </div>

    <!-- ModalCreate -->
    <SfDialog ID="modal-create-vat-tu" Width="840px" @bind-Visible="ShowModalCreate" AllowPrerender="true" IsModal="true">
        <DialogTemplates>
            <Header>
                @if (CheckAdd)
                {
                    <h1 class="modal-title fs-5">

                        <img src="/images/Button/Moi.png" alt="icon" width="16" height="16">
                        Thêm mới
                    </h1>
                }
                else
                {
                    <h1 class="modal-title fs-5">
                        <img src="/images/Button/Sua.png" alt="icon" width="16" height="16">
                        Chỉnh sửa
                    </h1>
                }
            </Header>
            <Content>
                <div class="container">
                    <EditForm Model="SelectVatTu" Context="editFormVT" OnValidSubmit="@SaveAsync">
                        <DataAnnotationsValidator />
                        <div class="mb-1">
                            <div class="row">
                                <div class="col-sm-3">
                                    <label for="VatTuUd" class="form-label">Mã vật tư <span class="text-danger">*</span></label>
                                </div>
                                <div class="col-sm-4">
                                    <SfTextBox ID="VatTuUd" CssClass="e-small" @bind-Value="@(SelectVatTu.VatTuUd)" Enabled="CheckPhatSinh" @oninput="ConvertToUpperCase"></SfTextBox>
                                </div>
                            </div>
                        </div>
                        <div class="mb-1">
                            <div class="row">
                                <div class="col-sm-3">
                                    <label for="VatTuNm" class="form-label">Tên vật tư <span class="text-danger">*</span></label>
                                </div>
                                <div class="col-sm-9">
                                    <SfTextBox ID="VatTuNm" CssClass="e-small" @bind-Value="@(SelectVatTu.VatTuNm)"></SfTextBox>
                                </div>
                            </div>
                        </div>
                        <div class="mb-1">
                            <div class="row">
                                <div class="col-sm-3">
                                    <label for="VatTuNm2" class="form-label">Tên 2</label>
                                </div>
                                <div class="col-sm-9">
                                    <SfTextBox ID="VatTuNm2" CssClass="e-small" @bind-Value="@(SelectVatTu.VatTuNm2)"></SfTextBox>
                                </div>
                            </div>
                        </div>
                        <div class="mb-1">
                            <div class="row">
                                <div class="col-sm-3">
                                    <label for="DonViTinh" class="form-label">Đơn vị tính<span class="text-danger">*</span></label>
                                </div>
                                <div class="col-sm-4">
                                    <SfTextBox ID="DiaChi" CssClass="e-small" @bind-Value="@(SelectVatTu.DonViTinh)"></SfTextBox>
                                </div>
                                <div class="col-sm-3">
                                    <label for="IsConGiaoDich" class="form-label d-flex align-items-center">
                                        <span>Theo dõi tồn kho</span>
                                        <SfTooltip ID="tinhTrang" Target="#target" Content="Chọn - Theo dõi, Bỏ chọn - Không theo dõi" Position="Position.LeftCenter" OpensOn="Hover">
                                            <div id="target" class="ms-2">
                                                <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="currentColor" class="bi bi-question-circle" viewBox="0 0 16 16">
                                                    <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16" />
                                                    <path d="M5.255 5.786a.237.237 0 0 0 .241.247h.825c.138 0 .248-.113.266-.25.09-.656.54-1.134 1.342-1.134.686 0 1.314.343 1.314 1.168 0 .635-.374.927-.965 1.371-.673.489-1.206 1.06-1.168 1.987l.003.217a.25.25 0 0 0 .25.246h.811a.25.25 0 0 0 .25-.25v-.105c0-.718.273-.927 1.01-1.486.609-.463 1.244-.977 1.244-2.056 0-1.511-1.276-2.241-2.673-2.241-1.267 0-2.655.59-2.75 2.286m1.557 5.763c0 .533.425.927 1.01.927.609 0 1.028-.394 1.028-.927 0-.552-.42-.94-1.029-.94-.584 0-1.009.388-1.009.94" />
                                                </svg>
                                            </div>
                                        </SfTooltip>
                                        <div style="margin-left: 8px">
                                            <SfCheckBox @bind-Checked="SelectVatTu.IsTheoDoiTonKho"></SfCheckBox>
                                        </div>
                                    </label>
                                </div>
                            </div>                          
                        </div>
                        <div class="mb-1">
                            <div class="row">
                                <div class="col-sm-3">
                                    <label for="CachTinhGia" class="form-label d-flex align-items-center">
                                        <span>Cách tính giá tồn kho</span>
                                    </label>
                                </div>
                                <div class="col-sm-4">
                                    <SfDropDownList TValue="int?" TItem="Loai" @bind-Value="@SelectVatTu.CachTinhGia" CssClass="e-multi-column e-small" DataSource="@Loais">
                                        <DropDownListFieldSettings Text="LoaiNm" Value="LoaiUd"></DropDownListFieldSettings>
                                    </SfDropDownList>
                                </div>
                                <div class="col-sm-3">
                                    <label for="IsConGiaoDich" class="form-label d-flex align-items-center">
                                        <span>Sửa tài khoản kho</span>
                                        <SfTooltip ID="tinhTrang" Target="#target" Content="Chọn - Được sửa, Bỏ chọn - Không được sửa" Position="Position.LeftCenter" OpensOn="Hover">
                                            <div id="target" class="ms-2">
                                                <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="currentColor" class="bi bi-question-circle" viewBox="0 0 16 16">
                                                    <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16" />
                                                    <path d="M5.255 5.786a.237.237 0 0 0 .241.247h.825c.138 0 .248-.113.266-.25.09-.656.54-1.134 1.342-1.134.686 0 1.314.343 1.314 1.168 0 .635-.374.927-.965 1.371-.673.489-1.206 1.06-1.168 1.987l.003.217a.25.25 0 0 0 .25.246h.811a.25.25 0 0 0 .25-.25v-.105c0-.718.273-.927 1.01-1.486.609-.463 1.244-.977 1.244-2.056 0-1.511-1.276-2.241-2.673-2.241-1.267 0-2.655.59-2.75 2.286m1.557 5.763c0 .533.425.927 1.01.927.609 0 1.028-.394 1.028-.927 0-.552-.42-.94-1.029-.94-.584 0-1.009.388-1.009.94" />
                                                </svg>
                                            </div>
                                        </SfTooltip>
                                        <div style="margin-left: 8px">
                                            <SfCheckBox @bind-Checked="SelectVatTu.IsSuaTkKho"></SfCheckBox>
                                        </div>
                                    </label>
                                </div>
                            </div>
                        </div>                      
                        <div class="mb-1">
                            <div class="row">
                                <div class="col-sm-3">
                                    <label for="LoaiVatTu" class="form-label d-flex align-items-center">
                                        <span>Loại vật tư</span>
                                    </label>
                                </div>
                                <div class="col-sm-3">
                                    <SfComboBox @ref="ddLVT" @bind-Value="@(SelectVatTu.LoaiVatTu)" DataSource="@DMChungDtos" AllowFiltering="true" Autofill="true" AllowCustom="false" CssClass="e-multi-column e-small" PopupWidth="600" PopupHeight="300">
                                        <ComboBoxEvents TValue="int?" TItem="DmChungDto" Filtering="OnFilteringLoaiVatTu" ValueChange="@OnChangeLoaiVatTu"></ComboBoxEvents>
                                        <ComboBoxFieldSettings Text="DMChungUd" Value="Id"></ComboBoxFieldSettings>
                                        <ComboBoxTemplates TItem="DmChungDto">
                                            <HeaderTemplate>
                                                <table class="header-combo">
                                                    <tr>
                                                        <th style="width:100px">Mã mẫu</th>
                                                        <th>Tên mẫu</th>
                                                    </tr>
                                                </table>
                                            </HeaderTemplate>
                                            <ItemTemplate Context="itemContext">
                                                <table>
                                                    <tbody>
                                                        <tr>
                                                            <td style="width:100px"><span>@((itemContext as DmChungDto).DMChungUd)</span></td>
                                                            <td><span>@((itemContext as DmChungDto).DMChungNm)</span></td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </ItemTemplate>
                                        </ComboBoxTemplates>
                                    </SfComboBox>
                                </div>
                                <div class="col-sm-6">
                                    <SfTextBox ID="LoaiVatTuNm" CssClass="e-small" @bind-Value="@(SelectVatTu.LoaiVatTuNm)"></SfTextBox>
                                </div>
                            </div>
                        </div>
                        <div class="mb-1">
                            <div class="row">
                                <div class="col-sm-3">
                                    <label for="TkKho" class="form-label">Tài khoản kho<span class="text-danger">*</span></label>
                                </div>
                                <div class="col-sm-3">
                                    <SfComboBox @ref="ddTKK" @bind-Value="@SelectVatTu.TkKho" DataSource="@TaiKhoanDtos" AllowFiltering="true" Autofill="true" AllowCustom="false" CssClass="e-multi-column e-small" PopupWidth="700" PopupHeight="300">
                                        <ComboBoxEvents TValue="int?" TItem="TaiKhoanDto" Filtering="OnFilteringTaiKhoanKho" ValueChange="OnValueChangeTaiKhoanKho"></ComboBoxEvents>
                                        <ComboBoxFieldSettings Text="TaiKhoanUd" Value="Id"></ComboBoxFieldSettings>
                                        <ComboBoxTemplates TItem="TaiKhoanDto">
                                            <HeaderTemplate>
                                                <table class="header-combo">
                                                    <tr>
                                                        <th>Mã tài khoản</th>
                                                        <th>Tên tài khoản</th>
                                                        <th>Tên 2</th>
                                                    </tr>
                                                </table>
                                            </HeaderTemplate>
                                            <ItemTemplate Context="itemContext">
                                                <table>
                                                    <tbody>
                                                        <tr>
                                                            <td><span>@((itemContext as TaiKhoanDto).TaiKhoanUd)</span></td>
                                                            <td><span>@((itemContext as TaiKhoanDto).TaiKhoanNm)</span></td>
                                                            <td><span>@((itemContext as TaiKhoanDto).TaiKhoanNm2)</span></td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </ItemTemplate>
                                        </ComboBoxTemplates>
                                    </SfComboBox>
                                </div>
                                <div class="col-sm-6">
                                    <SfTextBox ID="TkKhoNm" CssClass="e-small" @bind-Value="@(SelectVatTu.TkKhoNm)" Enabled="false"></SfTextBox>
                                </div>
                            </div>
                        </div>
                        <div class="mb-1">
                            <div class="row">
                                <div class="col-sm-3">
                                    <label for="TkGiaVon" class="form-label">Tài khoản giá vốn<span class="text-danger">*</span></label>
                                </div>
                                <div class="col-sm-3">
                                    <SfComboBox @ref="ddTKGV" @bind-Value="@SelectVatTu.TkGiaVon" DataSource="@TaiKhoanDtos" AllowFiltering="true" Autofill="true" AllowCustom="false" CssClass="e-multi-column e-small" PopupWidth="700" PopupHeight="300">
                                        <ComboBoxEvents TValue="int?" TItem="TaiKhoanDto" Filtering="OnFilteringTkGiaVon" ValueChange="OnValueChangeTkGiaVon"></ComboBoxEvents>
                                        <ComboBoxFieldSettings Text="TaiKhoanUd" Value="Id"></ComboBoxFieldSettings>
                                        <ComboBoxTemplates TItem="TaiKhoanDto">
                                            <HeaderTemplate>
                                                <table class="header-combo">
                                                    <tr>
                                                        <th>Mã tài khoản</th>
                                                        <th>Tên tài khoản</th>
                                                        <th>Tên 2</th>
                                                    </tr>
                                                </table>
                                            </HeaderTemplate>
                                            <ItemTemplate Context="itemContext">
                                                <table>
                                                    <tbody>
                                                        <tr>
                                                            <td><span>@((itemContext as TaiKhoanDto).TaiKhoanUd)</span></td>
                                                            <td><span>@((itemContext as TaiKhoanDto).TaiKhoanNm)</span></td>
                                                            <td><span>@((itemContext as TaiKhoanDto).TaiKhoanNm2)</span></td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </ItemTemplate>
                                        </ComboBoxTemplates>
                                    </SfComboBox>
                                </div>
                                <div class="col-sm-6">
                                    <SfTextBox ID="TkGiaVonNm" CssClass="e-small" @bind-Value="@(SelectVatTu.TkGiaVonNm)" Enabled="false"></SfTextBox>
                                </div>
                            </div>
                        </div>
                        <div class="mb-1">
                            <div class="row">
                                <div class="col-sm-3">
                                    <label for="TkDoanhThu" class="form-label">Tài khoản doanh thu<span class="text-danger">*</span></label>
                                </div>
                                <div class="col-sm-3">
                                    <SfComboBox @ref="ddTKDT" @bind-Value="@SelectVatTu.TkDoanhThu" DataSource="@TaiKhoanDtos" AllowFiltering="true" Autofill="true" AllowCustom="false" CssClass="e-multi-column e-small" PopupWidth="700" PopupHeight="300">
                                        <ComboBoxEvents TValue="int?" TItem="TaiKhoanDto" Filtering="OnFilteringTkDoanhThu" ValueChange="OnValueChangeTkDoanhThu"></ComboBoxEvents>
                                        <ComboBoxFieldSettings Text="TaiKhoanUd" Value="Id"></ComboBoxFieldSettings>
                                        <ComboBoxTemplates TItem="TaiKhoanDto">
                                            <HeaderTemplate>
                                                <table class="header-combo">
                                                    <tr>
                                                        <th>Mã tài khoản</th>
                                                        <th>Tên tài khoản</th>
                                                        <th>Tên 2</th>
                                                    </tr>
                                                </table>
                                            </HeaderTemplate>
                                            <ItemTemplate Context="itemContext">
                                                <table>
                                                    <tbody>
                                                        <tr>
                                                            <td><span>@((itemContext as TaiKhoanDto).TaiKhoanUd)</span></td>
                                                            <td><span>@((itemContext as TaiKhoanDto).TaiKhoanNm)</span></td>
                                                            <td><span>@((itemContext as TaiKhoanDto).TaiKhoanNm2)</span></td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </ItemTemplate>
                                        </ComboBoxTemplates>
                                    </SfComboBox>
                                </div>
                                <div class="col-sm-6">
                                    <SfTextBox ID="TkDoanhThuNm" CssClass="e-small" @bind-Value="@(SelectVatTu.TkDoanhThuNm)" Enabled="false"></SfTextBox>
                                </div>
                            </div>
                        </div>
                        <div class="mb-1">
                            <div class="row">
                                <div class="col-sm-3">
                                    <label for="TkHangBiTra" class="form-label">Tài khoản hàng bị trả<span class="text-danger">*</span></label>
                                </div>
                                <div class="col-sm-3">
                                    <SfComboBox @ref="ddTKHBT" @bind-Value="@SelectVatTu.TkHangBiTra" DataSource="@TaiKhoanDtos" AllowFiltering="true" Autofill="true" AllowCustom="false" CssClass="e-multi-column e-small" PopupWidth="700" PopupHeight="300">
                                        <ComboBoxEvents TValue="int?" TItem="TaiKhoanDto" Filtering="OnFilteringTkHangBiTra" ValueChange="OnValueChangeTkHangBiTra"></ComboBoxEvents>
                                        <ComboBoxFieldSettings Text="TaiKhoanUd" Value="Id"></ComboBoxFieldSettings>
                                        <ComboBoxTemplates TItem="TaiKhoanDto">
                                            <HeaderTemplate>
                                                <table class="header-combo">
                                                    <tr>
                                                        <th>Mã tài khoản</th>
                                                        <th>Tên tài khoản</th>
                                                        <th>Tên 2</th>
                                                    </tr>
                                                </table>
                                            </HeaderTemplate>
                                            <ItemTemplate Context="itemContext">
                                                <table>
                                                    <tbody>
                                                        <tr>
                                                            <td><span>@((itemContext as TaiKhoanDto).TaiKhoanUd)</span></td>
                                                            <td><span>@((itemContext as TaiKhoanDto).TaiKhoanNm)</span></td>
                                                            <td><span>@((itemContext as TaiKhoanDto).TaiKhoanNm2)</span></td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </ItemTemplate>
                                        </ComboBoxTemplates>
                                    </SfComboBox>
                                </div>
                                <div class="col-sm-6">
                                    <SfTextBox ID="TkHangBiTraNm" CssClass="e-small" @bind-Value="@(SelectVatTu.TkHangBiTraNm)" Enabled="false"></SfTextBox>
                                </div>
                            </div>
                        </div>
                        <div class="mb-1">
                            <div class="row">
                                <div class="col-sm-3">
                                    <label for="TkSpDoDang" class="form-label">Tài khoản sp dở dang<span class="text-danger">*</span></label>
                                </div>
                                <div class="col-sm-3">
                                    <SfComboBox @ref="ddTKSPDD" @bind-Value="@SelectVatTu.TkSpDoDang" DataSource="@TaiKhoanDtos"  AllowFiltering="true" Autofill="true" AllowCustom="false" CssClass="e-multi-column e-small" PopupWidth="700" PopupHeight="300">
                                        <ComboBoxEvents TValue="int?" TItem="TaiKhoanDto"  Filtering="OnFilteringTkSpDoDang" ValueChange="OnValueChangeTkSpDoDang"></ComboBoxEvents>
                                        <ComboBoxFieldSettings Text="TaiKhoanUd" Value="Id"></ComboBoxFieldSettings>
                                        <ComboBoxTemplates TItem="TaiKhoanDto">
                                            <HeaderTemplate>
                                                <table class="header-combo">
                                                    <tr>
                                                        <th>Mã tài khoản</th>
                                                        <th>Tên tài khoản</th>
                                                        <th>Tên 2</th>
                                                    </tr>
                                                </table>
                                            </HeaderTemplate>
                                            <ItemTemplate Context="itemContext">
                                                <table>
                                                    <tbody>
                                                        <tr>
                                                            <td><span>@((itemContext as TaiKhoanDto).TaiKhoanUd)</span></td>
                                                            <td><span>@((itemContext as TaiKhoanDto).TaiKhoanNm)</span></td>
                                                            <td><span>@((itemContext as TaiKhoanDto).TaiKhoanNm2)</span></td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </ItemTemplate>
                                        </ComboBoxTemplates>
                                    </SfComboBox>
                                </div>
                                <div class="col-sm-6">
                                    <SfTextBox ID="TkSpDoDangNm" CssClass="e-small" @bind-Value="@(SelectVatTu.TkSpDoDangNm)" Enabled="false"></SfTextBox>
                                </div>
                            </div>
                        </div>
                        <div class="mb-1">
                            <div class="row">
                                <div class="col-sm-3">
                                    <label for="TkChenhLechGiaVt" class="form-label">Tài khoản chênh lệch giá vt<span class="text-danger">*</span></label>
                                </div>
                                <div class="col-sm-3">
                                    <SfComboBox @ref="ddTKCLGVT" @bind-Value="@SelectVatTu.TkChenhLechGiaVt" DataSource="@TaiKhoanDtos"  AllowFiltering="true" Autofill="true" AllowCustom="false" CssClass="e-multi-column e-small" PopupWidth="700" PopupHeight="300">
                                        <ComboBoxEvents TValue="int?" TItem="TaiKhoanDto" Filtering="OnFilteringTkChenhLechGiaVt" ValueChange="OnValueChangeTkChenhLechGiaVt"></ComboBoxEvents>
                                        <ComboBoxFieldSettings Text="TaiKhoanUd" Value="Id"></ComboBoxFieldSettings>
                                        <ComboBoxTemplates TItem="TaiKhoanDto">
                                            <HeaderTemplate>
                                                <table class="header-combo">
                                                    <tr>
                                                        <th>Mã tài khoản</th>
                                                        <th>Tên tài khoản</th>
                                                        <th>Tên 2</th>
                                                    </tr>
                                                </table>
                                            </HeaderTemplate>
                                            <ItemTemplate Context="itemContext">
                                                <table>
                                                    <tbody>
                                                        <tr>
                                                            <td><span>@((itemContext as TaiKhoanDto).TaiKhoanUd)</span></td>
                                                            <td><span>@((itemContext as TaiKhoanDto).TaiKhoanNm)</span></td>
                                                            <td><span>@((itemContext as TaiKhoanDto).TaiKhoanNm2)</span></td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </ItemTemplate>
                                        </ComboBoxTemplates>
                                    </SfComboBox>
                                </div>
                                <div class="col-sm-6">
                                    <SfTextBox ID="TkChenhLechGiaVtNm" CssClass="e-small" @bind-Value="@(SelectVatTu.TkChenhLechGiaVtNm)" Enabled="false"></SfTextBox>
                                </div>
                            </div>
                        </div>
                        <div class="mb-1">
                            <div class="row">
                                <div class="col-sm-3">
                                    <label for="NhomVT1" class="form-label">Nhóm vật tư 1</label>
                                </div>
                                <div class="col-sm-3">
                                    <SfComboBox @ref="ddNVT1" @bind-Value="@SelectVatTu.NhomVT1" DataSource="@NhomVatTu1Dtos"  AllowFiltering="true" Autofill="true" AllowCustom="false" CssClass="e-multi-column e-small" PopupWidth="700" PopupHeight="300">
                                        <ComboBoxEvents TValue="int?" TItem="NhomVatTuDto" Filtering="OnFilteringNhomVatTu1" ValueChange="OnValueChangeNhomVatTu1"></ComboBoxEvents>
                                        <ComboBoxFieldSettings Text="NhomVatTuUd" Value="Id"></ComboBoxFieldSettings>
                                        <ComboBoxTemplates TItem="NhomVatTuDto">
                                            <HeaderTemplate>
                                                <table class="header-combo">
                                                    <tr>
                                                        <th>Mã nhóm</th>
                                                        <th>Tên nhóm</th>
                                                        <th>Tên 2</th>
                                                    </tr>
                                                </table>
                                            </HeaderTemplate>
                                            <ItemTemplate Context="itemContext">
                                                <table>
                                                    <tbody>
                                                        <tr>
                                                            <td><span>@((itemContext as NhomVatTuDto).NhomVatTuUd)</span></td>
                                                            <td><span>@((itemContext as NhomVatTuDto).NhomVatTuNm)</span></td>
                                                            <td><span>@((itemContext as NhomVatTuDto).NhomVatTuNm2)</span></td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </ItemTemplate>
                                        </ComboBoxTemplates>
                                    </SfComboBox>
                                </div>
                                <div class="col-sm-6">
                                    <SfTextBox ID="NhomVtNm1" CssClass="e-small" @bind-Value="@(SelectVatTu.NhomVtNm1)" Enabled="false"></SfTextBox>
                                </div>
                            </div>
                        </div>
                        <div class="mb-1">
                            <div class="row">
                                <div class="col-sm-3">
                                    <label for="NhomVT2" class="form-label">Nhóm vật tư 2</label>
                                </div>
                                <div class="col-sm-3">
                                    <SfComboBox @ref="ddNVT2" @bind-Value="@SelectVatTu.NhomVT2" DataSource="@NhomVatTu2Dtos"  AllowFiltering="true"  Autofill="true" AllowCustom="false" CssClass="e-multi-column e-small" PopupWidth="700" PopupHeight="300">
                                        <ComboBoxEvents TValue="int?" TItem="NhomVatTuDto" Filtering="OnFilteringNhomVatTu2" ValueChange="OnValueChangeNhomVatTu2"></ComboBoxEvents>
                                        <ComboBoxFieldSettings Text="NhomVatTuUd" Value="Id"></ComboBoxFieldSettings>
                                        <ComboBoxTemplates TItem="NhomVatTuDto">
                                            <HeaderTemplate>
                                                <table class="header-combo">
                                                    <tr>
                                                        <th>Mã nhóm</th>
                                                        <th>Tên nhóm</th>
                                                        <th>Tên 2</th>
                                                    </tr>
                                                </table>
                                            </HeaderTemplate>
                                            <ItemTemplate Context="itemContext">
                                                <table>
                                                    <tbody>
                                                        <tr>
                                                            <td><span>@((itemContext as NhomVatTuDto).NhomVatTuUd)</span></td>
                                                            <td><span>@((itemContext as NhomVatTuDto).NhomVatTuNm)</span></td>
                                                            <td><span>@((itemContext as NhomVatTuDto).NhomVatTuNm2)</span></td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </ItemTemplate>
                                        </ComboBoxTemplates>
                                    </SfComboBox>
                                </div>
                                <div class="col-sm-6">
                                    <SfTextBox ID="NhomVtNm2" CssClass="e-small" @bind-Value="@(SelectVatTu.NhomVtNm2)" Enabled="false"></SfTextBox>
                                </div>
                            </div>
                        </div>
                        <div class="mb-1">
                            <div class="row">
                                <div class="col-sm-3">
                                    <label for="NhomVT3" class="form-label">Nhóm vật tư 3</label>
                                </div>
                                <div class="col-sm-3">
                                    <SfComboBox @ref="ddNVT3" @bind-Value="@SelectVatTu.NhomVT3" DataSource="@NhomVatTu3Dtos"  AllowFiltering="true"  Autofill="true" AllowCustom="false" CssClass="e-multi-column e-small" PopupWidth="700" PopupHeight="300">
                                        <ComboBoxEvents TValue="int?" TItem="NhomVatTuDto" Filtering="OnFilteringNhomVatTu3" ValueChange="OnValueChangeNhomVatTu3"></ComboBoxEvents>
                                        <ComboBoxFieldSettings Text="NhomVatTuUd" Value="Id"></ComboBoxFieldSettings>
                                        <ComboBoxTemplates TItem="NhomVatTuDto">
                                            <HeaderTemplate>
                                                <table class="header-combo">
                                                    <tr>
                                                        <th>Mã nhóm</th>
                                                        <th>Tên nhóm</th>
                                                        <th>Tên 2</th>
                                                    </tr>
                                                </table>
                                            </HeaderTemplate>
                                            <ItemTemplate Context="itemContext">
                                                <table>
                                                    <tbody>
                                                        <tr>
                                                            <td><span>@((itemContext as NhomVatTuDto).NhomVatTuUd)</span></td>
                                                            <td><span>@((itemContext as NhomVatTuDto).NhomVatTuNm)</span></td>
                                                            <td><span>@((itemContext as NhomVatTuDto).NhomVatTuNm2)</span></td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </ItemTemplate>
                                        </ComboBoxTemplates>
                                    </SfComboBox>
                                </div>
                                <div class="col-sm-6">
                                    <SfTextBox ID="NhomVtNm3" CssClass="e-small" @bind-Value="@(SelectVatTu.NhomVtNm3)" Enabled="false"></SfTextBox>
                                </div>
                            </div>
                        </div>
                        <div class="mb-1">
                            <div class="row">
                                <div class="col-sm-3">
                                    <label for="SLTonToiThieu" class="form-label">Số lượng tối thiểu</label>
                                </div>
                                <div class="col-sm-3">
                                    <SfNumericTextBox ShowSpinButton="false" ID="SLTonToiThieu" CssClass="e-small" TValue="decimal?" @bind-Value="@(SelectVatTu.SLTonToiThieu)" Format="N2"></SfNumericTextBox>
                                </div>
                                <div class="col-sm-3">
                                    <label for="SLTonToiDa" class="form-label">Số lượng tối đa</label>
                                </div>            
                                <div class="col-sm-3">
                                    <SfNumericTextBox ShowSpinButton="false" ID="SLTonToiDa" CssClass="e-small" TValue="decimal?" @bind-Value="@(SelectVatTu.SLTonToiDa)" Format="N2"></SfNumericTextBox>
                                </div>
                            </div>
                        </div>
                        <div class="mb-1">
                            <div class="row">
                                <div class="col-sm-3">
                                    <label for="NhomVT3" class="form-label">Kho</label>
                                </div>
                                <div class="col-sm-3">
                                    <SfComboBox @ref="ddK" @bind-Value="@SelectVatTu.KhoId" DataSource="@KhoDtos"  AllowFiltering="true"  Autofill="true" AllowCustom="false" CssClass="e-multi-column e-small" PopupWidth="700" PopupHeight="300">
                                        <ComboBoxEvents TValue="int?" TItem="KhoDto" Filtering="OnFilteringKho" ValueChange="OnValueChangeKho"></ComboBoxEvents>
                                        <ComboBoxFieldSettings Text="KhoUd" Value="Id"></ComboBoxFieldSettings>
                                        <ComboBoxTemplates TItem="KhoDto">
                                            <HeaderTemplate>
                                                <table class="header-combo">
                                                    <tr>
                                                        <th>Mã kho</th>
                                                        <th>Tên kho</th>
                                                        <th>Tên 2</th>
                                                    </tr>
                                                </table>
                                            </HeaderTemplate>
                                            <ItemTemplate Context="itemContext">
                                                <table>
                                                    <tbody>
                                                        <tr>
                                                            <td><span>@((itemContext as KhoDto).KhoUd)</span></td>
                                                            <td><span>@((itemContext as KhoDto).KhoNm)</span></td>
                                                            <td><span>@((itemContext as KhoDto).KhoNm2)</span></td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </ItemTemplate>
                                        </ComboBoxTemplates>
                                    </SfComboBox>
                                </div>
                                <div class="col-sm-6">
                                    <SfTextBox ID="KhoNm" CssClass="e-small" @bind-Value="@(SelectVatTu.KhoNm)" Enabled="false"></SfTextBox>
                                </div>
                            </div>
                        </div>
                        <div class="mb-1">
                            <div class="row">
                                <div class="col-sm-3">
                                    <label for="GhiChu" class="form-label">Ghi chú</label>
                                </div>
                                <div class="col-sm-6">
                                    <SfTextBox ID="GhiChu" CssClass="e-small" @bind-Value="@(SelectVatTu.GhiChu)" Multiline=true style="height: 80px"></SfTextBox>
                                </div>
                            </div>
                        </div>
                        <br />
                        <br />
                        <div class="e-dialog e-footer-content">
                            <button type="submit" class="btn btn-sm btn-primary">Nhận</button>
                            <button type="button" class="btn btn-sm btn-danger" @onclick="CloseModalCreate">Hủy</button>
                            <button type="button" class="btn btn-sm btn-secondary" @onclick="Reset">Làm mới</button>
                        </div>
                    </EditForm>
                </div>
            </Content>
        </DialogTemplates>
    </SfDialog>

    <!--Modal Gộp Mã-->
    <SfDialog ID="modal-gop-ma" Width="600px" @bind-Visible="ShowModalGopMa" AllowPrerender="true" IsModal="true">
        <DialogTemplates>
            <Header>
                <h1 class="modal-title fs-5">
                    <img src="/images/Button/GopMa.png" alt="icon" width="16" height="16">
                    Gộp mã
                </h1>
            </Header>
            <Content>
                <div class="container">
                <div class="mb-1">
                    <div class="row g-3">
                        <div class="col-sm-2">
                            <label for="VatTuUd" class="form-label">Mã cũ</label>
                        </div>
                        <div class="col-sm-3">
                            <SfTextBox ID="VatTuUd" CssClass="e-small" @bind-Value="@(SelectVatTu.VatTuUd)" Enabled="false"></SfTextBox>
                        </div>
                        <div class="col-sm-7">
                            <SfTextBox ID="VatTuNm" CssClass="e-small" @bind-Value="@(SelectVatTu.VatTuNm)" Enabled="false"></SfTextBox>
                        </div>
                    </div>
                </div>
                <div class="mb-1">
                    <div class="row g-3">
                        <div class="col-sm-2">
                            <label for="VatTuUdNew" class="form-label">Mã mới</label>
                        </div>
                        <div class="col-sm-3">
                            <SfTextBox ID="VatTuUdNew" CssClass="e-small" @bind-Value="@(SelectVatTu.VatTuUdNew)" @oninput="GopMaOnInput"></SfTextBox>
                        </div>
                        <div class="col-sm-7">
                            <SfTextBox ID="VatTuNmNew" CssClass="e-small" @bind-Value="@(SelectVatTu.VatTuNmNew)" Enabled="false"></SfTextBox>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-sm btn-danger" @onclick="CloseModalGopMa">Hủy</button>
                    @if (IsGopMa)
                    {
                        <button type="button" class="btn btn-sm btn-primary" @onclick="ConfirmGopMa">Nhận</button>
                    }
                </div>
            </div>
        </Content>
    </DialogTemplates>
</SfDialog>

    <ModalErrorMessage ShowModalMessage="@ShowModalMessage" CheckMessage="@CheckMessage" TextMessage="@TextMessage" IsDelete="@CheckDelete"
                       OnCloseMessage="CloseModalMessage" OnConfirmDelele="ConfirmDeleleAsync" />

}
else
{
    <h3>Vui lòng chờ....</h3>
}

@code {
    private bool hasRefreshed = false;
    private string ContentNavbarMenu = "hàng hóa, vật tư";
    private string HelpUrl = "https://tamkhoatech.vn/huong-dan-su-dung/danh-sach-hang-hoa-vat-tu/";

    //Modal create
    private bool ShowModalCreate = false;
    private bool CheckAdd = true;
    private bool CheckPhatSinh = true;
    public VatTuRequest SelectVatTu = new VatTuRequest()
    {
        CachTinhGia = 1,
        IsTheoDoiTonKho = true,
        SLTonToiDa =0,
        SLTonToiThieu = 0
    };
    List<Loai> Loais = new List<Loai>()
    {
        new Loai() { LoaiUd = 1, LoaiNm = "Tính trung bình tháng" },
        new Loai() { LoaiUd = 2, LoaiNm = "Giá đích danh" },
        new Loai() { LoaiUd = 3, LoaiNm = "Giá NTXT" },
        new Loai() { LoaiUd = 4, LoaiNm = "Giá trung bình di động" },
    };
    private List<DmChungDto> DMChungDtos = new List<DmChungDto>();
    private SfComboBox<int?, DmChungDto> ddLVT = new SfComboBox<int?, DmChungDto>();
    private List<TaiKhoanDto> TaiKhoanDtos = new List<TaiKhoanDto>();
    private SfComboBox<int?, TaiKhoanDto> ddTKK = new SfComboBox<int?, TaiKhoanDto>();
    private SfComboBox<int?, TaiKhoanDto> ddTKGV = new SfComboBox<int?, TaiKhoanDto>();
    private SfComboBox<int?, TaiKhoanDto> ddTKDT = new SfComboBox<int?, TaiKhoanDto>();
    private SfComboBox<int?, TaiKhoanDto> ddTKHBT = new SfComboBox<int?, TaiKhoanDto>();
    private SfComboBox<int?, TaiKhoanDto> ddTKSPDD = new SfComboBox<int?, TaiKhoanDto>();
    private SfComboBox<int?, TaiKhoanDto> ddTKCLGVT = new SfComboBox<int?, TaiKhoanDto>();
    private List<NhomVatTuDto> NhomVatTu1Dtos = new List<NhomVatTuDto>();
    private SfComboBox<int?, NhomVatTuDto> ddNVT1 = new SfComboBox<int?, NhomVatTuDto>();
    private List<NhomVatTuDto> NhomVatTu2Dtos = new List<NhomVatTuDto>();
    private SfComboBox<int?, NhomVatTuDto> ddNVT2 = new SfComboBox<int?, NhomVatTuDto>();
    private List<NhomVatTuDto> NhomVatTu3Dtos = new List<NhomVatTuDto>();
    private SfComboBox<int?, NhomVatTuDto> ddNVT3 = new SfComboBox<int?, NhomVatTuDto>();
    private List<KhoDto> KhoDtos = new List<KhoDto>();
    private SfComboBox<int?, KhoDto> ddK = new SfComboBox<int?, KhoDto>();
    //Modal create end

    //Modal gộp mã
    private bool ShowModalGopMa = false;
    private bool IsGopMa = false;
    // Modal gộp mã end

    //Modal message
    private bool ShowModalMessage = false;
    private bool CheckMessage = false;
    private string? TextMessage { set; get; }
    private bool CheckDelete { set; get; }
    //Modal message end

    private SfGrid<VatTuDto> SfGridVT = new SfGrid<VatTuDto>();
    public List<VatTuDto> VatTuDtos = new List<VatTuDto>();

    protected override async Task OnInitializedAsync()
    {
        if (!hasRefreshed)
        {
            VatTuDtos = await _vatTu.GetListAsync("");
            DMChungDtos = await _dmChung.GetListAsync(SystemConstants.DmChung.LoaiVatTu.Id);
            this.DefaultValueLoaiVatTu(DMChungDtos);
            TaiKhoanDtos = await _taiKhoan.GetListAsync();
            this.DefaultValueTaiKhoans(TaiKhoanDtos);
            NhomVatTu1Dtos = await _vatTu.GetListNhomVatTuAsync(1);
            NhomVatTu2Dtos = await _vatTu.GetListNhomVatTuAsync(2);
            NhomVatTu3Dtos = await _vatTu.GetListNhomVatTuAsync(3);
            KhoDtos = await _kho.GetListAsync();
            hasRefreshed = true;

        }
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
        {
            await _jsRuntime.InvokeVoidAsync("renameShowColumn", "Tìm kiếm...");
            await _jsRuntime.InvokeVoidAsync("getDotNetObjectReference", DotNetObjectReference.Create(this));
        }
    }
    private async Task SaveAsync()
    {
        try
        {
            if (CheckAdd)
            {
                var result = await _vatTu.CreateAsync(SelectVatTu);
                if (result.IsSuccessed)
                {
                    CheckMessage = true;
                    VatTuDtos = await _vatTu.GetListAsync("");
                    ShowModalMessage = true;
                    TextMessage = result.Message;
                    ShowModalCreate = false;
                }
                else
                {
                    CheckMessage = false;
                    TextMessage = result.Message;
                    ShowModalMessage = true;
                }
            }
            else
            {
                var result = await _vatTu.UpdateAsync(SelectVatTu.Id, SelectVatTu);
                if (result.IsSuccessed)
                {
                    CheckAdd = true;
                    CheckMessage = true;
                    VatTuDtos = await _vatTu.GetListAsync("");
                    ShowModalMessage = true;
                    TextMessage = result.Message;
                    ShowModalCreate = false;
                }
                else
                {
                    CheckAdd = false;
                    CheckMessage = false;
                    TextMessage = result.Message;
                    ShowModalMessage = true;
                }
            }

        }
        catch (Exception)
        {
            CheckMessage = false;
            TextMessage = "Lỗi! Vui lòng liên hệ bộ phận kỹ thuật để được hỗ trợ.";
            ShowModalMessage = true;
        }
        StateHasChanged();
    }

    //Navbar menu
    private void AddAsync()
    {
        ShowModalCreate = true;
    }
    private async Task EditAsync()
    {
        CheckAdd = false;
        SelectVatTu = new VatTuRequest();
        var selectedRecords = await this.SfGridVT.GetSelectedRecordsAsync();
        if (selectedRecords.Count > 0)
        {
            var id = selectedRecords.First().Id;
            CheckPhatSinh = await _vatTu.CheckPhatSinh(id);
            var vt = await _vatTu.GetByIdAsync(id);
            SelectVatTu = _objectMapper.Map<VatTuDto, VatTuRequest>(vt);
            ShowModalCreate = true;
        }
        else
        {
            CheckAdd = true;
            CheckMessage = false;
            TextMessage = "Bạn chưa chọn dòng.";
            ShowModalMessage = true;
        }

        StateHasChanged();        
    }
    private async Task DeleteAsync()
    {
        var selectedRecords = await SfGridVT.GetSelectedRecordsAsync();
        if (selectedRecords.Count > 0)
        {
            CheckDelete = true;
            CheckMessage = false;
            string names = "";
            foreach (var data in selectedRecords)
                names += data.VatTuUd + ", ";
            names = names.TrimEnd(',', ' ');
            TextMessage = $"Xác nhận xóa <b>{selectedRecords.Count.ToString("00")}</b> vật tư có mã {(selectedRecords.Count > 1 ? "gồm" : "")}: <span style='color:red'>{names}</span>";
            ShowModalMessage = true;
        }
        else
        {
            TextMessage = "Bạn chưa chọn dòng.";
            CheckMessage = false;
            ShowModalMessage = true;
            CheckDelete = false;
        }
        StateHasChanged();
    }
    private async Task ConfirmDeleleAsync()
    {
        CheckDelete = false;
        var selectedRecords = await SfGridVT.GetSelectedRecordsAsync();
        if (selectedRecords.Count > 0)
        {
            var ids = new List<int?>();
            foreach (var data in selectedRecords)
                ids.Add(data.Id);
            var result = await _vatTu.DeleteListAsync(ids);
            if (result.IsSuccessed)
            {              
                ShowModalMessage = false;
            }
            else
            {
                TextMessage = result.Message;
                ShowModalMessage = true;
                CheckMessage = false;
            }
            VatTuDtos = await _vatTu.GetListAsync("");
        }
        StateHasChanged();
    }
    private async  Task GopMaAsync()
    { 
        try
        {
            SelectVatTu = new VatTuRequest();
            var selectedRecords = await SfGridVT.GetSelectedRecordsAsync();
            if (selectedRecords.Count > 0)
            {
                var vt = await _vatTu.GetByIdAsync(selectedRecords.First().Id);
                SelectVatTu = _objectMapper.Map<VatTuDto, VatTuRequest>(vt);
                ShowModalGopMa = true;
            }
            else
            {
                CheckMessage = false;
                TextMessage = "Bạn chưa chọn dòng.";
                ShowModalMessage = true;
            }
        }
        catch (Exception)
        {
            CheckMessage = false;
            TextMessage = "Lỗi! Vui lòng liên hệ bộ phận kỹ thuật để được hỗ trợ.";
            ShowModalMessage = true;
        }

        StateHasChanged();
    }
    private async Task ConfirmGopMa()
    {
        if (IsGopMa)
        {
            try
            {
                var selectedRecords = await SfGridVT.GetSelectedRecordsAsync();
                if (selectedRecords.Count > 0)
                {
                    var id = selectedRecords.First().Id;
                    var vatTuIdNew = await _localStorage.GetItemAsync<string>("vatTuIdNew");
                    await _vatTu.GopMaAsync(id, Int32.Parse(vatTuIdNew), SelectVatTu.VatTuUdNew);
                    await _localStorage.RemoveItemAsync("vatTuIdNew");
                    VatTuDtos = await _vatTu.GetListAsync("");
                    IsGopMa = false;
                    ShowModalGopMa = false;
                }

            }
            catch (Exception)
            {
                CheckMessage = false;
                TextMessage = "Lỗi! Vui lòng liên hệ bộ phận kỹ thuật để được hỗ trợ.";
                ShowModalMessage = true;
            }

        }
        StateHasChanged();
    }
    public void PrintAsync()
    {
    }
    private async Task ExportToExcelAsync()
    {
        string name = "Danh sách vật tư";
        var content = _vatTu.ExportExcel(VatTuDtos, name);
        var fileName = $"{name}.xlsx";
        var contentType = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet";
        var base64 = Convert.ToBase64String(content);
        await _jsRuntime.InvokeVoidAsync("downloadFileFromBase64", fileName, contentType, base64);
    }

    public async Task ShowColumnAsync()
    {
        await this.SfGridVT.OpenColumnChooserAsync();
    }
    //Call Back From Js function
    [JSInvokable("searchInputNavbar")]
    public async Task SearchAsync(string search)
    {
        await this.SfGridVT.SearchAsync(search);
    }     
    private async Task RefreshAsync()
    {
        await this.SfGridVT.SearchAsync(string.Empty);
        VatTuDtos = await _vatTu.GetListAsync("");
        StateHasChanged();
    }    
    //Navbar menu end
    //Modal create
    private void ConvertToUpperCase(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        if (args.Value != null)
        {
            var text = args.Value.ToString();
            if (text != null)
                SelectVatTu.VatTuUd = text.ToUpper();
        }
    }
    public async Task OnFilteringLoaiVatTu(Syncfusion.Blazor.DropDowns.FilteringEventArgs args)
    {
        args.PreventDefaultAction = true;
        var orWhere = WhereFilter.Or(new List<WhereFilter> {
            new WhereFilter() { Field = "DMChungUd", Operator = "contains", value = args.Text, IgnoreCase = true },
            new WhereFilter() { Field = "DMChungNm", Operator = "contains", value = args.Text, IgnoreCase = true }
        });
        var query = new Query().Where(orWhere);
        query = !string.IsNullOrEmpty(args.Text) ? query : new Query();
        await ddLVT.FilterAsync(DMChungDtos, query);
    }
    private void OnChangeLoaiVatTu(ChangeEventArgs<int?, DmChungDto> args)
    {
        if (args.ItemData != null)
        {
            SelectVatTu.LoaiVatTuNm = args.ItemData.DMChungNm;
        }
    }
    public async Task OnFilteringTaiKhoanKho(Syncfusion.Blazor.DropDowns.FilteringEventArgs args)
    {
        args.PreventDefaultAction = true;
        var orWhere = WhereFilter.Or(new List<WhereFilter> {
            new WhereFilter() { Field = "TaiKhoanUd", Operator = "contains", value = args.Text, IgnoreCase = true },
            new WhereFilter() { Field = "TaiKhoanNm", Operator = "contains", value = args.Text, IgnoreCase = true }
        });
        var query = new Query().Where(orWhere);
        query = !string.IsNullOrEmpty(args.Text) ? query : new Query();
        await ddTKK.FilterAsync(TaiKhoanDtos, query);
    }
    private void OnValueChangeTaiKhoanKho(ChangeEventArgs<int?, TaiKhoanDto> args)
    {
        if (args.ItemData != null)
        {
            SelectVatTu.TkKhoNm = args.ItemData.TaiKhoanNm;
        }
    } 
    public async Task OnFilteringTkGiaVon(Syncfusion.Blazor.DropDowns.FilteringEventArgs args)
    {
        args.PreventDefaultAction = true;
        var orWhere = WhereFilter.Or(new List<WhereFilter> {
            new WhereFilter() { Field = "TaiKhoanUd", Operator = "contains", value = args.Text, IgnoreCase = true },
            new WhereFilter() { Field = "TaiKhoanNm", Operator = "contains", value = args.Text, IgnoreCase = true }
        });
        var query = new Query().Where(orWhere);
        query = !string.IsNullOrEmpty(args.Text) ? query : new Query();
        await ddTKGV.FilterAsync(TaiKhoanDtos, query);
    }
    private void OnValueChangeTkGiaVon(ChangeEventArgs<int?, TaiKhoanDto> args)
    {
        if (args.ItemData != null)
        {
            SelectVatTu.TkGiaVonNm = args.ItemData.TaiKhoanNm;
        }
    }
    public async Task OnFilteringTkDoanhThu(Syncfusion.Blazor.DropDowns.FilteringEventArgs args)
    {
        args.PreventDefaultAction = true;
        var orWhere = WhereFilter.Or(new List<WhereFilter> {
            new WhereFilter() { Field = "TaiKhoanUd", Operator = "contains", value = args.Text, IgnoreCase = true },
            new WhereFilter() { Field = "TaiKhoanNm", Operator = "contains", value = args.Text, IgnoreCase = true }
        });
        var query = new Query().Where(orWhere);
        query = !string.IsNullOrEmpty(args.Text) ? query : new Query();
        await ddTKDT.FilterAsync(TaiKhoanDtos, query);
    }
    private void OnValueChangeTkDoanhThu(ChangeEventArgs<int?, TaiKhoanDto> args)
    {
        if (args.ItemData != null)
        {
            SelectVatTu.TkDoanhThuNm = args.ItemData.TaiKhoanNm;
        }
    }
    public async Task OnFilteringTkHangBiTra(Syncfusion.Blazor.DropDowns.FilteringEventArgs args)
    {
        args.PreventDefaultAction = true;
        var orWhere = WhereFilter.Or(new List<WhereFilter> {
            new WhereFilter() { Field = "TaiKhoanUd", Operator = "contains", value = args.Text, IgnoreCase = true },
            new WhereFilter() { Field = "TaiKhoanNm", Operator = "contains", value = args.Text, IgnoreCase = true }
        });
        var query = new Query().Where(orWhere);
        query = !string.IsNullOrEmpty(args.Text) ? query : new Query();
        await ddTKHBT.FilterAsync(TaiKhoanDtos, query);
    }
    private void OnValueChangeTkHangBiTra(ChangeEventArgs<int?, TaiKhoanDto> args)
    {
        if (args.ItemData != null)
        {
            SelectVatTu.TkHangBiTraNm = args.ItemData.TaiKhoanNm;
        }
    }
    public async Task OnFilteringTkSpDoDang(Syncfusion.Blazor.DropDowns.FilteringEventArgs args)
    {
        args.PreventDefaultAction = true;
        var orWhere = WhereFilter.Or(new List<WhereFilter> {
            new WhereFilter() { Field = "TaiKhoanUd", Operator = "contains", value = args.Text, IgnoreCase = true },
            new WhereFilter() { Field = "TaiKhoanNm", Operator = "contains", value = args.Text, IgnoreCase = true }
        });
        var query = new Query().Where(orWhere);
        query = !string.IsNullOrEmpty(args.Text) ? query : new Query();
        await ddTKSPDD.FilterAsync(TaiKhoanDtos, query);
    }
    private void OnValueChangeTkSpDoDang(ChangeEventArgs<int?, TaiKhoanDto> args)
    {
        if (args.ItemData != null)
        {
            SelectVatTu.TkSpDoDangNm = args.ItemData.TaiKhoanNm;
        }
    }
    public async Task OnFilteringTkChenhLechGiaVt(Syncfusion.Blazor.DropDowns.FilteringEventArgs args)
    {
        args.PreventDefaultAction = true;
        var orWhere = WhereFilter.Or(new List<WhereFilter> {
            new WhereFilter() { Field = "TaiKhoanUd", Operator = "contains", value = args.Text, IgnoreCase = true },
            new WhereFilter() { Field = "TaiKhoanNm", Operator = "contains", value = args.Text, IgnoreCase = true }
        });
        var query = new Query().Where(orWhere);
        query = !string.IsNullOrEmpty(args.Text) ? query : new Query();
        await ddTKCLGVT.FilterAsync(TaiKhoanDtos, query);
    }
    private void OnValueChangeTkChenhLechGiaVt(ChangeEventArgs<int?, TaiKhoanDto> args)
    {
        if (args.ItemData != null)
        {
            SelectVatTu.TkChenhLechGiaVtNm = args.ItemData.TaiKhoanNm;
        }
    }
    public async Task OnFilteringNhomVatTu1(Syncfusion.Blazor.DropDowns.FilteringEventArgs args)
    {
        args.PreventDefaultAction = true;
        var orWhere = WhereFilter.Or(new List<WhereFilter> {
            new WhereFilter() { Field = "NhomVatTuUd", Operator = "contains", value = args.Text, IgnoreCase = true },
            new WhereFilter() { Field = "NhomVatTuUd", Operator = "contains", value = args.Text, IgnoreCase = true }
        });
        var query = new Query().Where(orWhere);
        query = !string.IsNullOrEmpty(args.Text) ? query : new Query();
        await ddNVT1.FilterAsync(NhomVatTu1Dtos, query);
    }
    private void OnValueChangeNhomVatTu1(ChangeEventArgs<int?, NhomVatTuDto> args)
    {
        if (args.ItemData != null)
        {
            SelectVatTu.NhomVtNm1 = args.ItemData.NhomVatTuNm;
        }
    }
    public async Task OnFilteringNhomVatTu2(Syncfusion.Blazor.DropDowns.FilteringEventArgs args)
    {
        args.PreventDefaultAction = true;
        var orWhere = WhereFilter.Or(new List<WhereFilter> {
            new WhereFilter() { Field = "NhomVatTuUd", Operator = "contains", value = args.Text, IgnoreCase = true },
            new WhereFilter() { Field = "NhomVatTuUd", Operator = "contains", value = args.Text, IgnoreCase = true }
        });
        var query = new Query().Where(orWhere);
        query = !string.IsNullOrEmpty(args.Text) ? query : new Query();
        await ddNVT2.FilterAsync(NhomVatTu2Dtos, query);
    }
    private void OnValueChangeNhomVatTu2(ChangeEventArgs<int?, NhomVatTuDto> args)
    {
        if (args.ItemData != null)
        {
            SelectVatTu.NhomVtNm2 = args.ItemData.NhomVatTuNm;
        }
    }
    public async Task OnFilteringNhomVatTu3(Syncfusion.Blazor.DropDowns.FilteringEventArgs args)
    {
        args.PreventDefaultAction = true;
        var orWhere = WhereFilter.Or(new List<WhereFilter> {
            new WhereFilter() { Field = "NhomVatTuUd", Operator = "contains", value = args.Text, IgnoreCase = true },
            new WhereFilter() { Field = "NhomVatTuUd", Operator = "contains", value = args.Text, IgnoreCase = true }
        });
        var query = new Query().Where(orWhere);
        query = !string.IsNullOrEmpty(args.Text) ? query : new Query();
        await ddNVT3.FilterAsync(NhomVatTu3Dtos, query);
    }
    private void OnValueChangeNhomVatTu3(ChangeEventArgs<int?, NhomVatTuDto> args)
    {
        if (args.ItemData != null)
        {
            SelectVatTu.NhomVtNm3 = args.ItemData.NhomVatTuNm;
        }
    }
    public async Task OnFilteringKho(Syncfusion.Blazor.DropDowns.FilteringEventArgs args)
    {
        args.PreventDefaultAction = true;
        var orWhere = WhereFilter.Or(new List<WhereFilter> {
            new WhereFilter() { Field = "KhoUd", Operator = "contains", value = args.Text, IgnoreCase = true },
            new WhereFilter() { Field = "KhoNm", Operator = "contains", value = args.Text, IgnoreCase = true }
        });
        var query = new Query().Where(orWhere);
        query = !string.IsNullOrEmpty(args.Text) ? query : new Query();
        await ddK.FilterAsync(KhoDtos, query);
    }
    private void OnValueChangeKho(ChangeEventArgs<int?, KhoDto> args)
    {
        if (args.ItemData != null)
        {
            SelectVatTu.KhoNm = args.ItemData.KhoNm;
        }
    }

    private void CloseModalCreate()
    {
        ShowModalCreate = false;
        CheckAdd = true;
    }
    private void Reset()
    {
        if (CheckAdd)
        {
            SelectVatTu = new VatTuRequest()
                {
                    CachTinhGia = 1,
                    IsTheoDoiTonKho = true,
                    SLTonToiDa =0,
                    SLTonToiThieu = 0
                };
        }
        else
        {

            SelectVatTu = new VatTuRequest()
                {
                    CachTinhGia = 1,
                    IsTheoDoiTonKho = true,
                    SLTonToiDa = 0,
                    SLTonToiThieu = 0,
                    VatTuUd = SelectVatTu.VatTuUd
                };
        }

        StateHasChanged();
    }
    //Modal create end

    private void CloseModalMessage()
    {
        ShowModalMessage = false;
        CheckDelete = false;
    }

    public async Task RecordDoubleClickHandler(RecordDoubleClickEventArgs<VatTuDto> args)
    {
        CheckAdd = false;
        SelectVatTu = new VatTuRequest();
        CheckPhatSinh = await _vatTu.CheckPhatSinh(args.RowData.Id);
        var kh = await _vatTu.GetByIdAsync(args.RowData.Id);
        SelectVatTu = _objectMapper.Map<VatTuDto, VatTuRequest>(kh);
        ShowModalCreate = true;
        StateHasChanged();        
    }
    private void DefaultValueLoaiVatTu(List<DmChungDto> dmChungDtos)
    {
        var res = dmChungDtos.FirstOrDefault(x => x.DMChungUd == "HH");
        SelectVatTu.LoaiVatTu = res?.Id;
        SelectVatTu.LoaiVatTuNm = res?.DMChungNm;
    }
    private void DefaultValueTaiKhoans(List<TaiKhoanDto> taiKhoanDtos)
    {
        var tkKho = taiKhoanDtos.FirstOrDefault(x => x.TaiKhoanUd == "1561");
        SelectVatTu.TkKho = tkKho?.Id;
        SelectVatTu.TkKhoNm = tkKho?.TaiKhoanNm;
        var tkGiaVon = taiKhoanDtos.FirstOrDefault(x => x.TaiKhoanUd == "632");
        SelectVatTu.TkGiaVon = tkGiaVon?.Id;
        SelectVatTu.TkGiaVonNm = tkGiaVon?.TaiKhoanNm;
        SelectVatTu.TkChenhLechGiaVt = tkGiaVon?.Id;
        SelectVatTu.TkChenhLechGiaVtNm = tkGiaVon?.TaiKhoanNm;
        var tkDoanhThu = taiKhoanDtos.FirstOrDefault(x => x.TaiKhoanUd == "5111");
        SelectVatTu.TkDoanhThu = tkDoanhThu?.Id;
        SelectVatTu.TkDoanhThuNm = tkDoanhThu?.TaiKhoanNm;
        var tkHangBiTra = taiKhoanDtos.FirstOrDefault(x => x.TaiKhoanUd == "5212");
        SelectVatTu.TkHangBiTra = tkHangBiTra?.Id;
        SelectVatTu.TkHangBiTraNm = tkHangBiTra?.TaiKhoanNm;
        var tkSpDoDang = taiKhoanDtos.FirstOrDefault(x => x.TaiKhoanUd == "1112");
        SelectVatTu.TkSpDoDang = tkSpDoDang?.Id;
        SelectVatTu.TkSpDoDangNm = tkSpDoDang?.TaiKhoanNm;
    }
    private async Task GopMaOnInput(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        if (args.Value != null)
        {
            var text = args.Value.ToString();
            if (!string.IsNullOrEmpty(text))
            {
                IsGopMa = true;
                SelectVatTu.VatTuUdNew = text.ToUpper();
                var vt = await _vatTu.GetByVatTuUdAsync(SelectVatTu.VatTuUdNew);
                if (vt != null)
                {
                    SelectVatTu.VatTuNmNew = vt.VatTuNm;
                    await _localStorage.SetItemAsync("vatTuIdNew", vt.Id);
                }
                else
                {
                    SelectVatTu.VatTuNmNew = "Không tìm thấy vật tư tương ứng!";
                    await _localStorage.SetItemAsync("vatTuIdNew", 0);
                }
            }
            else
                IsGopMa = false;
        }
        StateHasChanged();
    }
    private async Task CloseModalGopMa()
    {
        ShowModalGopMa = false;
        CheckAdd = true;
        IsGopMa = false;
        await _localStorage.RemoveItemAsync("vatTuIdNew");
    }
}