@page "/phieuxuatkho"
@using Blazored.LocalStorage
@using tamkhoatech.ACWeb.Blazor.Pages.Common
@using tamkhoatech.ACWeb.Constants
@using tamkhoatech.ACWeb.Dto
@using tamkhoatech.ACWeb.IService

@inject NavigationManager NavigationManager
@inject IJSRuntime JSRunTime
@inject ILocalStorageService _localStorage
@inject IPhieuXuatKhoService _phieuXuatKho

<link rel="stylesheet" href="/Css/danh-sach-phieu.css">
@if (hasRefreshed)
{
    <div class="row gy-2 gx-3 align-items-center">
        <div class="col-auto">
            <h4>
                <label>
                    <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="currentColor" class="bi bi-database-fill-add" viewBox="0 0 16 16">
                        <path d="M12.5 16a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7m.5-5v1h1a.5.5 0 0 1 0 1h-1v1a.5.5 0 0 1-1 0v-1h-1a.5.5 0 0 1 0-1h1v-1a.5.5 0 0 1 1 0M8 1c-1.573 0-3.022.289-4.096.777C2.875 2.245 2 2.993 2 4s.875 1.755 1.904 2.223C4.978 6.711 6.427 7 8 7s3.022-.289 4.096-.777C13.125 5.755 14 5.007 14 4s-.875-1.755-1.904-2.223C11.022 1.289 9.573 1 8 1" />
                        <path d="M2 7v-.839c.457.432 1.004.751 1.49.972C4.722 7.693 6.318 8 8 8s3.278-.307 4.51-.867c.486-.22 1.033-.54 1.49-.972V7c0 .424-.155.802-.411 1.133a4.51 4.51 0 0 0-4.815 1.843A12 12 0 0 1 8 10c-1.573 0-3.022-.289-4.096-.777C2.875 8.755 2 8.007 2 7m6.257 3.998L8 11c-1.682 0-3.278-.307-4.51-.867-.486-.22-1.033-.54-1.49-.972V10c0 1.007.875 1.755 1.904 2.223C4.978 12.711 6.427 13 8 13h.027a4.55 4.55 0 0 1 .23-2.002m-.002 3L8 14c-1.682 0-3.278-.307-4.51-.867-.486-.22-1.033-.54-1.49-.972V13c0 1.007.875 1.755 1.904 2.223C4.978 15.711 6.427 16 8 16c.536 0 1.058-.034 1.555-.097a4.5 4.5 0 0 1-1.3-1.905" />
                    </svg>
                    <strong>Phiếu xuất kho. Từ ngày @TuNgay?.ToString("dd/MM/yyyy") đến @DenNgay?.AddDays(-1).ToString("dd/MM/yyyy")</strong>
                </label>
            </h4>
        </div>
    </div>
    <br>
    <div class="row g-3">
        <NavbarMenu Content="@ContentNavbarMenu" IsAdd="true" OnValidSubmitAdd="@AddAsync" 
                                         IsEdit="true" OnValidSubmitEdit="@EditAsync" 
                                         IsDelete="true" OnValidSubmitDelete="@DeleteAsync"
                                         IsPrint = "true" OnValidSubmitPrint="@PrintAsync"
                                         IsShowColumn="true" OnValidSubmitShowColumn="@ShowColumnAsync"
                                         IsRefresh="true" OnValidSubmitRefresh="@RefreshAsync"
                                         IsSearch="true" OnValidSubmitSearch="@SearchAsync"
                                         HelpUrl=@HelpUrl />
    </div>
    <div class="thong-ke">
        <p>
            <span class="text-thongke">Số lượng chứng từ:</span> <span class="number-thongke">@TongTien.SoLuongChungTu</span> <strong>|</strong>
            <span class="text-thongke">Tổng phát sinh:</span> <span class="number-thongke">@TongTien.TongTienPhatSinhVND?.ToString("N0")</span> <strong>|</strong>
            <span class="text-thongke">Tổng phát sinh ngoại tệ:</span> <span class="number-thongke"> @TongTien.TongTienPhatSinh?.ToString("N2")</span>
        </p>
    </div>
    <div class="row g-3">
        <SfGrid ID="PhieuXuatKho" @ref="SfGridPXK" DataSource="@PhieuXuatKhoDtos" AllowSelection="true" EnablePersistence="true" AllowPaging="true" AllowSorting="true" AllowResizing="true" AllowReordering="true" ShowColumnChooser="true" Width="auto" Height="360">
            <GridColumnChooserSettings>
                <FooterTemplate>
                    @{
                        var ContextData = context as ColumnChooserFooterTemplateContext;
                        if (ContextData != null)
                        {
                            var visibles = ContextData.Columns.Where(x => x.Visible).Select(x => x.HeaderText).ToArray();
                            var hiddens = ContextData.Columns.Where(x => !x.Visible).Select(x => x.HeaderText).ToArray();
                            <SfButton IsPrimary="true" OnClick="@(async () => {
                      await SfGridPXK.ShowColumnsAsync(visibles);
                      await SfGridPXK.HideColumnsAsync(hiddens); })">Nhận</SfButton>
                            <SfButton @onclick="@(async () => await ContextData.CancelAsync())">Hủy</SfButton>
                        }
                    }
                </FooterTemplate>
            </GridColumnChooserSettings>
            <GridSelectionSettings CheckboxMode="CheckboxSelectionType.ResetOnRowClick" Type="Syncfusion.Blazor.Grids.SelectionType.Single"></GridSelectionSettings>
            <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false"></GridEditSettings>
            <GridPageSettings PageSize="10"></GridPageSettings>
            <GridEvents OnRecordClick="RecordClickHandler" OnRecordDoubleClick="RecordDoubleClickHandler" TValue="PhieuXuatKhoDto"></GridEvents>
            <GridColumns>
                <GridColumn Type="ColumnType.CheckBox" TextAlign="TextAlign.Center" Width="50"></GridColumn>
                <GridColumn Field=@nameof(PhieuXuatKhoDto.Id) HeaderText="#" IsPrimaryKey="true" Visible="false" ShowInColumnChooser="false" TextAlign="TextAlign.Left" Width="120"></GridColumn>
                <GridColumn Field=@nameof(PhieuXuatKhoDto.NgayHt) HeaderText="Ngày chứng từ" ShowInColumnChooser="false" Format="dd/MM/yyyy" TextAlign="TextAlign.Left" Width="120"></GridColumn>
                <GridColumn Field=@nameof(PhieuXuatKhoDto.SoCt) HeaderText="Số chứng từ" TextAlign="TextAlign.Left" Width="120"></GridColumn>
                <GridColumn Field=@nameof(PhieuXuatKhoDto.KhachHangUd) HeaderText="Mã khách hàng" TextAlign="TextAlign.Left" Width="120"></GridColumn>
                <GridColumn Field=@nameof(PhieuXuatKhoDto.KhachHangNm) HeaderText="Tên khách hàng" TextAlign="TextAlign.Left" Width="120"></GridColumn>
                <GridColumn Field=@nameof(PhieuXuatKhoDto.TongTienVND) HeaderText="Tổng Tiền" Format="N0" ShowInColumnChooser="false" TextAlign="TextAlign.Right" Width="120"></GridColumn>
                <GridColumn Field=@nameof(PhieuXuatKhoDto.DienGiai) HeaderText="Diễn giải" TextAlign="TextAlign.Left" Width="300"></GridColumn>
                <GridColumn Field=@nameof(PhieuXuatKhoDto.NgoaiTeUd) HeaderText="Mã ngoại tệ" TextAlign="TextAlign.Left" Width="120"></GridColumn>
                <GridColumn Field=@nameof(PhieuXuatKhoDto.TyGia) HeaderText="Tỷ giá" Format="N2" TextAlign="TextAlign.Right" Width="120"></GridColumn>
                <GridColumn Field=@nameof(PhieuXuatKhoDto.TongTien) HeaderText="Tổng tiền ngoại tệ" ShowInColumnChooser="false" Format="N2" TextAlign="TextAlign.Right" Width="180"></GridColumn>
                <GridColumn Field=@nameof(PhieuXuatKhoDto.GiaoDichUd) HeaderText="Mã giao dịch" TextAlign="TextAlign.Left" Width="180"></GridColumn>
                <GridColumn HeaderText="Chi tiết" TextAlign="TextAlign.Center" Width="80">
                    <Template>
                        <SfDropDownList TValue="int?" TItem="PhieuXuatKhoCtDto" Placeholder="Xem" DataSource="@PhieuXuatKhoCtDtos" CssClass="e-multi-column e-small" PopupWidth="1300" PopupHeight="300">
                            <DropDownListTemplates TItem="PhieuXuatKhoCtDto">
                                <HeaderTemplate>
                                    <table class="header-combo">
                                        <thead>
                                            <tr>
                                                <th>Mã vt</th>
                                                <th style="width:200px">Tên vt</th>
                                                <th >Đvt</th>
                                                <th >Mã kho</th>
                                                <th >Số lượng</th>
                                                <th >Đơn giá</th>
                                                <th >Thành tiền</th>                                               
                                                <th >Đơn giá nt</th>
                                                <th >Tt nt</th>
                                                <th >Tk nợ</th>
                                                <th >Tk có</th>
                                            </tr>
                                        </thead>
                                    </table>
                                </HeaderTemplate>
                                <ItemTemplate Context="itemContext">
                                    <table>
                                        <tbody>
                                            <tr>
                                                <td><span>@((itemContext as PhieuXuatKhoCtDto).VatTuUd)</span></td>
                                                <td style="width:200px"><span>@((itemContext as PhieuXuatKhoCtDto).VatTuNm)</span></td>
                                                <td ><span>@((itemContext as PhieuXuatKhoCtDto).DonViTinh)</span></td>
                                                <td ><span>@((itemContext as PhieuXuatKhoCtDto).KhoUd)</span></td>
                                                <td><span>@((itemContext as PhieuXuatKhoCtDto).SoLuong?.ToString("N0"))</span></td>
                                                <td><span>@((itemContext as PhieuXuatKhoCtDto).GiaVND?.ToString("N0"))</span></td>
                                                <td><span>@((itemContext as PhieuXuatKhoCtDto).TienVND?.ToString("N0"))</span></td>
                                                <td><span>@((itemContext as PhieuXuatKhoCtDto).Gia?.ToString("N2"))</span></td>
                                                <td><span>@((itemContext as PhieuXuatKhoCtDto).Tien?.ToString("N2"))</span></td>
                                                <td><span>@((itemContext as PhieuXuatKhoCtDto).GhiNoTkUd)</span></td>
                                                <td><span>@((itemContext as PhieuXuatKhoCtDto).GhiCoTkUd)</span></td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </ItemTemplate>
                            </DropDownListTemplates>
                        </SfDropDownList>
                    </Template>
                </GridColumn>
            </GridColumns>
            <GridAggregates>
                <GridAggregate>
                    <GridAggregateColumns>
                        <GridAggregateColumn Field="@nameof(PhieuXuatKhoDto.NgayHt)" Type="AggregateType.Sum" Format="N0">
                            <FooterTemplate>
                                @{
                                    var SumValue = (context as AggregateTemplateContext);
                                    <div style="color:black">
                                        Tổng tiền:
                                    </div>
                                }
                            </FooterTemplate>
                        </GridAggregateColumn>
                        <GridAggregateColumn Field="@nameof(PhieuXuatKhoDto.TongTienVND)" Type="AggregateType.Sum" Format="N0">
                            <FooterTemplate>
                                @{
                                    var SumValue = (context as AggregateTemplateContext);
                                    <div style="color:black">
                                        @SumValue?.Sum
                                    </div>
                                }
                            </FooterTemplate>
                        </GridAggregateColumn>
                        <GridAggregateColumn Field="@nameof(PhieuXuatKhoDto.TongTien)" Type="AggregateType.Sum" Format="N2">
                            <FooterTemplate>
                                @{
                                    var SumValue = (context as AggregateTemplateContext);
                                    <div style="color:black">
                                        @SumValue?.Sum
                                    </div>
                                }
                            </FooterTemplate>
                        </GridAggregateColumn>
                    </GridAggregateColumns>
                </GridAggregate>
            </GridAggregates>
        </SfGrid>
    </div>
    <ModalErrorMessage ShowModalMessage="@ShowModalMessage" CheckMessage="@CheckMessage" TextMessage="@TextMessage" IsDelete="@CheckDelete"
                       OnCloseMessage="CloseModalMessage" OnConfirmDelele="ConfirmDeleleAsync" />
}
else
{
    <h3>Vui lòng chờ....</h3>
}
@code {
    private DateTime? TuNgay { set; get; }
    private DateTime? DenNgay { set; get; }
    private string ContentNavbarMenu = "phiếu xuất kho";
    private string HelpUrl = "https://tamkhoatech.vn/huong-dan-su-dung/phieu-xuat-kho-noi-bo/";

    private bool hasRefreshed = false;
    private SfGrid<PhieuXuatKhoDto> SfGridPXK = new SfGrid<PhieuXuatKhoDto>();
    public List<PhieuXuatKhoDto> PhieuXuatKhoDtos = new List<PhieuXuatKhoDto>();
    public List<PhieuXuatKhoCtDto> PhieuXuatKhoCtDtos = new List<PhieuXuatKhoCtDto>();

    private TongTienDto TongTien = new TongTienDto();

    private bool ShowModalMessage = false;
    private bool CheckMessage = false;
    private string? TextMessage { set; get; }
    private bool CheckDelete { set; get; }

    protected override async Task OnInitializedAsync()
    {
        if (!hasRefreshed)
        {
            string uri = NavigationManager.BaseUri + await _localStorage.GetItemAsync<string>("urlPath");
            if (NavigationManager.Uri != uri)
            {
                await _localStorage.SetItemAsync("urlPath", SystemConstants.UrlPath.PhieuXuatKho);
                NavigationManager.NavigateTo(SystemConstants.UrlPath.ThoiGianLamViec, true);
            }
            else
            {

                TuNgay = await _localStorage.GetItemAsync<string>("TuNgayLamViec") != null ? DateTime.Parse(await _localStorage.GetItemAsync<string>("TuNgayLamViec")) : null;
                DenNgay = await _localStorage.GetItemAsync<string>("DenNgayLamViec") != null ? DateTime.Parse(await _localStorage.GetItemAsync<string>("DenNgayLamViec")).AddDays(1) : null;
                if (TuNgay != null && DenNgay != null)
                {
                    PhieuXuatKhoDtos = await _phieuXuatKho.GetListAsync(TuNgay, DenNgay);
                    await TongTienThongKeAsync();
                    hasRefreshed = true;
                }
            }
        }
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
        {
            await JSRunTime.InvokeVoidAsync("renameShowColumn", "Tìm kiếm...");
            await JSRunTime.InvokeVoidAsync("getDotNetObjectReference", DotNetObjectReference.Create(this));
        }
    }
    private async Task TongTienThongKeAsync()
    {
        TongTien = await _phieuXuatKho.TongTienPhatSinhAsync(PhieuXuatKhoDtos);
    }
    private void AddAsync()
    {
        NavigationManager.NavigateTo($"{SystemConstants.UrlPath.PhieuXuatKho}/create", true);
    }
    private async Task EditAsync()
    {
        var SelectedRecords = await SfGridPXK.GetSelectedRecordsAsync();
        if (SelectedRecords.Count == 0)
        {
            TextMessage = "Bạn chưa chọn dòng.";
            CheckDelete = false;
            ShowModalMessage = true;
        }
        else
            NavigationManager.NavigateTo($"{SystemConstants.UrlPath.PhieuXuatKho}/edit/{SelectedRecords.First().Id.ToString()}", true);
        StateHasChanged();
    }
    private async Task DeleteAsync()
    {
        var SelectedRecords = await SfGridPXK.GetSelectedRecordsAsync();
        if(SelectedRecords.Count > 0)
        {
            CheckDelete = true;
            string names = "";
            foreach (var data in SelectedRecords)
                names += data.SoCt + ", ";
            names = names.TrimEnd(',', ' ');
            TextMessage = $"Xác nhận xóa <b>{SelectedRecords.Count.ToString("00")}</b> phiếu có số chứng từ {(SelectedRecords.Count > 1 ? "gồm" : "")}: <span style='color:red'>{names}</span>";
            ShowModalMessage = true;
        }
        else
        {
            CheckDelete = false;
            TextMessage = "Bạn chưa chọn dòng.";
            ShowModalMessage = true;
        }
        StateHasChanged();
    }
    private async Task ConfirmDeleleAsync()
    {
        CheckDelete = false;
        ShowModalMessage = false;
        var SelectedRecords = await SfGridPXK.GetSelectedRecordsAsync();
        if (SelectedRecords.Count > 0)
        {
            var ids = new List<int?>();
            foreach (var data in SelectedRecords)
                ids.Add(data.Id);
            var result = await _phieuXuatKho.DeleteListAsync(ids);
            if (result.IsSuccessed)
            {
                PhieuXuatKhoDtos = await _phieuXuatKho.GetListAsync(TuNgay, DenNgay);
                await TongTienThongKeAsync();
            }
            else
            {
                TextMessage = result.Message;
                ShowModalMessage = true;
                CheckMessage = false;
            }
        }
        StateHasChanged();
    }
    private void PrintAsync()
    {
        //test
    }
    private async Task ShowColumnAsync()
    {
        await this.SfGridPXK.OpenColumnChooserAsync();
    }
    private async Task RefreshAsync()
    {
        await this.SfGridPXK.SearchAsync(string.Empty);
        PhieuXuatKhoDtos = await _phieuXuatKho.GetListAsync(TuNgay, DenNgay);
        await TongTienThongKeAsync();
        StateHasChanged();

    }
    //Call Back From Js function
    [JSInvokable("searchInputNavbar")]
    public async Task SearchAsync(string search)
    {
        await this.SfGridPXK.SearchAsync(search);
    }
    public async Task RecordClickHandler(RecordClickEventArgs<PhieuXuatKhoDto> args)
    {
        var phieuXuatKho = await _phieuXuatKho.GetByIdAsync(args.RowData.Id);
        if (phieuXuatKho.PhieuXuatKhoCtDtos != null)
            PhieuXuatKhoCtDtos = phieuXuatKho.PhieuXuatKhoCtDtos;
        else
            PhieuXuatKhoCtDtos = new List<PhieuXuatKhoCtDto>();
        StateHasChanged();
    }
    public void RecordDoubleClickHandler(RecordDoubleClickEventArgs<PhieuXuatKhoDto> args)
    {
        NavigationManager.NavigateTo($"{SystemConstants.UrlPath.PhieuXuatKho}/edit/{args.RowData.Id.ToString()}", true);
    }
    private void CloseModalMessage()
    {
        ShowModalMessage = false;
    }
}
