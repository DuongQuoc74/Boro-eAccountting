@page "/phieuthu/create"
@using Blazored.LocalStorage
@using Syncfusion.Blazor.Data
@using Volo.Abp.ObjectMapping
@using tamkhoatech.ACWeb.Blazor.Pages.Common
@using tamkhoatech.ACWeb.Constants
@using tamkhoatech.ACWeb.Dto
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Calendars
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.DropDowns
@using tamkhoatech.ACWeb.IService

@implements IAsyncDisposable
@inject IJSRuntime JSRunTime
@inject ILocalStorageService _localStorage
@inject IObjectMapper _objectMapper
@inject NavigationManager NavigationManager
@inject IChiNhanhService _chiNhanh
@inject IKhachHangService _khachHang
@inject IQuyenSoService _quyenSo
@inject ITaiKhoanService _taiKhoan
@inject INgoaiTeService _ngoaiTe
@inject IBoPhanHTService _boPhanHT
@inject IVatTuService _vatTu
@inject IVuViecService _vuViec
@inject IDmMaPhiService _dmMaPhi
@inject IDieuChinhThueTNDnService _dieuChinhThueTNDN
@inject IDmTruongTuDoService _dmTruongTuDo
@inject IDMChungService _dmChung
@inject IPhieuThuService _phieuThu
@inject ISoCaiService _soCai
@inject IPhieuXuatService _phieuXuat

<link rel="stylesheet" href="/Css/them-sua-phieu.css">
@if (hasRefreshed)
{
    <div @onkeyup="@OnKeyUp" @onblur="FocusOnInput">
        <div class="row title">
            <div class="text-center">
                <div class="row align-items-start">
                    <h4><strong>Thêm mới phiếu thu tiền mặt</strong></h4>
                </div>
            </div>
        </div>
        <EditForm Model="SelectPhieuThu" Context="EditFormPT" OnValidSubmit="@SaveAsync">
            <DataAnnotationsValidator />
            <div class="row">
                <div class="col-sm-12">
                    <div class="bordered-div">
                        <div class="row">
                            <div class="col-sm-4 ">
                                <div class="mb-1">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <label for="GiaoDichId" class="form-label">Mã giao dịch <span class="text-danger">*</span></label>
                                        </div>
                                        <div class="col-sm-4">
                                            <SfComboBox ID="giaoDichId" @bind-Value="@SelectPhieuThu.GiaoDichId" DataSource="@MaGiaoDichDtos" AllowFiltering="true" Autofill="true" AllowCustom="false" Enabled="CheckEnabledMaGiaoDich" CssClass="e-multi-column e-small" PopupWidth="400" PopupHeight="300">
                                                <ComboBoxEvents TValue="int?" TItem="DmChungDto" Filtering="OnFilteringMaGiaoDich" ValueChange="OnValueChangeMaGiaoDich"></ComboBoxEvents>
                                                <ComboBoxFieldSettings Value="Id" Text="DMChungUd" />
                                                <ComboBoxTemplates TItem="DmChungDto">
                                                    <HeaderTemplate>
                                                        <table class="header-combo">
                                                            <tr>
                                                                <th style="width:150px">Mã giao dịch</th>
                                                                <th>Tên giao dịch</th>
                                                            </tr>
                                                        </table>
                                                    </HeaderTemplate>
                                                    <ItemTemplate Context="itemContext">
                                                        <table>
                                                            <tbody>
                                                                <tr>
                                                                    <td style="width:150px"><span>@((itemContext as DmChungDto).DMChungUd)</span></td>
                                                                    <td><span>@((itemContext as DmChungDto).DMChungNm)</span></td>
                                                                </tr>
                                                            </tbody>
                                                        </table>
                                                    </ItemTemplate>
                                                </ComboBoxTemplates>
                                            </SfComboBox>
                                        </div>
                                        <div class="col-sm-8">
                                            <SfTextBox ID="MaGiaoDichNm" CssClass="e-small" @bind-Value="@(SelectPhieuThu.GiaoDichNm)" Enabled="false"></SfTextBox>
                                        </div>
                                    </div>
                                </div>
                                <div class="mb-1">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <label for="ChiNhanhId" class="form-label">Mã chi nhánh <span class="text-danger">*</span></label>
                                        </div>
                                        <div class="col-sm-4">
                                            <div class="d-flex align-items-center">
                                                <SfComboBox ID="chiNhanhId" @ref="ddCN" @bind-Value="@SelectPhieuThu.ChiNhanhId" DataSource="@ChiNhanhDtos" AllowFiltering="true" Autofill="true" AllowCustom="false" Enabled="!IsDisabled" CssClass="e-multi-column e-small" PopupWidth="700" PopupHeight="300">
                                                    <ComboBoxEvents TValue="int?" TItem="ChiNhanhDto" Filtering="OnFilteringChiNhanh" ValueChange="OnValueChangeChiNhanh"></ComboBoxEvents>
                                                    <ComboBoxFieldSettings Value="Id" Text="ChiNhanhUd" />
                                                    <ComboBoxTemplates TItem="ChiNhanhDto">
                                                        <HeaderTemplate>
                                                            <table class="header-combo">
                                                                <thead>
                                                                    <tr>
                                                                        <th style="width:150px">Mã chi nhánh</th>
                                                                        <th>Tên chi nhánh</th>
                                                                        <th>Tên 2</th>
                                                                    </tr>
                                                                </thead>
                                                            </table>
                                                        </HeaderTemplate>
                                                        <ItemTemplate Context="itemContext">
                                                            <table>
                                                                <tbody>
                                                                    <tr>
                                                                        <td style="width:150px"><span>@((itemContext as ChiNhanhDto).ChiNhanhUd)</span></td>
                                                                        <td><span>@((itemContext as ChiNhanhDto).ChiNhanhNm)</span></td>
                                                                        <td><span>@((itemContext as ChiNhanhDto).ChiNhanhNm2)</span></td>
                                                                    </tr>
                                                                </tbody>
                                                            </table>
                                                        </ItemTemplate>
                                                    </ComboBoxTemplates>
                                                </SfComboBox>
                                                <SfTooltip ID="TaoCN" Target="#target" Content="Thêm chi nhánh" Position="Position.RightTop" OpensOn="Hover">
                                                    <button id="target" type="button" class="btn-them-nhanh" @onclick="TaoChiNhanh" disabled="@IsDisabled">
                                                        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" class="bi bi-plus-circle" viewBox="0 0 16 16">
                                                            <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16" />
                                                            <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4" />
                                                        </svg>
                                                    </button>
                                                </SfTooltip>
                                            </div>
                                        </div>
                                        <div class="col-sm-8">
                                            <SfTextBox ID="ChiNhanhNm" CssClass="e-small" @bind-Value="@(SelectPhieuThu.ChiNhanhNm)" Enabled="false"></SfTextBox>
                                        </div>
                                    </div>
                                </div>
                                <div class="mb-1">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <label for="GhiNoTkId" class="form-label">Ghi nợ tài khoản <span class="text-danger">*</span></label>
                                        </div>
                                        <div class="col-sm-4">
                                            <SfComboBox ID="taiKhoanId" @ref="ddTK" @bind-Value="@SelectPhieuThu.GhiNoTkId" DataSource="@TaiKhoanDtos" AllowFiltering="true" Autofill="true" AllowCustom="false" Enabled="!IsDisabled" CssClass="e-multi-column e-small" PopupWidth="800" PopupHeight="300">
                                                <ComboBoxEvents TValue="int?" TItem="TaiKhoanDto" Filtering="OnFilteringTaiKhoan" ValueChange="OnValueChangeTaiKhoan"></ComboBoxEvents>
                                                <ComboBoxFieldSettings Text="TaiKhoanUd" Value="Id"></ComboBoxFieldSettings>
                                                <ComboBoxTemplates TItem="TaiKhoanDto">
                                                    <HeaderTemplate>
                                                        <table class="header-combo">
                                                            <tr>
                                                                <th style="width:150px">Mã tài khoản</th>
                                                                <th>Tên tài khoản</th>
                                                                <th>Tên 2</th>
                                                            </tr>
                                                        </table>
                                                    </HeaderTemplate>
                                                    <ItemTemplate Context="itemContext">
                                                        <table>
                                                            <tbody>
                                                                <tr>
                                                                    <td style="width:150px"><span>@((itemContext as TaiKhoanDto).TaiKhoanUd)</span></td>
                                                                    <td><span>@((itemContext as TaiKhoanDto).TaiKhoanNm)</span></td>
                                                                    <td><span>@((itemContext as TaiKhoanDto).TaiKhoanNm2)</span></td>
                                                                </tr>
                                                            </tbody>
                                                        </table>
                                                    </ItemTemplate>
                                                </ComboBoxTemplates>
                                            </SfComboBox>
                                        </div>
                                        <div class="col-sm-8">
                                            <SfTextBox ID="GhiNoTkNm" CssClass="e-small" @bind-Value="@(SelectPhieuThu.GhiNoTkNm)" Enabled="false"></SfTextBox>
                                        </div>
                                    </div>
                                </div>
                                <div class="mb-1">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <label for="DienGiai" class="form-label">Diễn giải</label>
                                        </div>
                                        <div class="col-sm-12">
                                            <SfTextBox ID="dienGiai" CssClass="e-small" @bind-Value="@(SelectPhieuThu.DienGiai)" Enabled="!IsDisabled"></SfTextBox>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-4 ">
                                <div class="mb-1">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <label for="KhachHangId" class="form-label">Mã khách hàng <span class="text-danger">*</span></label>
                                        </div>
                                        <div class="col-sm-4">
                                            @if (!ShowScreenGiaoDich3)
                                            {
                                                <div class="d-flex align-items-center">
                                                    <SfComboBox ID="khachHangId" @ref="ddKH" @bind-Value="@SelectPhieuThu.KhachHangId" DataSource="@KhachHangDtos" AllowFiltering="true" Autofill="true" AllowCustom="false" Enabled="!IsDisabled" CssClass="e-multi-column e-small" PopupWidth="1000" PopupHeight="300">
                                                        <ComboBoxEvents TValue="int?" TItem="KhachHangDto" Filtering="OnFilteringKhachHang" ValueChange="OnValueChangeKhachHang"></ComboBoxEvents>
                                                        <ComboBoxFieldSettings Text="KhachHangUd" Value="Id"></ComboBoxFieldSettings>
                                                        <ComboBoxTemplates TItem="KhachHangDto">
                                                            <HeaderTemplate>
                                                                <table class="header-combo">
                                                                    <tr>
                                                                        <th style="width:150px">Mã khách hàng</th>
                                                                        <th>Tên khách</th>
                                                                        <th style="width:150px">Mã số thuế</th>
                                                                        <th style="width:150px">Số dư</th>
                                                                        <th>Địa chỉ</th>
                                                                    </tr>
                                                                </table>
                                                            </HeaderTemplate>
                                                            <ItemTemplate Context="itemContext">
                                                                <table>
                                                                    <tbody>
                                                                        <tr>
                                                                            <td style="width:130px"><span>@((itemContext as KhachHangDto).KhachHangUd)</span></td>
                                                                            <td><span>@((itemContext as KhachHangDto).KhachHangNm)</span></td>
                                                                            <td style="width:130px"><span>@((itemContext as KhachHangDto).MaSoThue)</span></td>
                                                                            <td style="width:130px"><span>@((itemContext as KhachHangDto).Sodu?.ToString("N0"))</span></td>
                                                                            <td><span>@((itemContext as KhachHangDto).DiaChi)</span></td>
                                                                        </tr>
                                                                    </tbody>
                                                                </table>
                                                            </ItemTemplate>
                                                        </ComboBoxTemplates>
                                                    </SfComboBox>
                                                    <SfTooltip ID="TaoKH" Target="#target" Content="Thêm khách hàng" Position="Position.RightTop" OpensOn="Hover">
                                                        <button id="target" type="button" class="btn-them-nhanh" @onclick="TaoKhachHang" disabled="@IsDisabled">
                                                            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" class="bi bi-plus-circle" viewBox="0 0 16 16">
                                                                <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16" />
                                                                <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4" />
                                                            </svg>
                                                        </button>
                                                    </SfTooltip>
                                                </div>
                                            }
                                            else
                                            {
                                                <SfTextBox CssClass="e-small" Enabled="false"></SfTextBox>
                                            }

                                        </div>
                                        <div class="col-sm-8">
                                            <SfTextBox ID="KhachHangNm" CssClass="e-small" @bind-Value="@(SelectPhieuThu.KhachHangNm)" Enabled="false"></SfTextBox>
                                        </div>
                                    </div>
                                </div>
                                <div class="mb-1">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <label for="DiaChi" class="form-label">Địa chỉ</label>
                                        </div>
                                        <div class="col-sm-12">
                                            <SfTextBox ID="DiaChi" CssClass="e-small" @bind-Value="@(SelectPhieuThu.DiaChi)" Enabled="false"></SfTextBox>
                                        </div>
                                    </div>
                                </div>
                                <div class="mb-1">
                                    <div class="row">
                                        <div class="col-sm-6">
                                            <div class="row">
                                                <div class="col-sm-12">
                                                    <label for="MaSoThue" class="form-label">Mã số thuế</label>
                                                </div>
                                                <div class="col-sm-12">
                                                    <SfTextBox ID="MaSoThue" CssClass="e-small" @bind-Value="@(SelectPhieuThu.MaSoThue)" Enabled="false"></SfTextBox>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="row">
                                                <div class="col-sm-12">
                                                    <label for="Sodu" class="form-label">Số dư</label>
                                                </div>
                                                <div class="col-sm-12">
                                                    <SfNumericTextBox ShowSpinButton="false" ID="Sodu" Format="N0" CssClass="e-small" @bind-Value="@(SelectPhieuThu.SoDu)" Enabled="false"></SfNumericTextBox>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="mb-1">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <label for="NguoiNop" class="form-label">Người nộp tiền</label>
                                        </div>
                                        <div class="col-sm-12">
                                            <SfTextBox ID="nguoiNop" CssClass="e-small" @bind-Value="@(SelectPhieuThu.NguoiNop)" Enabled="!IsDisabled"></SfTextBox>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <div class="row">
                                    <div class="col-sm-6">
                                        <div class="mb-1">
                                            <div class="row">
                                                <div class="col-sm-12">
                                                    <label for="QuyenSoId" class="form-label">Quyển sổ</label>
                                                </div>
                                                <div class="col-sm-12">
                                                    <div class="d-flex align-items-center">
                                                        <SfComboBox ID="quyenSo" @ref="ddQS" @bind-Value="@SelectPhieuThu.QuyenSoId" DataSource="@QuyenSoDtos" AllowFiltering="true" Autofill="true" AllowCustom="false" Enabled="!IsDisabled" CssClass="e-multi-column e-small" PopupWidth="700" PopupHeight="300">
                                                            <ComboBoxEvents TValue="string" TItem="QuyenSoDto" Filtering="OnFilteringQuyenSo" ValueChange="OnValueChangeQuyenSo"></ComboBoxEvents>
                                                            <ComboBoxFieldSettings Text="SoQuyen" Value="SoQuyen"></ComboBoxFieldSettings>
                                                            <ComboBoxTemplates TItem="QuyenSoDto">
                                                                <HeaderTemplate>
                                                                    <table class="header-combo">
                                                                        <tr>
                                                                            <th>Mã ct</th>
                                                                            <th>Số quyển</th>
                                                                            <th>Số ct hiện tại</th>
                                                                            <th>Sử dụng</th>
                                                                        </tr>
                                                                    </table>
                                                                </HeaderTemplate>
                                                                <ItemTemplate Context="itemContext">
                                                                    <table>
                                                                        <tbody>
                                                                            <tr>
                                                                                <td><span>@((itemContext as QuyenSoDto).MaCt)</span></td>
                                                                                <td><span>@((itemContext as QuyenSoDto).SoQuyen)</span></td>
                                                                                <td><span>@((itemContext as QuyenSoDto).SoCtHienTai)</span></td>
                                                                                <td><span>@((itemContext as QuyenSoDto).IsUser)</span></td>
                                                                            </tr>
                                                                        </tbody>
                                                                    </table>
                                                                </ItemTemplate>
                                                            </ComboBoxTemplates>
                                                        </SfComboBox>
                                                        <SfTooltip ID="TaoQS" Target="#target" Content="Thêm quyển sổ" Position="Position.RightTop" OpensOn="Hover">
                                                            <button id="target" type="button" class="btn-them-nhanh" disabled="@IsDisabled">
                                                                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" class="bi bi-plus-circle" viewBox="0 0 16 16">
                                                                    <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16" />
                                                                    <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4" />
                                                                </svg>
                                                            </button>
                                                        </SfTooltip>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="mb-1">
                                            <div class="row">
                                                <div class="col-sm-12">
                                                    <label for="SoPhieu" class="form-label">Số phiếu thu</label>
                                                </div>
                                                <div class="col-sm-12">
                                                    <SfTextBox ID="soPhieu" CssClass="e-small" @bind-Value="@(SelectPhieuThu.SoPhieu)" Enabled="!IsDisabled"></SfTextBox>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="mb-1">
                                            <div class="row">
                                                <div class="col-sm-12">
                                                    <label for="NgayHT" class="form-label">Ngày hạch toán <span class="text-danger">*</span></label>
                                                </div>
                                                <div class="col-sm-12">
                                                    <SfDatePicker ID="NgayHT" TValue="DateTime?" CssClass="e-small" ShowClearButton="true" @bind-Value="@(SelectPhieuThu.NgayHT)" Format="dd/MM/yyyy" FullScreen="true" Enabled="!IsDisabled">
                                                        <DatePickerEvents TValue="DateTime?" ValueChange="OnValueChangeNgayht"></DatePickerEvents>
                                                    </SfDatePicker>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="mb-1">
                                            <div class="row">
                                                <div class="col-sm-12">
                                                    <label for="NgayLap" class="form-label">Ngày lập phiếu thu</label>
                                                </div>
                                                <div class="col-sm-12">
                                                    <SfDatePicker ID="ngayLap" CssClass="e-small" @bind-Value="@(SelectPhieuThu.NgayLap)" Format="dd/MM/yyyy" Enabled="false"></SfDatePicker>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="mb-1">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <label for="ChungTu" class="form-label">Chứng từ kèm theo</label>
                                        </div>
                                        <div class="col-sm-12">
                                            <SfTextBox ID="chungTu" CssClass="e-small" @bind-Value="@(SelectPhieuThu.ChungTu)" Enabled="!IsDisabled"></SfTextBox>
                                        </div>
                                    </div>
                                </div>
                                <div class="mb-1">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <label for="NgoaiTeId" class="form-label">Tỷ giá <span class="text-danger">*</span></label>
                                        </div>
                                        <div class="col-sm-4">
                                            <div class="d-flex align-items-center">
                                                <SfComboBox ID="ngoaiTeId" @ref="ddNT" @bind-Value="@SelectPhieuThu.NgoaiTeId" DataSource="@NgoaiTeDtos" AllowFiltering="true" Autofill="true" AllowCustom="false" Enabled="!IsDisabled" CssClass="e-multi-column e-small" PopupWidth="350" PopupHeight="300">
                                                    <ComboBoxEvents TValue="int?" TItem="NgoaiTeDto" Filtering="OnFilteringNgoaiTe" ValueChange="OnValueChangeNgoaiTe"></ComboBoxEvents>
                                                    <ComboBoxFieldSettings Text="NgoaiTeUd" Value="Id"></ComboBoxFieldSettings>
                                                    <ComboBoxTemplates TItem="NgoaiTeDto">
                                                        <HeaderTemplate>
                                                            <table class="header-combo">
                                                                <tr>
                                                                    <th>Mã ngoại tệ</th>
                                                                    <th>Tên ngoại tệ</th>
                                                                    <th>Tên 2</th>
                                                                </tr>
                                                            </table>
                                                        </HeaderTemplate>
                                                        <ItemTemplate Context="itemContext">
                                                            <table>
                                                                <tbody>
                                                                    <tr>
                                                                        <td><span>@((itemContext as NgoaiTeDto).NgoaiTeUd)</span></td>
                                                                        <td><span>@((itemContext as NgoaiTeDto).NgoaiTeNm)</span></td>
                                                                        <td><span>@((itemContext as NgoaiTeDto).NgoaiTeNm2)</span></td>
                                                                    </tr>
                                                                </tbody>
                                                            </table>
                                                        </ItemTemplate>
                                                    </ComboBoxTemplates>
                                                </SfComboBox>
                                                <SfTooltip ID="TaoTG" Target="#target" Content="Thêm tỷ giá" Position="Position.RightTop" OpensOn="Hover">
                                                    <button id="target" type="button" class="btn-them-nhanh" disabled="@IsDisabled">
                                                        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" class="bi bi-plus-circle" viewBox="0 0 16 16">
                                                            <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16" />
                                                            <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4" />
                                                        </svg>
                                                    </button>
                                                </SfTooltip>
                                            </div>
                                        </div>
                                        <div class="col-sm-4">
                                            <SfNumericTextBox ShowSpinButton="false" ID="tyGia" CssClass="e-small" @bind-Value="@(SelectPhieuThu.TyGia)" Format="N2" Enabled="!CheckNgoaiTe ? CheckNgoaiTe : !IsDisabled"></SfNumericTextBox>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-12">
                    <div class="bordered-div" @onclick="ClickFocus">
                        @if (ShowScreenGiaoDich1)
                        {
                            <SfTab>
                                <TabItems>
                                    <TabItem>
                                        <ChildContent>
                                            <TabHeader Text="Chi tiết hạch toán"></TabHeader>
                                        </ChildContent>
                                        <ContentTemplate>
                                            <SfGrid ID="gridPhieuThuCt01" @ref="SfGridPhieuThuCt01" @attributes="@GridAttributes" DataSource="@PhieuThuCt01Requests" AllowSorting="true" AllowResizing="true" Height="200">
                                                <GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true" NewRowPosition="NewRowPosition.Bottom" Mode="EditMode.Normal"></GridEditSettings>
                                                <GridEvents Created="CreatedPhieuThuCT" OnActionBegin="ActionBeginPhieuThuCt01" OnActionComplete="ActionCompletedPhieuThuCt01" RowUpdating="RowUpdatingPhieuThuCt01" OnRecordDoubleClick="RecordDoubleClickPhieuThuCt01" TValue="PhieuThuCt01Request"></GridEvents>
                                                <GridColumns>
                                                    <GridColumn Field=@nameof(PhieuThuCt01Request.Stt) HeaderText="#" IsPrimaryKey="true" Visible="false" AllowAdding="false" AllowEditing="false" TextAlign="TextAlign.Left" Width="60"></GridColumn>
                                                    <GridColumn Field=@nameof(PhieuThuCt01Request.SoHd) TextAlign="TextAlign.Left" Width="150">
                                                        <HeaderTemplate>
                                                            Số hóa đơn <span style="color:red">*</span>
                                                        </HeaderTemplate>
                                                        <EditTemplate>
                                                            @{
                                                                var item = (context as PhieuThuCt01Request);
                                                                if (item != null)
                                                                {
                                                                    <SfComboBox ID="soHdCt01" @ref="ddSoHdCt01" @bind-Value="@(item.SoHd)" DataSource="@PhieuXuatDtos" AllowFiltering="true" Autofill="true" AllowCustom="false" CssClass="e-multi-column" PopupWidth="1100" PopupHeight="300">
                                                                        <ComboBoxEvents TValue="string" TItem="PhieuXuatDto" Created="CreatedPhieuThuCTHandler" Filtering="OnFilteringSoHdCt01" ValueChange="OnValueChangeSoHdCt01"></ComboBoxEvents>
                                                                        <ComboBoxFieldSettings Text="SoHd" Value="SoHd"></ComboBoxFieldSettings>
                                                                        <ComboBoxTemplates TItem="PhieuXuatDto">
                                                                            <HeaderTemplate>
                                                                                <table class="header-combo">
                                                                                    <tr>
                                                                                        <th style="width:90px">Số hđ</th>
                                                                                        <th>Ngày hđ</th>
                                                                                        <th>Tổng tiền</th>
                                                                                        <th>Đã tt</th>
                                                                                        <th>Còn lại</th>
                                                                                        <th style="width:90px">Mã nt</th>
                                                                                        <th style="width:90px">Tỷ giá</th>
                                                                                        <th>Tổng tiền nt</th>
                                                                                        <th>Đã tt nt</th>
                                                                                        <th>Còn lại nt</th>
                                                                                    </tr>
                                                                                </table>
                                                                            </HeaderTemplate>
                                                                            <ItemTemplate Context="itemContext">
                                                                                <table>
                                                                                    <tbody>
                                                                                        <tr>
                                                                                            <td style="width:90px"><span>@((itemContext as PhieuXuatDto).SoHd)</span></td>
                                                                                            <td><span>@((itemContext as PhieuXuatDto).NgayLap?.ToString("dd/MM/yyyy"))</span></td>
                                                                                            <td><span>@((itemContext as PhieuXuatDto).TienPhaiTtVND?.ToString("N0"))</span></td>
                                                                                            <td><span>@((itemContext as PhieuXuatDto).TienTtVND?.ToString("N0"))</span></td>
                                                                                            <td><span>@((itemContext as PhieuXuatDto).ConPhaiTtVND?.ToString("N0"))</span></td>
                                                                                            <td style="width:90px"><span>@((itemContext as PhieuXuatDto).NgoaiTeUd)</span></td>
                                                                                            <td style="width:90px"><span>@((itemContext as PhieuXuatDto).TiGia?.ToString("N2"))</span></td>
                                                                                            <td><span>@((itemContext as PhieuXuatDto).TienPhaiTt?.ToString("N2"))</span></td>
                                                                                            <td><span>@((itemContext as PhieuXuatDto).TienTt?.ToString("N2"))</span></td>
                                                                                            <td><span>@((itemContext as PhieuXuatDto).ConPhaiTt?.ToString("N2"))</span></td>
                                                                                        </tr>
                                                                                    </tbody>
                                                                                </table>
                                                                            </ItemTemplate>
                                                                        </ComboBoxTemplates>
                                                                    </SfComboBox>
                                                                }
                                                            }
                                                        </EditTemplate>
                                                        <Template>
                                                            @{
                                                                var item = (context as PhieuThuCt01Request);
                                                                <div>@item?.SoHd</div>
                                                            }
                                                        </Template>
                                                    </GridColumn>
                                                    <GridColumn Field=@nameof(PhieuThuCt01Request.NgayHd) HeaderText="Ngày hóa đơn" TextAlign="TextAlign.Left" Format="dd/MM/yyyy" EditType="EditType.DatePickerEdit" Width="150">
                                                        <EditTemplate>
                                                            <SfDatePicker Value="TempPhieuThuCt01.NgayHd" Format="dd/MM/yyyy" Enabled="false"></SfDatePicker>
                                                        </EditTemplate>
                                                    </GridColumn>
                                                    <GridColumn Field=@nameof(PhieuThuCt01Request.NgoaiTeUd) HeaderText="Mã ngoại tệ" AllowAdding="false" AllowEditing="false" TextAlign="TextAlign.Left" Width="150">
                                                        <EditTemplate>
                                                            <SfTextBox Value="@TempPhieuThuCt01.NgoaiTeUd" Enabled="false"></SfTextBox>
                                                        </EditTemplate>
                                                    </GridColumn>
                                                    <GridColumn Field=@nameof(PhieuThuCt01Request.GhiCoTkUd) HeaderText="Ghi nợ tài khoản" AllowAdding="false" AllowEditing="false" TextAlign="TextAlign.Left" Width="150">
                                                        <EditTemplate>
                                                            <SfTextBox Value="@TempPhieuThuCt01.GhiCoTkUd" Enabled="false"></SfTextBox>
                                                        </EditTemplate>
                                                    </GridColumn>
                                                    <GridColumn Field=@nameof(PhieuThuCt01Request.TienTrenHd) HeaderText="Tiền trên hóa đơn" Format="N0" TextAlign="TextAlign.Right" Width="150">
                                                        <EditTemplate>
                                                            <SfNumericTextBox ShowSpinButton="false" Value="@TempPhieuThuCt01.TienTrenHd" Format="N0" Enabled="false"></SfNumericTextBox>
                                                        </EditTemplate>
                                                    </GridColumn>
                                                    <GridColumn Field=@nameof(PhieuThuCt01Request.DaTt) HeaderText="Đã thanh toán" Format="N0" TextAlign="TextAlign.Right" Width="150">
                                                        <EditTemplate>
                                                            <SfNumericTextBox ShowSpinButton="false" Value="@TempPhieuThuCt01.DaTt" Format="N0" Enabled="false"></SfNumericTextBox>
                                                        </EditTemplate>
                                                    </GridColumn>
                                                    <GridColumn Field=@nameof(PhieuThuCt01Request.ConPhaiTt) HeaderText="Còn phải thanh toán" Format="N0" TextAlign="TextAlign.Right" Width="150">
                                                        <EditTemplate>
                                                            <SfNumericTextBox ShowSpinButton="false" Value="@TempPhieuThuCt01.ConPhaiTt" Format="N0" Enabled="false"></SfNumericTextBox>
                                                        </EditTemplate>
                                                    </GridColumn>
                                                    <GridColumn Field=@nameof(PhieuThuCt01Request.ThanhToan) HeaderText="Thanh toán ngoại tệ" Format="N2" Visible="CheckNgoaiTe" TextAlign="TextAlign.Right" Width="150">
                                                        <EditTemplate>
                                                            <SfNumericTextBox ID="thanhToanCt01" ShowSpinButton="false" Value="@TempPhieuThuCt01.ThanhToan" Enabled="CheckNgoaiTe" Format="N2" @onchange="OnValueChangeThanhToanCt01"></SfNumericTextBox>
                                                        </EditTemplate>
                                                    </GridColumn>
                                                    <GridColumn Field=@nameof(PhieuThuCt01Request.ThanhToanVND) HeaderText="Thanh toán" Format="N0" TextAlign="TextAlign.Right" Width="150">
                                                        <EditTemplate>
                                                            <SfNumericTextBox ID="thanhToanVNDCt01" ShowSpinButton="false" Value="@TempPhieuThuCt01.ThanhToanVND" Enabled="@(TempPhieuThuCt01.ThanhToan !=0 ? false : true)" Format="N0" @onchange="OnValueChangeThanhToanVNDCt01"></SfNumericTextBox>
                                                        </EditTemplate>
                                                    </GridColumn>
                                                    <GridColumn Field=@nameof(PhieuThuCt01Request.ThanhToanQd) HeaderText="Thanh toán quy đổi" Format="N0" TextAlign="TextAlign.Right" Width="150">
                                                         <EditTemplate>
                                                            <SfNumericTextBox ShowSpinButton="false" Value="@TempPhieuThuCt01.ThanhToanQd" Format="N0" Enabled="false"></SfNumericTextBox>
                                                        </EditTemplate>
                                                    </GridColumn>
                                                    <GridColumn Field=@nameof(PhieuThuCt01Request.DienGiai) HeaderText="Diễn giải" TextAlign="TextAlign.Left" Width="300">
                                                        <EditTemplate>
                                                            <SfTextBox ID="dienGiaiCt01" Value="@TempPhieuThuCt01.DienGiai" @onchange="OnValueChangeDienGiaiCt01"></SfTextBox>
                                                        </EditTemplate>
                                                    </GridColumn>
                                                </GridColumns>
                                            </SfGrid>
                                        </ContentTemplate>
                                    </TabItem>
                                </TabItems>
                            </SfTab>
                        }
                        @if (ShowScreenGiaoDich2)
                        {
                            <SfTab>
                                <TabItems>
                                    <TabItem>
                                        <ChildContent>
                                            <TabHeader Text="Chi tiết hạch toán"></TabHeader>
                                        </ChildContent>
                                        <ContentTemplate>
                                            <SfGrid ID="gridPhieuThuCt02" @ref="SfGridPhieuThuCt02" @attributes="@GridAttributes" DataSource="@PhieuThuCt02Requests" AllowSorting="true" AllowResizing="true" Height="200">
                                                <GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true" NewRowPosition="NewRowPosition.Bottom" Mode="EditMode.Normal"></GridEditSettings>
                                                <GridEvents Created="CreatedPhieuThuCT" OnActionBegin="ActionBeginPhieuThuCt02" OnActionComplete="ActionCompletedPhieuThuCt02" RowUpdating="RowUpdatingPhieuThuCt02" OnRecordDoubleClick="RecordDoubleClickPhieuThuCt02" TValue="PhieuThuCt02Request"></GridEvents>
                                                <GridColumns>
                                                    <GridColumn Field=@nameof(PhieuThuCt02Request.Stt) HeaderText="#" IsPrimaryKey="true" Visible="false" AllowAdding="false" AllowEditing="false" TextAlign="TextAlign.Left" Width="60"></GridColumn>
                                                    <GridColumn Field=@nameof(PhieuThuCt02Request.GhiCoTk) TextAlign="TextAlign.Left" Width="150">
                                                        <HeaderTemplate>
                                                            Ghi có tài khoản <span style="color:red">*</span>
                                                        </HeaderTemplate>
                                                        <EditTemplate>
                                                            @{
                                                                var item = (context as PhieuThuCt02Request);
                                                                if (item != null)
                                                                {
                                                                    <SfComboBox ID="ghiCoTkCt02" @ref="@ddTKCt02" @bind-Value="@(item.GhiCoTk)" DataSource="@TaiKhoanDtos" AllowFiltering="true" Autofill="true" AllowCustom="false" CssClass="e-multi-column" PopupWidth="700" PopupHeight="300">
                                                                        <ComboBoxEvents TValue="int?" TItem="TaiKhoanDto" Created="CreatedPhieuThuCTHandler" Filtering="OnFilteringTaiKhoanCt02" ValueChange="OnValueChangeTaiKhoanCt02"></ComboBoxEvents>
                                                                        <ComboBoxFieldSettings Text="TaiKhoanUd" Value="Id"></ComboBoxFieldSettings>
                                                                        <ComboBoxTemplates TItem="TaiKhoanDto">
                                                                            <HeaderTemplate>
                                                                                <table class="header-combo">
                                                                                    <tr>
                                                                                        <th style="width:150px">Mã tài khoản</th>
                                                                                        <th>Tên tài khoản</th>
                                                                                        <th>Tên 2</th>
                                                                                    </tr>
                                                                                </table>
                                                                            </HeaderTemplate>
                                                                            <ItemTemplate Context="itemContext">
                                                                                <table>
                                                                                    <tbody>
                                                                                        <tr>
                                                                                            <td style="width:150px"><span>@((itemContext as TaiKhoanDto).TaiKhoanUd)</span></td>
                                                                                            <td><span>@((itemContext as TaiKhoanDto).TaiKhoanNm)</span></td>
                                                                                            <td><span>@((itemContext as TaiKhoanDto).TaiKhoanNm2)</span></td>
                                                                                        </tr>
                                                                                    </tbody>
                                                                                </table>
                                                                            </ItemTemplate>
                                                                        </ComboBoxTemplates>
                                                                    </SfComboBox>
                                                                }
                                                            }
                                                        </EditTemplate>
                                                        <Template>
                                                            @{
                                                                var item = (context as PhieuThuCt02Request);
                                                                <div>@item?.GhiCoTkUd</div>
                                                            }
                                                        </Template>
                                                    </GridColumn>
                                                    <GridColumn Field=@nameof(PhieuThuCt02Request.GhiCoTkNm) HeaderText="Tên tài khoản" TextAlign="TextAlign.Left" Width="300">
                                                        <EditTemplate>
                                                            <SfTextBox Value="@TempPhieuThuCt02.GhiCoTkNm" Enabled="false"></SfTextBox>
                                                        </EditTemplate>
                                                    </GridColumn>
                                                    <GridColumn Field=@nameof(PhieuThuCt02Request.PsCo) HeaderText="Phát sinh nợ ngoại tệ" Visible="CheckNgoaiTe" EditType="EditType.NumericEdit" Format="N2" TextAlign="TextAlign.Right" Width="150">
                                                        <EditTemplate>
                                                            <SfNumericTextBox ID="psCoCt02" ShowSpinButton="false" Value="@TempPhieuThuCt02.PsCo" Enabled="CheckNgoaiTe" Format="N2" @onchange="OnValueChangePsCoCt02"></SfNumericTextBox>
                                                        </EditTemplate>
                                                    </GridColumn>
                                                    <GridColumn Field=@nameof(PhieuThuCt02Request.PsCoVND) HeaderText="Phát nợ" EditType="EditType.NumericEdit" Format="N0" TextAlign="TextAlign.Right" Width="150">
                                                        <EditTemplate>
                                                            <SfNumericTextBox ID="psCoVNDCt02" ShowSpinButton="false" Value="@TempPhieuThuCt02.PsCoVND" Enabled="@(TempPhieuThuCt02.PsCo !=0 ? false : true)" Format="N0" @onchange="OnValueChangePsCoVNDCt02"></SfNumericTextBox>
                                                        </EditTemplate>
                                                    </GridColumn>
                                                    <GridColumn Field=@nameof(PhieuThuCt02Request.DienGiai) HeaderText="Diễn giải" TextAlign="TextAlign.Left" Width="300">
                                                       <EditTemplate>
                                                            <SfTextBox ID="dienGiaiCt02" Value="@TempPhieuThuCt02.DienGiai" @onchange="OnValueChangeDienGiaiCt02"></SfTextBox>
                                                       </EditTemplate>
                                                    </GridColumn>
                                                </GridColumns>
                                            </SfGrid>
                                        </ContentTemplate>
                                    </TabItem>
                                </TabItems>
                            </SfTab>
                        }
                        @if (ShowScreenGiaoDich3)
                        {
                            <SfTab>
                                <TabItems>
                                    <TabItem>
                                        <ChildContent>
                                            <TabHeader Text="Chi tiết hạch toán"></TabHeader>
                                        </ChildContent>
                                        <ContentTemplate>
                                            <SfGrid ID="gridPhieuThuCt03" @ref="SfGridPhieuThuCt03" @attributes="@GridAttributes" DataSource="@PhieuThuCt03Requests" AllowSorting="true" AllowResizing="true" Height="200">
                                                <GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true" NewRowPosition="NewRowPosition.Bottom" Mode="EditMode.Normal"></GridEditSettings>
                                                <GridEvents Created="CreatedPhieuThuCT" OnActionBegin="ActionBeginPhieuThuCt03" OnActionComplete="ActionCompletedPhieuThuCt03" RowUpdating="RowUpdatingPhieuThuCt03" OnRecordDoubleClick="RecordDoubleClickPhieuThuCt03" TValue="PhieuThuCt03Request"></GridEvents>
                                                <GridColumns>
                                                    <GridColumn Field=@nameof(PhieuThuCt03Request.Stt) HeaderText="#" IsPrimaryKey="true" Visible="false" AllowAdding="false" AllowEditing="false" TextAlign="TextAlign.Left" Width="60"></GridColumn>
                                                    <GridColumn Field=@nameof(PhieuThuCt03Request.GhiCoTk) TextAlign="TextAlign.Left" Width="150">
                                                        <HeaderTemplate>
                                                            Ghi có tài khoản <span style="color:red">*</span>
                                                        </HeaderTemplate>
                                                        <EditTemplate>
                                                            @{
                                                                var item = (context as PhieuThuCt03Request);
                                                                if (item != null)
                                                                {
                                                                    <SfComboBox ID="ghiCoTkCt03" @ref="@ddTKCt03" @bind-Value="@(item.GhiCoTk)" DataSource="@TaiKhoanDtos" AllowFiltering="true" Autofill="true" AllowCustom="false" CssClass="e-multi-column" PopupWidth="700" PopupHeight="300">
                                                                        <ComboBoxEvents TValue="int?" TItem="TaiKhoanDto" Created="CreatedPhieuThuCTHandler" Filtering="OnFilteringTaiKhoanCt03" ValueChange="OnValueChangeTaiKhoanCt03"></ComboBoxEvents>
                                                                        <ComboBoxFieldSettings Text="TaiKhoanUd" Value="Id"></ComboBoxFieldSettings>
                                                                        <ComboBoxTemplates TItem="TaiKhoanDto">
                                                                            <HeaderTemplate>
                                                                                <table class="header-combo">
                                                                                    <tr>
                                                                                        <th style="width:150px">Mã tài khoản</th>
                                                                                        <th>Tên tài khoản</th>
                                                                                        <th>Tên 2</th>
                                                                                    </tr>
                                                                                </table>
                                                                            </HeaderTemplate>
                                                                            <ItemTemplate Context="itemContext">
                                                                                <table>
                                                                                    <tbody>
                                                                                        <tr>
                                                                                            <td style="width:150px"><span>@((itemContext as TaiKhoanDto).TaiKhoanUd)</span></td>
                                                                                            <td><span>@((itemContext as TaiKhoanDto).TaiKhoanNm)</span></td>
                                                                                            <td><span>@((itemContext as TaiKhoanDto).TaiKhoanNm2)</span></td>
                                                                                        </tr>
                                                                                    </tbody>
                                                                                </table>
                                                                            </ItemTemplate>
                                                                        </ComboBoxTemplates>
                                                                    </SfComboBox>
                                                                }
                                                            }
                                                        </EditTemplate>
                                                        <Template>
                                                            @{
                                                                var item = (context as PhieuThuCt03Request);
                                                                <div>@item?.GhiCoTkUd</div>
                                                            }
                                                        </Template>
                                                    </GridColumn>
                                                    <GridColumn Field=@nameof(PhieuThuCt03Request.GhiCoTkNm) HeaderText="Tên tài khoản" TextAlign="TextAlign.Left" Width="300">
                                                        <EditTemplate>
                                                            <SfTextBox Value="@TempPhieuThuCt03.GhiCoTkNm" Enabled="false"></SfTextBox>
                                                        </EditTemplate>
                                                    </GridColumn>
                                                    <GridColumn Field=@nameof(PhieuThuCt03Request.KhachHangId) EditType="EditType.DropDownEdit" TextAlign="TextAlign.Left" Width="150">
                                                        <HeaderTemplate>
                                                            Mã khách <span style="color:red">*</span>
                                                        </HeaderTemplate>
                                                        <EditTemplate>
                                                            @{
                                                                var item = (context as PhieuThuCt03Request);
                                                                if (item != null)
                                                                {
                                                                    <SfComboBox ID="khachHangCt03" @ref="ddKHCt03" @bind-Value="@(item.KhachHangId)" DataSource="@KhachHangDtos" AllowFiltering="true" Autofill="true" AllowCustom="false" CssClass="e-multi-column" PopupWidth="1000" PopupHeight="300">
                                                                        <ComboBoxEvents TValue="int?" TItem="KhachHangDto" Filtering="OnFilteringKhachHangCt03" ValueChange="OnValueChangeKhachHangCt03"></ComboBoxEvents>
                                                                        <ComboBoxFieldSettings Text="KhachHangUd" Value="Id"></ComboBoxFieldSettings>
                                                                        <ComboBoxTemplates TItem="KhachHangDto">
                                                                            <HeaderTemplate>
                                                                                <table class="header-combo">
                                                                                    <tr>
                                                                                        <th style="width:150px">Mã khách hàng</th>
                                                                                        <th>Tên khách</th>
                                                                                        <th style="width:150px">Mã số thuế</th>
                                                                                        <th style="width:150px">Số dư</th>
                                                                                        <th>Địa chỉ</th>
                                                                                    </tr>
                                                                                </table>
                                                                            </HeaderTemplate>
                                                                            <ItemTemplate Context="itemContext">
                                                                                <table>
                                                                                    <tbody>
                                                                                        <tr>
                                                                                            <td style="width:130px"><span>@((itemContext as KhachHangDto).KhachHangUd)</span></td>
                                                                                            <td><span>@((itemContext as KhachHangDto).KhachHangNm)</span></td>
                                                                                            <td style="width:130px"><span>@((itemContext as KhachHangDto).MaSoThue)</span></td>
                                                                                            <td style="width:130px"><span>@((itemContext as KhachHangDto).Sodu?.ToString("N0"))</span></td>
                                                                                            <td><span>@((itemContext as KhachHangDto).DiaChi)</span></td>
                                                                                        </tr>
                                                                                    </tbody>
                                                                                </table>
                                                                            </ItemTemplate>
                                                                        </ComboBoxTemplates>
                                                                    </SfComboBox>
                                                                }
                                                            }
                                                        </EditTemplate>
                                                        <Template>
                                                            @{
                                                                var item = (context as PhieuThuCt03Request);
                                                                <div>@item?.KhachHangUd</div>
                                                            }
                                                        </Template>
                                                    </GridColumn>
                                                    <GridColumn Field=@nameof(PhieuThuCt03Request.KhachHangNm) HeaderText="Tên khách" TextAlign="TextAlign.Left" Width="300">
                                                        <EditTemplate>
                                                            <SfTextBox Value="@TempPhieuThuCt03.KhachHangNm" Enabled="false"></SfTextBox>
                                                        </EditTemplate>
                                                    </GridColumn>
                                                    <GridColumn Field=@nameof(PhieuThuCt03Request.PsCo) HeaderText="Phát sinh có ngoại tệ" Visible="CheckNgoaiTe" EditType="EditType.NumericEdit" Format="N2" TextAlign="TextAlign.Right" Width="150">
                                                        <EditTemplate>
                                                            <SfNumericTextBox ID="psCoCt03" ShowSpinButton="false" Value="@TempPhieuThuCt03.PsCo" Enabled="CheckNgoaiTe" Format="N2" @onchange="OnValueChangePsCoCt03"></SfNumericTextBox>
                                                        </EditTemplate>
                                                    </GridColumn>
                                                    <GridColumn Field=@nameof(PhieuThuCt03Request.PsCoVND) HeaderText="Phát sinh có" EditType="EditType.NumericEdit" Format="N0" TextAlign="TextAlign.Right" Width="150">
                                                        <EditTemplate>
                                                            <SfNumericTextBox ID="psCoVNDCt03" ShowSpinButton="false" Value="@TempPhieuThuCt03.PsCoVND" Enabled="@(TempPhieuThuCt03.PsCo !=0 ? false : true)" Format="N0" @onchange="OnValueChangePsCoVNDCt03"></SfNumericTextBox>
                                                        </EditTemplate>
                                                    </GridColumn>
                                                    <GridColumn Field=@nameof(PhieuThuCt03Request.DienGiai) HeaderText="Diễn giải" TextAlign="TextAlign.Left" Width="300">
                                                        <EditTemplate>
                                                            <SfTextBox  ID="dienGiaiCt03" Value="@TempPhieuThuCt03.DienGiai" @onchange="OnValueChangeDienGiaiCt03"></SfTextBox>
                                                        </EditTemplate>
                                                    </GridColumn>
                                                </GridColumns>
                                            </SfGrid>
                                        </ContentTemplate>
                                    </TabItem>
                                </TabItems>
                            </SfTab>
                        }
                        @if (ShowScreenGiaoDich4)
                        {
                            <SfTab>
                                <TabItems>
                                    <TabItem>
                                        <ChildContent>
                                            <TabHeader Text="Chi tiết hạch toán"></TabHeader>
                                        </ChildContent>
                                        <ContentTemplate>
                                            <SfGrid ID="gridPhieuThuCt04" @ref="SfGridPhieuThuCt04" @attributes="@GridAttributes" DataSource="@PhieuThuCt04Requests" AllowSorting="true" AllowResizing="true" Height="200">
                                                <GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true" NewRowPosition="NewRowPosition.Bottom" Mode="EditMode.Normal"></GridEditSettings>
                                                <GridEvents Created="CreatedPhieuThuCT" OnActionBegin="ActionBeginPhieuThuCt04" OnActionComplete="ActionCompletedPhieuThuCt04" RowUpdating="RowUpdatingPhieuThuCt04" OnRecordDoubleClick="RecordDoubleClickPhieuThuCt04" TValue="PhieuThuCt04Request"></GridEvents>
                                                <GridColumns>
                                                    <GridColumn Field=@nameof(PhieuThuCt04Request.Stt) HeaderText="#" IsPrimaryKey="true" Visible="false" AllowAdding="false" AllowEditing="false" TextAlign="TextAlign.Left" Width="60"></GridColumn>
                                                    <GridColumn Field=@nameof(PhieuThuCt04Request.GhiCoTk) TextAlign="TextAlign.Left" Width="150">
                                                        <HeaderTemplate>
                                                            Ghi có tài khoản <span style="color:red">*</span>
                                                        </HeaderTemplate>
                                                        <EditTemplate>
                                                            @{
                                                                var item = (context as PhieuThuCt04Request);
                                                                if (item != null)
                                                                {
                                                                    <SfComboBox ID="ghiCoTkCt04" @ref="@ddTKCt04" @bind-Value="@(item.GhiCoTk)" DataSource="@TaiKhoanDtos" AllowFiltering="true" Autofill="true" AllowCustom="false" CssClass="e-multi-column" PopupWidth="700" PopupHeight="300">
                                                                        <ComboBoxEvents TValue="int?" TItem="TaiKhoanDto" Created="CreatedPhieuThuCTHandler" Filtering="OnFilteringTaiKhoanCt04" ValueChange="OnValueChangeTaiKhoanCt04"></ComboBoxEvents>
                                                                        <ComboBoxFieldSettings Text="TaiKhoanUd" Value="Id"></ComboBoxFieldSettings>
                                                                        <ComboBoxTemplates TItem="TaiKhoanDto">
                                                                            <HeaderTemplate>
                                                                                <table class="header-combo">
                                                                                    <tr>
                                                                                        <th style="width:150px">Mã tài khoản</th>
                                                                                        <th>Tên tài khoản</th>
                                                                                        <th>Tên 2</th>
                                                                                    </tr>
                                                                                </table>
                                                                            </HeaderTemplate>
                                                                            <ItemTemplate Context="itemContext">
                                                                                <table>
                                                                                    <tbody>
                                                                                        <tr>
                                                                                            <td style="width:150px"><span>@((itemContext as TaiKhoanDto).TaiKhoanUd)</span></td>
                                                                                            <td><span>@((itemContext as TaiKhoanDto).TaiKhoanNm)</span></td>
                                                                                            <td><span>@((itemContext as TaiKhoanDto).TaiKhoanNm2)</span></td>
                                                                                        </tr>
                                                                                    </tbody>
                                                                                </table>
                                                                            </ItemTemplate>
                                                                        </ComboBoxTemplates>
                                                                    </SfComboBox>
                                                                }
                                                            }
                                                        </EditTemplate>
                                                        <Template>
                                                            @{
                                                                var item = (context as PhieuThuCt04Request);
                                                                <div>@item?.GhiCoTkUd</div>
                                                            }
                                                        </Template>
                                                    </GridColumn>
                                                    <GridColumn Field=@nameof(PhieuThuCt04Request.GhiCoTkNm) HeaderText="Tên tài khoản" TextAlign="TextAlign.Left" Width="300">
                                                        <EditTemplate>
                                                            <SfTextBox Value="@TempPhieuThuCt04.GhiCoTkNm" Enabled="false"></SfTextBox>
                                                        </EditTemplate>
                                                    </GridColumn>
                                                    <GridColumn Field=@nameof(PhieuThuCt04Request.PsCo) HeaderText="Phát sinh nợ ngoại tệ" Visible="CheckNgoaiTe" EditType="EditType.NumericEdit" Format="N2" TextAlign="TextAlign.Right" Width="150">
                                                        <EditTemplate>
                                                            <SfNumericTextBox  ID="psCoCt04" ShowSpinButton="false" Value="@TempPhieuThuCt04.PsCo" Enabled="CheckNgoaiTe" Format="N2" @onchange="OnValueChangePsCoCt04"></SfNumericTextBox>
                                                        </EditTemplate>
                                                    </GridColumn>
                                                    <GridColumn Field=@nameof(PhieuThuCt04Request.PsCoVND) HeaderText="Phát nợ" EditType="EditType.NumericEdit" Format="N0" TextAlign="TextAlign.Right" Width="150">
                                                        <EditTemplate>
                                                            <SfNumericTextBox ID="psCoVNDCt04" ShowSpinButton="false" Value="@TempPhieuThuCt04.PsCoVND" Enabled="@(TempPhieuThuCt04.PsCo !=0 ? false : true)" Format="N0" @onchange="OnValueChangePsCoVNDCt04"></SfNumericTextBox>
                                                        </EditTemplate>
                                                    </GridColumn>
                                                    <GridColumn Field=@nameof(PhieuThuCt04Request.DienGiai) HeaderText="Diễn giải" TextAlign="TextAlign.Left" Width="300">
                                                        <EditTemplate>
                                                            <SfTextBox ID="dienGiaiCt04" Value="@TempPhieuThuCt04.DienGiai" @onchange="OnValueChangeDienGiaiCt04"></SfTextBox>
                                                        </EditTemplate>
                                                    </GridColumn>
                                                </GridColumns>
                                            </SfGrid>
                                        </ContentTemplate>
                                    </TabItem>
                                </TabItems>
                            </SfTab>
                        }
                        <div class="d-flex align-items-Left">
                            <button type="button" class="btn btn-sm btn-them-xoa m-2" @onclick="AddRowCtAsync" disabled="@IsDisabled">Thêm dòng <b>F4</b></button>
                            <button type="button" class="btn btn-sm btn-them-xoa m-2" @onclick="DeleteRowCtAsync" disabled="@IsDisabled">Xóa dòng <b>F8</b> </button>
                            <button type="button" class="btn btn-sm btn-them-xoa m-2" @onclick="CancelCtAsync" disabled="@IsDisabled">Hủy thao tác <b>F9</b></button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-12">
                    <div class="bordered-div">
                        <div class="row">
                            <div class="col-sm-4">
                                <div class="mb-1">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <label for="TongTien" class="form-label">Tổng tiền thanh toán</label>
                                        </div>
                                        <div class="col-sm-6">
                                            <SfNumericTextBox ShowSpinButton="false" ID="TongTienVND" CssClass="e-small" @bind-Value="@(SelectPhieuThu.TongTienVND)" Format="N0" Enabled="false"></SfNumericTextBox>
                                        </div>
                                        <div class="col-sm-6">
                                            @if (CheckNgoaiTe)
                                            {
                                                <SfNumericTextBox ShowSpinButton="false" ID="TongTien" CssClass="e-small" @bind-Value="@(SelectPhieuThu.TongTien)" Format="N2" Enabled="false"></SfNumericTextBox>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
            <br />
            <br />
            <FooterMenu IsSave="true" IsSaveDisabled="IsSaveDisabled" IsCancel="true" IsCancelDisabled="IsCancelDisabled" OnValidSubmitCancel="Cancel"
                        IsAdd="true" IsAddDisabled="IsAddDisabled" OnValidSubmitAdd="Add"
                        IsEdit="true" IsEditDisabled="IsEditDisabled" OnValidSubmitEdit="Edit"
                        IsDelete="true" IsDeleteDisabled="IsDeleteDisabled" OnValidSubmitDelete="Delete"
                        IsPrint="true" IsPrintDisabled="IsPrintDisabled"
                        IsCopy="true" IsCopyDisabled="IsCopyDisabled" OnValidSubmitCopy="Copy"
                        IsClose="true" IsCloseDisabled="IsCloseDisabled" OnValidSubmitClose="Close"
                        IsNextDisabled="IsNextDisabled" IsNext="true" OnValidSubmitFirst="FirstAsync" OnValidSubmitPrevious="PreviousAsync" OnValidSubmitNext="NextAsync" OnValidSubmitLast="LastAsync" />
        </EditForm>
        <br />
    </div>

    <!-- ModalCreate -->
    <SfDialog ID="modalCreateCN" @bind-Visible="ShowModalTaoMoiCN" Width="640px" AllowPrerender="true" IsModal="true">
        <DialogTemplates>
            <Header>
                <div>
                    <h1 class="modal-title fs-5">
                        <img src="/images/Button/Moi.png" alt="icon" width="16" height="16">
                        <strong>Thêm mới</strong>
                    </h1>
                </div>
            </Header>
            <Content>
                <TaoMoiChiNhanh OnValidSubmitModalCreate="CloseModal" />
            </Content>
        </DialogTemplates>
    </SfDialog>


    <SfDialog ID="modalCreateKH" @bind-Visible="ShowModalTaoMoiKH" Width="840px" AllowPrerender="true" IsModal="true">
        <DialogTemplates>
            <Header>
                <div>
                    <h1 class="modal-title fs-5">
                        <img src="/images/Button/Moi.png" alt="icon" width="16" height="16">
                        <strong>Thêm mới</strong>
                    </h1>
                </div>
            </Header>
            <Content>
                <TaoMoiKhachHang OnValidSubmitModalCreate="CloseModal" LoaiPhieu="@SystemConstants.LoaiPhieu.PhieuThu" />
            </Content>
        </DialogTemplates>
    </SfDialog>

    <ModalErrorMessage ShowModalMessage="@ShowModalMessage" CheckMessage="@CheckMessage" TextMessage="@TextMessage" IsDelete="@IsDeleteMessage"
                       OnCloseMessage="CloseModalMessage" OnConfirmDelele="ConfirmDeleleAsync" IsConfirm="@IsConfirmMessage" OnConfirm="ConfirmCancelAsync" />
}
else
{
    <h3>Vui lòng chờ....</h3>
}

@code {
    private PhieuThuRequest SelectPhieuThu = new PhieuThuRequest()
        {
            NgayLap = DateTime.Now,
            NgayHT = DateTime.Now,
            TongTien = 0,
            TongTienVND = 0,
        };

    private List<ChiNhanhDto> ChiNhanhDtos = new List<ChiNhanhDto>();
    private SfComboBox<int?, ChiNhanhDto> ddCN = new SfComboBox<int?, ChiNhanhDto>();
    private List<DmChungDto> MaGiaoDichDtos = new List<DmChungDto>();
    private SfComboBox<int?, DmChungDto> ddGD = new SfComboBox<int?, DmChungDto>();
    private List<KhachHangDto> KhachHangDtos = new List<KhachHangDto>();
    private SfComboBox<int?, KhachHangDto> ddKH = new SfComboBox<int?, KhachHangDto>();
    private SfComboBox<int?, KhachHangDto> ddKHCt03 = new SfComboBox<int?, KhachHangDto>();
    private List<QuyenSoDto> QuyenSoDtos = new List<QuyenSoDto>();
    private SfComboBox<string?, QuyenSoDto> ddQS = new SfComboBox<string?, QuyenSoDto>();
    private List<TaiKhoanDto> TaiKhoanDtos = new List<TaiKhoanDto>();
    private SfComboBox<int?, TaiKhoanDto> ddTK = new SfComboBox<int?, TaiKhoanDto>();
    private List<NgoaiTeDto> NgoaiTeDtos = new List<NgoaiTeDto>();
    private SfComboBox<int?, NgoaiTeDto> ddNT = new SfComboBox<int?, NgoaiTeDto>();

    private SfComboBox<int?, TaiKhoanDto> ddTKCt02 = new SfComboBox<int?, TaiKhoanDto>();
    private SfComboBox<int?, TaiKhoanDto> ddTKCt03 = new SfComboBox<int?, TaiKhoanDto>();
    private SfComboBox<int?, TaiKhoanDto> ddTKCt04 = new SfComboBox<int?, TaiKhoanDto>();
    private List<DmChungDto> DMChungDtos = new List<DmChungDto>();
    private List<BoPhanHTDto> BoPhanHTDtos = new List<BoPhanHTDto>();
    private List<VatTuDto> VatTuDtos = new List<VatTuDto>();
    private List<VuViecDto> VuViecDtos = new List<VuViecDto>();
    private List<DmMaPhiDto> DmMaPhiDtos = new List<DmMaPhiDto>();
    private List<DieuChinhThueTNDnDto> DieuChinhThueTNDnDtos = new List<DieuChinhThueTNDnDto>();
    private List<DmTruongTuDoDto> DmTruongTuDo1Dtos = new List<DmTruongTuDoDto>();
    private List<DmTruongTuDoDto> DmTruongTuDo2Dtos = new List<DmTruongTuDoDto>();
    private List<DmTruongTuDoDto> DmTruongTuDo3Dtos = new List<DmTruongTuDoDto>();
    private List<PhieuXuatDto> PhieuXuatDtos = new List<PhieuXuatDto>();
    private SfComboBox<string?, PhieuXuatDto> ddSoHdCt01 = new SfComboBox<string?, PhieuXuatDto>();

    private List<PhieuThuCTRequest> PhieuThuCtRequests = new List<PhieuThuCTRequest>();
    private bool ShowScreenGiaoDich1 = false;
    private List<PhieuThuCt01Request> PhieuThuCt01Requests = new List<PhieuThuCt01Request>();
    private SfGrid<PhieuThuCt01Request> SfGridPhieuThuCt01 = new SfGrid<PhieuThuCt01Request>();
    private PhieuThuCt01Request TempPhieuThuCt01 = new PhieuThuCt01Request();
    private bool ShowScreenGiaoDich2 = true;
    private List<PhieuThuCt02Request> PhieuThuCt02Requests = new List<PhieuThuCt02Request>();
    private SfGrid<PhieuThuCt02Request> SfGridPhieuThuCt02 = new SfGrid<PhieuThuCt02Request>();
    private PhieuThuCt02Request TempPhieuThuCt02 = new PhieuThuCt02Request();
    private bool ShowScreenGiaoDich3 = false;
    private List<PhieuThuCt03Request> PhieuThuCt03Requests = new List<PhieuThuCt03Request>();
    private SfGrid<PhieuThuCt03Request> SfGridPhieuThuCt03 = new SfGrid<PhieuThuCt03Request>();
    private PhieuThuCt03Request TempPhieuThuCt03 = new PhieuThuCt03Request();
    private bool ShowScreenGiaoDich4 = false;
    private List<PhieuThuCt04Request> PhieuThuCt04Requests = new List<PhieuThuCt04Request>();
    private SfGrid<PhieuThuCt04Request> SfGridPhieuThuCt04 = new SfGrid<PhieuThuCt04Request>();
    private PhieuThuCt04Request TempPhieuThuCt04 = new PhieuThuCt04Request();
    private bool CheckEnabledMaKhachHang = true;
    private bool hasRefreshed = false;

    // Thông báo message
    private bool ShowModalMessage = false;
    private bool CheckMessage = false;
    private string? TextMessage { set; get; }
    private bool IsDeleteMessage { set; get; }
    private bool IsConfirmMessage { set; get; }
    // Thông báo message end

    private bool CheckNgoaiTe = false;
    private bool CheckEnabledMaGiaoDich = true;

    private bool ShowModalTaoMoiCN = false;
    private bool ShowModalTaoMoiKH = false;

    //Footer menu
    public string? NewId { set; get; }
    public bool IsDisabled { set; get; } = false;
    public bool IsSaveDisabled { set; get; }
    public bool IsCancelDisabled { set; get; }
    public bool IsAddDisabled { set; get; } = true;
    public bool IsEditDisabled { set; get; } = true;
    public bool IsDeleteDisabled { set; get; } = true;
    public bool IsPrintDisabled { set; get; } = true;
    public bool IsCopyDisabled { set; get; } = true;
    public bool IsCloseDisabled { set; get; } = true;
    public bool IsNextDisabled { set; get; } = true;
    private Dictionary<string, object> GridAttributes { get; set; } = new Dictionary<string, object>();
    public List<PhieuThuDto> PhieuThuDtos = new List<PhieuThuDto>();
    private int CurrentIndex = 0;
    //Footer menu end

    //Include js
    private IJSObjectReference? jsModule; // module chứa file js được khai báo
    private string FileNameJS = "phieu-thu.js";
    private string[] InputCommonIds = new string[12] { "giaoDichId", "chiNhanhId", "khachHangId", "nguoiNop", "taiKhoanId", "dienGiai", "quyenSo", "soPhieu", "chungTu", "ngayHT", "ngoaiTeId", "tyGia" };
    private string[] InputCt01Ids = new string[4] { "soHdCt01", "thanhToanCt01", "thanhToanVNDCt01", "dienGiaiCt01" };
    private string[] InputCt02Ids = new string[4] { "ghiCoTkCt02", "psCoCt02", "psCoVNDCt02", "dienGiaiCt02" };
    private string[] InputCt03Ids = new string[5] { "ghiCoTkCt03", "khachHangCt03", "psNoCt03", "psNoVNDCt03", "dienGiaiCt03"};
    private string[] InputCt04Ids = new string[4] { "ghiCoTkCt04", "psCoCt04", "psCoVNDCt04", "dienGiaiCt04" };
    private string[] GridIds = new string[4] { "gridPhieuThuCt01", "gridPhieuThuCt02", "gridPhieuThuCt03", "gridPhieuThuCt04"};
    //Include js end
    protected override async Task OnInitializedAsync()
    {
        if (!hasRefreshed)
        {
            var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
            var queryParams = System.Web.HttpUtility.ParseQueryString(uri.Query);

            if (queryParams["copyId"] != null)
            {
                NewId = queryParams["copyId"];
            }
            if (NewId != null)
            {
                await RefreshAsync();
                await DefaultData(CurrentIndex, true);
                if (QuyenSoDtos.Count > 0)
                    this.DefaultValueQuyenSo(QuyenSoDtos);
            }
            else
            {
                ChiNhanhDtos = await _chiNhanh.GetListAsync();
                this.DefaultValueChiNhanh(ChiNhanhDtos);
                MaGiaoDichDtos = await _dmChung.GetListAsync(SystemConstants.DmChung.GiaoDichThu);
                this.DefaultValueMaGiaDich(MaGiaoDichDtos);
                KhachHangDtos = await _khachHang.GetListAsync(SystemConstants.KhachHang.Loai1);
                QuyenSoDtos = await _quyenSo.GetListAsync(SystemConstants.LoaiPhieu.PhieuThu);
                this.DefaultValueQuyenSo(QuyenSoDtos);
                TaiKhoanDtos = await _taiKhoan.GetListAsync();
                this.DefaultValueGhiCoTaiKhoan(TaiKhoanDtos);
                NgoaiTeDtos = await _ngoaiTe.GetListAsync();
                this.DefaultValueNgoaiTe(NgoaiTeDtos);
                DMChungDtos = await _dmChung.GetListAsync(SystemConstants.DmChung.LoaiThue);
                BoPhanHTDtos = await _boPhanHT.GetListAsync();
                //VatTuDtos = await _vatTu.GetListAsync();
                VuViecDtos = await _vuViec.GetListAsync();
                DmMaPhiDtos = await _dmMaPhi.GetListAsync();
                DieuChinhThueTNDnDtos = await _dieuChinhThueTNDN.GetListAsync();
                DmTruongTuDo1Dtos = await _dmTruongTuDo.GetListLoai1Async();
                DmTruongTuDo2Dtos = await _dmTruongTuDo.GetListLoai2Async();
                DmTruongTuDo3Dtos = await _dmTruongTuDo.GetListLoai3Async();
                // await JSRunTime.InvokeVoidAsync("GetDotNetObjectReference", DotNetObjectReference.Create(this));
            }
            hasRefreshed = true;
        }
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRunTime.InvokeVoidAsync("getDotNetObjectReference", DotNetObjectReference.Create(this));
            jsModule = await JSRunTime.InvokeAsync<IJSObjectReference>("import", $"./js/{FileNameJS}");
            await jsModule.InvokeVoidAsync("getInputIds", InputCommonIds, InputCt04Ids, GridIds[1]);
        }
    }
    public async Task OnFilteringChiNhanh(Syncfusion.Blazor.DropDowns.FilteringEventArgs args)
    {
        args.PreventDefaultAction = true;
        var orWhere = WhereFilter.Or(new List<WhereFilter> {
            new WhereFilter() { Field = "ChiNhanhUd", Operator = "contains", value = args.Text, IgnoreCase = true },
            new WhereFilter() { Field = "ChiNhanhNm", Operator = "contains", value = args.Text, IgnoreCase = true }
        });
        var query = new Query().Where(orWhere);
        query = !string.IsNullOrEmpty(args.Text) ? query : new Query();
        await ddCN.FilterAsync(ChiNhanhDtos, query);
    }
    private void OnValueChangeChiNhanh(ChangeEventArgs<int?, ChiNhanhDto> args)
    {
        if (args.ItemData != null)
        {
            SelectPhieuThu.ChiNhanhNm = args.ItemData.ChiNhanhNm;
        }

    }
    
    public async Task OnFilteringMaGiaoDich(Syncfusion.Blazor.DropDowns.FilteringEventArgs args)
    {
        args.PreventDefaultAction = true;
        var orWhere = WhereFilter.Or(new List<WhereFilter> {
            new WhereFilter() { Field = "DMChungUd", Operator = "contains", value = args.Text, IgnoreCase = true },
            new WhereFilter() { Field = "DMChungNm", Operator = "contains", value = args.Text, IgnoreCase = true }
        });
        var query = new Query().Where(orWhere);
        query = !string.IsNullOrEmpty(args.Text) ? query : new Query();
        await ddGD.FilterAsync(MaGiaoDichDtos, query);
    }
    private void OnValueChangeMaGiaoDich(ChangeEventArgs<int?, DmChungDto> args)
    {
        if (args.ItemData != null)
        {
            SelectPhieuThu.GiaoDichNm = args.ItemData.DMChungNm;
            switch (args.ItemData.DMChungUd)
            {
                case "1":
                    PhieuThuCt01Requests = new List<PhieuThuCt01Request>();
                    ShowScreenGiaoDich1 = true;
                    ShowScreenGiaoDich2 = false;
                    ShowScreenGiaoDich3 = false;
                    ShowScreenGiaoDich4 = false;
                    CheckEnabledMaKhachHang = true;
                    break;
                case "2":
                    PhieuThuCt02Requests = new List<PhieuThuCt02Request>();
                    ShowScreenGiaoDich1 = false;
                    ShowScreenGiaoDich2 = true;
                    ShowScreenGiaoDich3 = false;
                    ShowScreenGiaoDich4 = false;
                    CheckEnabledMaKhachHang = true;
                    break;
                case "3":
                    PhieuThuCt03Requests = new List<PhieuThuCt03Request>();
                    ShowScreenGiaoDich1 = false;
                    ShowScreenGiaoDich2 = false;
                    ShowScreenGiaoDich3 = true;
                    ShowScreenGiaoDich4 = false;
                    CheckEnabledMaKhachHang = false;
                    SelectPhieuThu.KhachHangId = 0;
                    SelectPhieuThu.MaSoThue = null;
                    SelectPhieuThu.DiaChi = null;
                    break;
                case "4":
                    PhieuThuCt04Requests = new List<PhieuThuCt04Request>();
                    ShowScreenGiaoDich1 = false;
                    ShowScreenGiaoDich2 = false;
                    ShowScreenGiaoDich3 = false;
                    ShowScreenGiaoDich4 = true;
                    CheckEnabledMaKhachHang = true;
                    break;
                default:
                    break;
            }

        }
    }
    private void OnValueChangeNgayht(ChangedEventArgs<DateTime?> args)
    {
        if (args.Value.HasValue)
        {
            SelectPhieuThu.NgayLap = args.Value;
        }
    }
    public async Task OnFilteringKhachHang(Syncfusion.Blazor.DropDowns.FilteringEventArgs args)
    {
        args.PreventDefaultAction = true;
        var orWhere = WhereFilter.Or(new List<WhereFilter> {
            new WhereFilter() { Field = "KhachHangUd", Operator = "contains", value = args.Text, IgnoreCase = true },
            new WhereFilter() { Field = "KhachHangNm", Operator = "contains", value = args.Text, IgnoreCase = true }
        });
        var query = new Query().Where(orWhere);
        query = !string.IsNullOrEmpty(args.Text) ? query : new Query();
        await ddKH.FilterAsync(KhachHangDtos, query);
    }
    private async void OnValueChangeKhachHang(ChangeEventArgs<int?, KhachHangDto> args)
    {
        if (args.ItemData != null)
        {
            SelectPhieuThu.DiaChi = args.ItemData.DiaChi;
            SelectPhieuThu.MaSoThue = args.ItemData.MaSoThue;
            SelectPhieuThu.KhachHangNm = args.ItemData.KhachHangNm;
            SelectPhieuThu.SoDu = args.ItemData.Sodu;
            SelectPhieuThu.MaSoThue = args.ItemData.MaSoThue;
            PhieuXuatDtos = await _phieuXuat.GetListByKhachHangIdAsync(args.ItemData.Id);
            foreach (var item in PhieuXuatDtos)
            {
                var nt = await _ngoaiTe.GetByIdAsync(item.NgoaiTeId);
                var tk = await _taiKhoan.GetByIdAsync(item.GhiNoTk);
                item.GhiNoTkUd = tk.TaiKhoanUd;
                item.NgoaiTeUd = nt.NgoaiTeUd;
            }
            if (ShowScreenGiaoDich1)
                this.SfGridPhieuThuCt01?.Refresh();
        }
    }
    public async Task OnFilteringQuyenSo(Syncfusion.Blazor.DropDowns.FilteringEventArgs args)
    {
        args.PreventDefaultAction = true;
        var orWhere = WhereFilter.Or(new List<WhereFilter> {
            new WhereFilter() { Field = "MaCt", Operator = "contains", value = args.Text, IgnoreCase = true },
            new WhereFilter() { Field = "SoQuyen", Operator = "contains", value = args.Text, IgnoreCase = true }
        });
        var query = new Query().Where(orWhere);
        query = !string.IsNullOrEmpty(args.Text) ? query : new Query();
        await ddQS.FilterAsync(QuyenSoDtos, query);
    }
    private void OnValueChangeQuyenSo(ChangeEventArgs<string, QuyenSoDto> args)
    {
        if (args.ItemData != null)
        {
            string sokiTu0 = args.ItemData.SoKyTu0.HasValue ? "D" + args.ItemData.SoKyTu0.ToString() : "D0";
            SelectPhieuThu.SoPhieu = args.ItemData.SoCtHienTai.HasValue ? (args.ItemData.SoCtHienTai.Value + 1).ToString(sokiTu0) : "0";
        }
    }
    public async Task OnFilteringTaiKhoan(Syncfusion.Blazor.DropDowns.FilteringEventArgs args)
    {
        args.PreventDefaultAction = true;
        var orWhere = WhereFilter.Or(new List<WhereFilter> {
            new WhereFilter() { Field = "TaiKhoanUd", Operator = "contains", value = args.Text, IgnoreCase = true },
            new WhereFilter() { Field = "TaiKhoanNm", Operator = "contains", value = args.Text, IgnoreCase = true }
        });
        var query = new Query().Where(orWhere);
        query = !string.IsNullOrEmpty(args.Text) ? query : new Query();
        await ddTK.FilterAsync(TaiKhoanDtos, query);
    }
    private void OnValueChangeTaiKhoan(ChangeEventArgs<int?, TaiKhoanDto> args)
    {
        if (args.ItemData != null)
        {
            SelectPhieuThu.GhiNoTkNm = args.ItemData.TaiKhoanNm;
        }
    }
    public async Task OnFilteringNgoaiTe(Syncfusion.Blazor.DropDowns.FilteringEventArgs args)
    {
        args.PreventDefaultAction = true;
        var orWhere = WhereFilter.Or(new List<WhereFilter> {
            new WhereFilter() { Field = "NgoaiTeUd", Operator = "contains", value = args.Text, IgnoreCase = true },
            new WhereFilter() { Field = "NgoaiTeNm", Operator = "contains", value = args.Text, IgnoreCase = true }
        });
        var query = new Query().Where(orWhere);
        query = !string.IsNullOrEmpty(args.Text) ? query : new Query();
        await ddNT.FilterAsync(NgoaiTeDtos, query);
    }
    private async Task OnValueChangeNgoaiTe(ChangeEventArgs<int?, NgoaiTeDto> args)
    {
        if (args.ItemData != null)
        {
            if (args.ItemData.NgoaiTeUd != "VND")
            {
                CheckNgoaiTe = true;
            }
            else
            {
                CheckNgoaiTe = false;
            }
            SelectPhieuThu.NgoaiTeId = args.ItemData.Id;
            var ngoaiTe = await _ngoaiTe.GetByIdAsync(args.ItemData.Id);
            var item = ngoaiTe.TyGiaNgoaiTeDtos?.First();
            SelectPhieuThu.TyGia = item?.TyGia;
            StateHasChanged();//cập nhật giao diện ngay tức thì
            await this.SfGridPhieuThuCtRefresh();
        }
    }
    private async Task SfGridPhieuThuCtRefresh()
    {
        if (ShowScreenGiaoDich1)
        {
            await this.SfGridPhieuThuCt01.Refresh();
        }
        else if (ShowScreenGiaoDich2)
        {
            await this.SfGridPhieuThuCt02.Refresh();
        }
        else if (ShowScreenGiaoDich3)
        {
            await this.SfGridPhieuThuCt03.Refresh();
        }
        else if (ShowScreenGiaoDich4)
        {
            await this.SfGridPhieuThuCt04.Refresh();
        }

    }
    private async Task SfGridPhieuThuCtAddRecordAsync()
    {
        if (ShowScreenGiaoDich1)
        {
            await this.SfGridPhieuThuCt01.AddRecordAsync();
        }
        else if (ShowScreenGiaoDich2)
        {
            await this.SfGridPhieuThuCt02.AddRecordAsync();
        }
        else if (ShowScreenGiaoDich3)
        {
            await this.SfGridPhieuThuCt03.AddRecordAsync();
        }
        else if (ShowScreenGiaoDich4)
        {
            await this.SfGridPhieuThuCt04.AddRecordAsync();
        }

    }
    private async Task SfGridPhieuThuCtDeleteRecordAsync()
    {
        if (ShowScreenGiaoDich1)
        {
            await this.SfGridPhieuThuCt01.DeleteRecordAsync();
        }
        else if (ShowScreenGiaoDich2)
        {
            await this.SfGridPhieuThuCt02.DeleteRecordAsync();
        }
        else if (ShowScreenGiaoDich3)
        {
            await this.SfGridPhieuThuCt03.DeleteRecordAsync();
        }
        else if (ShowScreenGiaoDich4)
        {
            await this.SfGridPhieuThuCt04.DeleteRecordAsync();
        }

    }
    private async Task SfGridPhieuThuCtCloseEditAsync()
    {
        if (ShowScreenGiaoDich1)
        {
            await this.SfGridPhieuThuCt01.CloseEditAsync();
        }
        else if (ShowScreenGiaoDich2)
        {
            await this.SfGridPhieuThuCt02.CloseEditAsync();
        }
        else if (ShowScreenGiaoDich3)
        {
            await this.SfGridPhieuThuCt03.CloseEditAsync();
        }
        else if (ShowScreenGiaoDich4)
        {
            await this.SfGridPhieuThuCt04.CloseEditAsync();
        }

    }
   
    private async Task OnKeyUp(KeyboardEventArgs args)
    {
        if (args.Key == "F4")
        {
            if (!SelectPhieuThu.KhachHangId.HasValue && !ShowScreenGiaoDich3)
            {
                TextMessage = "Hãy nhập mã khách hàng !";
                CheckMessage = false;
                IsDeleteMessage = false;
                IsConfirmMessage = false;
                ShowModalMessage = true;
                await ddKH.FocusAsync();
            }
            else
                await this.SfGridPhieuThuCtAddRecordAsync();

        }
        else if (args.Key == "F8")
        {
            await this.SfGridPhieuThuCtDeleteRecordAsync();
            await ddKH.FocusAsync();
        }
        else if (args.Key == "F9")
        {
            await this.SfGridPhieuThuCtCloseEditAsync();
            await ddKH.FocusAsync();
        }

    }
    private async Task FocusOnInput()
    {
        await ddKH.FocusAsync();
    }
    private async Task ClickFocus()
    {
        await ddKH.FocusAsync();
    }
    private async Task AddRowCtAsync()
    {
        if (!SelectPhieuThu.KhachHangId.HasValue && !ShowScreenGiaoDich3)
        {
            TextMessage = "Hãy nhập mã khách hàng !";
            CheckMessage = false;
            IsDeleteMessage = false;
            IsConfirmMessage = false;
            ShowModalMessage = true;
            await ddKH.FocusAsync();
        }
        else
            await this.SfGridPhieuThuCtAddRecordAsync();
    }
    private async Task DeleteRowCtAsync()
    {
        await this.SfGridPhieuThuCtDeleteRecordAsync();
    }
    private async Task CancelCtAsync()
    {
        await this.SfGridPhieuThuCtCloseEditAsync();
    }

    private async Task CreatedPhieuThuCTHandler(Object args)
    {
        if (ShowScreenGiaoDich1)
        {
            await ddSoHdCt01.FocusAsync();
        }
        else
        {
            await ddTKCt02.FocusAsync();
        }
    }
    public async Task CreatedPhieuThuCT()
    {
        if (!SelectPhieuThu.KhachHangId.HasValue)
            await ddKH.FocusAsync();
    }
    //Màn hình chi tiết(Giao dịch 1)
    private void ActionBeginPhieuThuCt01(ActionEventArgs<PhieuThuCt01Request> args)
    {
        this.SfGridPhieuThuCt01.PreventRender(false);
        if (args.RequestType.Equals(Syncfusion.Blazor.Grids.Action.Add))
        {
            int? maxId = PhieuThuCt01Requests?.Any() == true ? PhieuThuCt01Requests.Max(x => x.Stt) : 0;
            args.Data.Stt = maxId + 1; // Tăng giá trị Id lên 1
            TempPhieuThuCt01 = new PhieuThuCt01Request()
                {
                    SoHd = null,
                    NgayHd = null,
                    NgoaiTeId = null,
                    NgoaiTeUd = null,
                    TyGia = null,
                    GhiCoTk = null,
                    GhiCoTkUd = null, 
                    GhiCoTkNm = null,
                    TienTrenHd = 0,
                    DaTt = 0,
                    ConPhaiTt = 0,
                    ThanhToan = 0,
                    ThanhToanVND = 0,
                    DienGiai = null,
                };
        }
    }
    public void ActionCompletedPhieuThuCt01(ActionEventArgs<PhieuThuCt01Request> args)
    {
        if (PhieuThuCt01Requests.Count > 0)
        {
            CheckEnabledMaGiaoDich = false;
            decimal? tongTienVND = 0; decimal? tongTien = 0;
            CheckEnabledMaKhachHang = false;
            foreach (var item in PhieuThuCt01Requests)
            {

                tongTienVND += item.ThanhToanVND;
                if (item.ThanhToan == null)
                {
                    item.ThanhToan = 0;
                };
                tongTien += item.ThanhToan;
            }
            SelectPhieuThu.TongTienVND = tongTienVND;
            SelectPhieuThu.TongTien = tongTien;
        }
        else
        {
            SelectPhieuThu.TongTienVND = 0;
            SelectPhieuThu.TongTien = 0;
            CheckEnabledMaGiaoDich = true;
            if (ShowScreenGiaoDich1)
            {
                CheckEnabledMaKhachHang = true;
            }
        }

    }
    public void RowUpdatingPhieuThuCt01(RowUpdatingEventArgs<PhieuThuCt01Request> args)
    {
        args.Data.SoHd = TempPhieuThuCt01.SoHd;
        args.Data.NgayHd = TempPhieuThuCt01.NgayHd;
        args.Data.NgoaiTeId = TempPhieuThuCt01.NgoaiTeId;
        args.Data.NgoaiTeUd = TempPhieuThuCt01.NgoaiTeUd;
        args.Data.TyGia = TempPhieuThuCt01.TyGia;
        args.Data.GhiCoTk = TempPhieuThuCt01.GhiCoTk;
        args.Data.GhiCoTkUd = TempPhieuThuCt01.GhiCoTkUd;
        args.Data.GhiCoTkNm = TempPhieuThuCt01.GhiCoTkNm;
        args.Data.TienTrenHd = TempPhieuThuCt01.TienTrenHd;
        args.Data.DaTt = TempPhieuThuCt01.DaTt;
        args.Data.ConPhaiTt = TempPhieuThuCt01.ConPhaiTt;
        args.Data.ThanhToan = TempPhieuThuCt01.ThanhToan;
        args.Data.ThanhToanVND = TempPhieuThuCt01.ThanhToanVND;
        args.Data.DienGiai = TempPhieuThuCt01.DienGiai;
    }
    public void RecordDoubleClickPhieuThuCt01(RecordDoubleClickEventArgs<PhieuThuCt01Request> args)
    {
        this.SfGridPhieuThuCt01.PreventRender(false);
        TempPhieuThuCt01 = args.RowData;
    }
    public async Task OnFilteringSoHdCt01(Syncfusion.Blazor.DropDowns.FilteringEventArgs args)
    {
        args.PreventDefaultAction = true;
        var orWhere = WhereFilter.Or(new List<WhereFilter> {
            new WhereFilter() { Field = "SoHd", Operator = "contains", value = args.Text, IgnoreCase = true },
            new WhereFilter() { Field = "NgayHd", Operator = "contains", value = args.Text, IgnoreCase = true }
        });
        var query = new Query().Where(orWhere);
        query = !string.IsNullOrEmpty(args.Text) ? query : new Query();
        await ddSoHdCt01.FilterAsync(PhieuXuatDtos, query);
    }
    private void OnValueChangeSoHdCt01(ChangeEventArgs<string, PhieuXuatDto> args)
    {
        this.SfGridPhieuThuCt01.PreventRender(false);
        if (args.ItemData != null)
        {
            TempPhieuThuCt01.SoHd = args.ItemData.SoHd;
            TempPhieuThuCt01.NgayHd = args.ItemData.NgayLap;
            TempPhieuThuCt01.NgoaiTeId = args.ItemData.NgoaiTeId;
            TempPhieuThuCt01.NgoaiTeUd = args.ItemData.NgoaiTeUd;
            TempPhieuThuCt01.TyGia = args.ItemData.TiGia;
            TempPhieuThuCt01.GhiCoTk = args.ItemData.GhiNoTk;
            TempPhieuThuCt01.GhiCoTkUd = args.ItemData.GhiNoTkUd;
            TempPhieuThuCt01.GhiCoTkNm = args.ItemData.GhiNoTkNm;
            TempPhieuThuCt01.TienTrenHd = args.ItemData.TienPhaiTtVND;
            TempPhieuThuCt01.DaTt = args.ItemData.TienTt;
            TempPhieuThuCt01.ConPhaiTt = args.ItemData.ConPhaiTt;
        }
    }
    private void OnValueChangeThanhToanCt01(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        this.SfGridPhieuThuCt01.PreventRender(false);
        TempPhieuThuCt01.ThanhToan = decimal.Parse(args.Value?.ToString() == "" ? "0" : args.Value?.ToString() ?? "0");
        if (TempPhieuThuCt01.ThanhToan != 0)
            TempPhieuThuCt01.ThanhToanVND = TempPhieuThuCt01.ThanhToan * SelectPhieuThu.TyGia;
    }
    private void OnValueChangeThanhToanVNDCt01(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        this.SfGridPhieuThuCt01.PreventRender(false);
        TempPhieuThuCt01.ThanhToanVND = decimal.Parse(args.Value?.ToString() == "" ? "0" : args.Value?.ToString() ?? "0");
    }
    private void OnValueChangeDienGiaiCt01(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        this.SfGridPhieuThuCt01.PreventRender(false);
        TempPhieuThuCt01.DienGiai = args.Value?.ToString();
    }
    //Màn hình chi tiết(Giao dịch 1) end

    //Màn hình chi tiết(Giao dịch 2)
    private void ActionBeginPhieuThuCt02(ActionEventArgs<PhieuThuCt02Request> args)
    {
        this.SfGridPhieuThuCt02.PreventRender(false);
        if (args.RequestType.Equals(Syncfusion.Blazor.Grids.Action.Add))
        {
            int? maxId = PhieuThuCt02Requests?.Any() == true ? PhieuThuCt02Requests.Max(x => x.Stt) : 0;
            args.Data.Stt = maxId + 1; // Tăng giá trị Id lên 1
            TempPhieuThuCt02 = new PhieuThuCt02Request()
                {
                    GhiCoTk = null,
                    GhiCoTkUd = null,
                    GhiCoTkNm = null,
                    PsCo = 0,
                    PsCoVND = 0,
                    DienGiai = null,
                };
        }
    }
    public void ActionCompletedPhieuThuCt02(ActionEventArgs<PhieuThuCt02Request> args)
    {
        if (PhieuThuCt02Requests.Count > 0)
        {
            CheckEnabledMaGiaoDich = false;
            decimal? tongTienVND = 0; decimal? tongTien = 0;
            foreach (var item in PhieuThuCt02Requests)
            {
                tongTien += item.PsCo;
                tongTienVND += item.PsCoVND;
            }
            SelectPhieuThu.TongTien = tongTien;
            SelectPhieuThu.TongTienVND = tongTienVND;
        }
        else
        {
            SelectPhieuThu.TongTienVND = 0;
            SelectPhieuThu.TongTien = 0;
            CheckEnabledMaGiaoDich = true;
            if (ShowScreenGiaoDich1)
            {
                CheckEnabledMaKhachHang = true;
            }
        }

    }
    public void RowUpdatingPhieuThuCt02(RowUpdatingEventArgs<PhieuThuCt02Request> args)
    {
        args.Data.GhiCoTk = TempPhieuThuCt02.GhiCoTk;
        args.Data.GhiCoTkUd = TempPhieuThuCt02.GhiCoTkUd;
        args.Data.GhiCoTkNm = TempPhieuThuCt02.GhiCoTkNm;
        args.Data.PsCo = TempPhieuThuCt02.PsCo;
        args.Data.PsCoVND = TempPhieuThuCt02.PsCoVND;
        args.Data.DienGiai = TempPhieuThuCt02.DienGiai;
    }
    public void RecordDoubleClickPhieuThuCt02(RecordDoubleClickEventArgs<PhieuThuCt02Request> args)
    {
        this.SfGridPhieuThuCt02.PreventRender(false);
        TempPhieuThuCt02 = args.RowData;
    }
    public async Task OnFilteringTaiKhoanCt02(Syncfusion.Blazor.DropDowns.FilteringEventArgs args)
    {
        args.PreventDefaultAction = true;
        var orWhere = WhereFilter.Or(new List<WhereFilter> {
            new WhereFilter() { Field = "TaiKhoanUd", Operator = "contains", value = args.Text, IgnoreCase = true },
            new WhereFilter() { Field = "TaiKhoanNm", Operator = "contains", value = args.Text, IgnoreCase = true }
        });
        var query = new Query().Where(orWhere);
        query = !string.IsNullOrEmpty(args.Text) ? query : new Query();
        await ddTKCt02.FilterAsync(TaiKhoanDtos, query);
    }
    private void OnValueChangeTaiKhoanCt02(ChangeEventArgs<int?, TaiKhoanDto> args)
    {
        this.SfGridPhieuThuCt02.PreventRender(false);
        if (args.ItemData != null)
        {
            TempPhieuThuCt02.GhiCoTk = args.ItemData.Id;
            TempPhieuThuCt02.GhiCoTkUd = args.ItemData.TaiKhoanUd;
            TempPhieuThuCt02.GhiCoTkNm = args.ItemData.TaiKhoanNm;
        }
    }
    private void OnValueChangePsCoCt02(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        this.SfGridPhieuThuCt02.PreventRender(false);
        TempPhieuThuCt02.PsCo = decimal.Parse(args.Value?.ToString() == "" ? "0" : args.Value?.ToString() ?? "0");
        if (TempPhieuThuCt02.PsCo != 0)
            TempPhieuThuCt02.PsCoVND = TempPhieuThuCt02.PsCo * SelectPhieuThu.TyGia;
    }
    private void OnValueChangePsCoVNDCt02(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        this.SfGridPhieuThuCt02.PreventRender(false);
        TempPhieuThuCt02.PsCoVND = decimal.Parse(args.Value?.ToString() == "" ? "0" : args.Value?.ToString() ?? "0");
    }
    private void OnValueChangeDienGiaiCt02(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        this.SfGridPhieuThuCt02.PreventRender(false);
        TempPhieuThuCt02.DienGiai = args.Value?.ToString();
    }
    //Màn hình chi tiết(Giao dịch 2) end

    //Màn hình chi tiết(Giao dịch 3)
    private void ActionBeginPhieuThuCt03(ActionEventArgs<PhieuThuCt03Request> args)
    {
        this.SfGridPhieuThuCt03.PreventRender(false);
        if (args.RequestType.Equals(Syncfusion.Blazor.Grids.Action.Add))
        {
            int? maxId = PhieuThuCt03Requests?.Any() == true ? PhieuThuCt03Requests.Max(x => x.Stt) : 0;
            args.Data.Stt = maxId + 1; // Tăng giá trị Id lên 1
            TempPhieuThuCt03 = new PhieuThuCt03Request()
                {
                    GhiCoTk = null,
                    GhiCoTkUd = null,
                    GhiCoTkNm = null,
                    KhachHangId = null,
                    KhachHangUd = null,
                    KhachHangNm = null,
                    PsCo = 0,
                    PsCoVND = 0,
                    DienGiai = null,
                };
        }
    }
    public void ActionCompletedPhieuThuCt03(ActionEventArgs<PhieuThuCt03Request> args)
    {
        if (PhieuThuCt03Requests.Count > 0)
        {
            CheckEnabledMaGiaoDich = false;
            decimal? tongTienVND = 0; decimal? tongTien = 0;
            foreach (var item in PhieuThuCt03Requests)
            {
                tongTien += item.PsCo;
                tongTienVND += item.PsCoVND;
            }
            SelectPhieuThu.TongTien = tongTien;
            SelectPhieuThu.TongTienVND = tongTienVND;
        }
        else
        {
            SelectPhieuThu.TongTienVND = 0;
            SelectPhieuThu.TongTien = 0;
            CheckEnabledMaGiaoDich = true;
            if (ShowScreenGiaoDich1)
            {
                CheckEnabledMaKhachHang = true;
            }
        }

    }
    public void RowUpdatingPhieuThuCt03(RowUpdatingEventArgs<PhieuThuCt03Request> args)
    {
        args.Data.GhiCoTk = TempPhieuThuCt03.GhiCoTk;
        args.Data.GhiCoTkUd = TempPhieuThuCt03.GhiCoTkUd;
        args.Data.GhiCoTkNm = TempPhieuThuCt03.GhiCoTkNm;
        args.Data.KhachHangId = TempPhieuThuCt03.KhachHangId;
        args.Data.KhachHangUd = TempPhieuThuCt03.KhachHangUd;
        args.Data.KhachHangNm = TempPhieuThuCt03.KhachHangNm;
        args.Data.PsCo = TempPhieuThuCt03.PsCo;
        args.Data.PsCoVND = TempPhieuThuCt03.PsCoVND;
        args.Data.DienGiai = TempPhieuThuCt03.DienGiai;
    }
    public void RecordDoubleClickPhieuThuCt03(RecordDoubleClickEventArgs<PhieuThuCt03Request> args)
    {
        this.SfGridPhieuThuCt03.PreventRender(false);
        TempPhieuThuCt03 = args.RowData;
    }
    public async Task OnFilteringTaiKhoanCt03(Syncfusion.Blazor.DropDowns.FilteringEventArgs args)
    {
        args.PreventDefaultAction = true;
        var orWhere = WhereFilter.Or(new List<WhereFilter> {
            new WhereFilter() { Field = "TaiKhoanUd", Operator = "contains", value = args.Text, IgnoreCase = true },
            new WhereFilter() { Field = "TaiKhoanNm", Operator = "contains", value = args.Text, IgnoreCase = true }
        });
        var query = new Query().Where(orWhere);
        query = !string.IsNullOrEmpty(args.Text) ? query : new Query();
        await ddTKCt03.FilterAsync(TaiKhoanDtos, query);
    }
    private void OnValueChangeTaiKhoanCt03(ChangeEventArgs<int?, TaiKhoanDto> args)
    {
        this.SfGridPhieuThuCt03.PreventRender(false);
        if (args.ItemData != null)
        {
            TempPhieuThuCt03.GhiCoTk = args.ItemData.Id;
            TempPhieuThuCt03.GhiCoTkUd = args.ItemData.TaiKhoanUd;
            TempPhieuThuCt03.GhiCoTkNm = args.ItemData.TaiKhoanNm;
        }
    }
    public async Task OnFilteringKhachHangCt03(Syncfusion.Blazor.DropDowns.FilteringEventArgs args)
    {
        args.PreventDefaultAction = true;
        var orWhere = WhereFilter.Or(new List<WhereFilter> {
            new WhereFilter() { Field = "KhachHangUd", Operator = "contains", value = args.Text, IgnoreCase = true },
            new WhereFilter() { Field = "KhachHangNm", Operator = "contains", value = args.Text, IgnoreCase = true }
        });
        var query = new Query().Where(orWhere);
        query = !string.IsNullOrEmpty(args.Text) ? query : new Query();
        await ddKHCt03.FilterAsync(KhachHangDtos, query);
    }
    private void OnValueChangeKhachHangCt03(ChangeEventArgs<int?, KhachHangDto> args)
    {
        if (args.ItemData != null)
        {
            TempPhieuThuCt03.KhachHangId = args.ItemData.Id;
            TempPhieuThuCt03.KhachHangUd = args.ItemData.KhachHangUd;
            TempPhieuThuCt03.KhachHangNm = args.ItemData.KhachHangNm;
        }
    }
    private void OnValueChangePsCoCt03(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        this.SfGridPhieuThuCt03.PreventRender(false);
        TempPhieuThuCt03.PsCo = decimal.Parse(args.Value?.ToString() == "" ? "0" : args.Value?.ToString() ?? "0");
        if (TempPhieuThuCt03.PsCo != 0)
            TempPhieuThuCt03.PsCoVND = TempPhieuThuCt03.PsCo * SelectPhieuThu.TyGia;
    }
    private void OnValueChangePsCoVNDCt03(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        this.SfGridPhieuThuCt03.PreventRender(false);
        TempPhieuThuCt03.PsCoVND = decimal.Parse(args.Value?.ToString() == "" ? "0" : args.Value?.ToString() ?? "0");
    }
    private void OnValueChangeDienGiaiCt03(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        this.SfGridPhieuThuCt03.PreventRender(false);
        TempPhieuThuCt03.DienGiai = args.Value?.ToString();
    }
    //Màn hình chi tiết(Giao dịch 3) end

    //Màn hình chi tiết(Giao dịch 4)
    private void ActionBeginPhieuThuCt04(ActionEventArgs<PhieuThuCt04Request> args)
    {
        this.SfGridPhieuThuCt04.PreventRender(false);
        if (args.RequestType.Equals(Syncfusion.Blazor.Grids.Action.Add))
        {
            int? maxId = PhieuThuCt04Requests?.Any() == true ? PhieuThuCt04Requests.Max(x => x.Stt) : 0;
            args.Data.Stt = maxId + 1; // Tăng giá trị Id lên 1
            TempPhieuThuCt04 = new PhieuThuCt04Request()
                {
                    GhiCoTk = null,
                    GhiCoTkUd = null,
                    GhiCoTkNm = null,
                    PsCo = 0,
                    PsCoVND = 0,
                    DienGiai = null,
                };
        }
    }
    public void ActionCompletedPhieuThuCt04(ActionEventArgs<PhieuThuCt04Request> args)
    {
        if (PhieuThuCt04Requests.Count > 0)
        {
            CheckEnabledMaGiaoDich = false;
            decimal? tongTienVND = 0; decimal? tongTien = 0;
            foreach (var item in PhieuThuCt04Requests)
            {
                tongTien += item.PsCo;
                tongTienVND += item.PsCoVND;
            }
            SelectPhieuThu.TongTien = tongTien;
            SelectPhieuThu.TongTienVND = tongTienVND;
        }
        else
        {
            SelectPhieuThu.TongTienVND = 0;
            SelectPhieuThu.TongTien = 0;
            CheckEnabledMaGiaoDich = true;
            if (ShowScreenGiaoDich1)
            {
                CheckEnabledMaKhachHang = true;
            }
        }

    }
    public void RowUpdatingPhieuThuCt04(RowUpdatingEventArgs<PhieuThuCt04Request> args)
    {
        args.Data.GhiCoTk = TempPhieuThuCt04.GhiCoTk;
        args.Data.GhiCoTkUd = TempPhieuThuCt04.GhiCoTkUd;
        args.Data.GhiCoTkNm = TempPhieuThuCt04.GhiCoTkNm;
        args.Data.PsCo = TempPhieuThuCt04.PsCo;
        args.Data.PsCoVND = TempPhieuThuCt04.PsCoVND;
        args.Data.DienGiai = TempPhieuThuCt04.DienGiai;
    }
    public void RecordDoubleClickPhieuThuCt04(RecordDoubleClickEventArgs<PhieuThuCt04Request> args)
    {
        this.SfGridPhieuThuCt04.PreventRender(false);
        TempPhieuThuCt04 = args.RowData;
    }
    public async Task OnFilteringTaiKhoanCt04(Syncfusion.Blazor.DropDowns.FilteringEventArgs args)
    {
        args.PreventDefaultAction = true;
        var orWhere = WhereFilter.Or(new List<WhereFilter> {
            new WhereFilter() { Field = "TaiKhoanUd", Operator = "contains", value = args.Text, IgnoreCase = true },
            new WhereFilter() { Field = "TaiKhoanNm", Operator = "contains", value = args.Text, IgnoreCase = true }
        });
        var query = new Query().Where(orWhere);
        query = !string.IsNullOrEmpty(args.Text) ? query : new Query();
        await ddTKCt04.FilterAsync(TaiKhoanDtos, query);
    }
    private void OnValueChangeTaiKhoanCt04(ChangeEventArgs<int?, TaiKhoanDto> args)
    {
        this.SfGridPhieuThuCt04.PreventRender(false);
        if (args.ItemData != null)
        {
            TempPhieuThuCt04.GhiCoTk = args.ItemData.Id;
            TempPhieuThuCt04.GhiCoTkUd = args.ItemData.TaiKhoanUd;
            TempPhieuThuCt04.GhiCoTkNm = args.ItemData.TaiKhoanNm;
        }
    }
    private void OnValueChangePsCoCt04(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        this.SfGridPhieuThuCt04.PreventRender(false);
        TempPhieuThuCt04.PsCo = decimal.Parse(args.Value?.ToString() == "" ? "0" : args.Value?.ToString() ?? "0");
        if (TempPhieuThuCt04.PsCo != 0)
            TempPhieuThuCt04.PsCoVND = TempPhieuThuCt04.PsCo * SelectPhieuThu.TyGia;
    }
    private void OnValueChangePsCoVNDCt04(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        this.SfGridPhieuThuCt04.PreventRender(false);
        TempPhieuThuCt04.PsCoVND = decimal.Parse(args.Value?.ToString() == "" ? "0" : args.Value?.ToString() ?? "0");
    }
    private void OnValueChangeDienGiaiCt04(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        this.SfGridPhieuThuCt04.PreventRender(false);
        TempPhieuThuCt04.DienGiai = args.Value?.ToString();
    }
    //Màn hình chi tiết(Giao dịch 4) end
    private void MapPhieuThuCt()
    {
        if (ShowScreenGiaoDich1)
        {
           PhieuThuCt01Requests.ForEach(x => 
            {
                x.PsCo = x.ThanhToan;
                x.PsCoVND = x.ThanhToanVND;
            });
            PhieuThuCtRequests = _objectMapper.Map<List<PhieuThuCt01Request>, List<PhieuThuCTRequest>>(PhieuThuCt01Requests);
        }
        else if (ShowScreenGiaoDich2)
        {
            PhieuThuCtRequests = _objectMapper.Map<List<PhieuThuCt02Request>, List<PhieuThuCTRequest>>(PhieuThuCt02Requests);
        }
        else if (ShowScreenGiaoDich3)
        {
            PhieuThuCtRequests = _objectMapper.Map<List<PhieuThuCt03Request>, List<PhieuThuCTRequest>>(PhieuThuCt03Requests);
        }
        else if (ShowScreenGiaoDich4)
        {
            PhieuThuCtRequests = _objectMapper.Map<List<PhieuThuCt04Request>, List<PhieuThuCTRequest>>(PhieuThuCt04Requests);
        }

    }
    private async Task SaveAsync()
    {
        this.MapPhieuThuCt();
        if (!CheckNgoaiTe) //Reset các giá trị ngoại tệ về 0 khi Ngoại tệ đang là VND
        {
            PhieuThuCtRequests.ForEach(x =>
            {
                x.PsCo = 0;
                x.ThanhToan = 0;
            });
        }
        SelectPhieuThu.PhieuThuCTRequests = PhieuThuCtRequests;
        SelectPhieuThu.LoaiPhieu = SystemConstants.LoaiPhieu.PhieuThu;
        var result = await _phieuThu.CreateAsync(SelectPhieuThu);
        if (result.Id.HasValue && result.Id > 0)
        {
            if (SelectPhieuThu.QuyenSoId != null && SelectPhieuThu.SoPhieu != null)
            {
                await _quyenSo.UpdateSoCTAsync(SystemConstants.LoaiPhieu.PhieuThu, SelectPhieuThu.QuyenSoId, SelectPhieuThu.SoPhieu);
            }
            NewId = result.Id.ToString();
            ScreenDisable();
        }
        else
        {
            TextMessage = result.Message;
            CheckMessage = false;
            IsDeleteMessage = false;
            IsConfirmMessage = false;
            ShowModalMessage = true;
        }

    }
    private void CloseModalMessage()
    {
        ShowModalMessage = false;
    }
    private void DefaultValueChiNhanh(List<ChiNhanhDto> chiNhanhDtos)
    {
        var item = chiNhanhDtos.FirstOrDefault();
        SelectPhieuThu.ChiNhanhId = item?.Id;
        SelectPhieuThu.ChiNhanhNm = item?.ChiNhanhNm;
    }
    private void DefaultValueMaGiaDich(List<DmChungDto> maGiaoDichDtos)
    {
        var item = maGiaoDichDtos.FirstOrDefault(x => x.DMChungUd == "2");
        SelectPhieuThu.GiaoDichId = item?.Id;
        SelectPhieuThu.GiaoDichNm = item?.DMChungNm;
    }

    private void DefaultValueQuyenSo(List<QuyenSoDto> quyenSoDtos)
    {
        var item = new QuyenSoDto();
        item = quyenSoDtos.FirstOrDefault(x => x.IsUser == true);
        if (item != null)
        {
            item = quyenSoDtos.FirstOrDefault();
        }
        SelectPhieuThu.QuyenSoId = item?.SoQuyen;
        string sokiTu0 = item?.SoKyTu0.HasValue == true ? "D" + item.SoKyTu0.ToString() : "D0";
        SelectPhieuThu.SoPhieu = item?.SoCtHienTai.HasValue == true ? (item.SoCtHienTai.Value + 1).ToString(sokiTu0) : "0";
    }
    private void DefaultValueGhiCoTaiKhoan(List<TaiKhoanDto> taiKhoanDtos)
    {
        var item = taiKhoanDtos.FirstOrDefault();
        SelectPhieuThu.GhiNoTkId = item?.Id;
        SelectPhieuThu.GhiNoTkNm = item?.TaiKhoanNm;
    }
    private async void DefaultValueNgoaiTe(List<NgoaiTeDto> ngoaiTeDtos)
    {
        var ngoaiTe = ngoaiTeDtos.FirstOrDefault(x => x.NgoaiTeUd == "VND");
        if (ngoaiTe != null)
        {
            SelectPhieuThu.NgoaiTeId = ngoaiTe.Id;
            var tyGiaNgoaiTe = await _ngoaiTe.GetByIdAsync(ngoaiTe.Id);
            SelectPhieuThu.TyGia = tyGiaNgoaiTe.TyGiaNgoaiTeDtos?.First().TyGia;
            StateHasChanged();//cập nhật giao diện ngay tức thì
        }
    }
    //Tạo mới trên phiếu
    public void TaoChiNhanh()
    {
        ShowModalTaoMoiCN = true;
    }

    public void TaoKhachHang()
    {
        ShowModalTaoMoiKH = true;
    }

    //[JSInvokable("CloseModal")]
    public async Task CloseModal()
    {
        switch (true)
        {
            case var _ when ShowModalTaoMoiCN:
                var chiNhanhUd = await _localStorage.GetItemAsync<string>("TaoMoiChiNhanhUd");
                if (!chiNhanhUd.IsNullOrEmpty())
                {
                    ChiNhanhDtos = await _chiNhanh.GetListAsync();
                    var item = ChiNhanhDtos.First(x => x.ChiNhanhUd == chiNhanhUd);
                    SelectPhieuThu.ChiNhanhId = item.Id;
                    SelectPhieuThu.ChiNhanhNm = item.ChiNhanhNm;
                    await _localStorage.RemoveItemAsync("TaoMoiChiNhanhUd");
                }
                ShowModalTaoMoiCN = false;
                break;
            case var _ when ShowModalTaoMoiKH:
                var KhachHangUd = await _localStorage.GetItemAsync<string>("TaoMoiKhachHangUd");
                if (!KhachHangUd.IsNullOrEmpty())
                {
                    KhachHangDtos = await _khachHang.GetListAsync(SystemConstants.KhachHang.Loai1);
                    var item = KhachHangDtos.First(x => x.KhachHangUd == KhachHangUd);
                    SelectPhieuThu.KhachHangId = item.Id;
                    SelectPhieuThu.KhachHangNm = item.KhachHangNm;
                    await _localStorage.RemoveItemAsync("TaoMoiKhachHangUd");
                }
                ShowModalTaoMoiKH = false;
                break;
        }
        StateHasChanged();
    }

    // ẩn màn hình
    private void ScreenDisable()
    {
        GridAttributes["disable"] = "yes";
        IsDisabled = true;
        IsSaveDisabled = true;
        IsCancelDisabled = true;
        IsAddDisabled = false;
        IsEditDisabled = false;
        IsDeleteDisabled = false;
        IsPrintDisabled = false;
        IsCopyDisabled = false;
        IsCloseDisabled = false;
        IsNextDisabled = false;
    }
    // Hiện màn hình
    private void ScreenEnabled()
    {
        GridAttributes["disable"] = "no";
        IsDisabled = false;
        IsSaveDisabled = false;
        IsCancelDisabled = false;
        IsAddDisabled = true;
        IsEditDisabled = true;
        IsDeleteDisabled = true;
        IsPrintDisabled = true;
        IsCopyDisabled = true;
        IsCloseDisabled = true;
        IsNextDisabled = true;
    }

    // footer menu
    private void Cancel()
    {

        IsDeleteMessage = false;
        IsConfirmMessage = true;
        CheckMessage = true;
        TextMessage = "Dữ liệu trên form chưa được lưu. Bạn muốn thoát không cần lưu?";
        ShowModalMessage = true;

    }
    private async Task ConfirmCancelAsync()
    {
        ScreenDisable();
        await RefreshAsync();
        if (PhieuThuDtos.Count == 0)
            NavigationManager.NavigateTo($"{SystemConstants.UrlPath.PhieuThu}", true);
        else
        {
            await DefaultData(CurrentIndex);
            ShowModalMessage = false;
            CheckMessage = false;
            IsDeleteMessage = false;
            IsConfirmMessage = false;
        }
    }
    private void Close()
    {
        NavigationManager.NavigateTo($"{SystemConstants.UrlPath.PhieuThu}", true);
    }
    private void Add()
    {
        NavigationManager.NavigateTo($"{SystemConstants.UrlPath.PhieuThu}/create", true);
    }
    private void Edit()
    {
        NavigationManager.NavigateTo($"{SystemConstants.UrlPath.PhieuThu}/edit/{NewId}", true);
    }
    private void Delete()
    {
        ShowModalMessage = true;
        IsDeleteMessage = true;
        IsConfirmMessage = false;
        TextMessage = $"Xác nhận xóa phiếu có số chứng từ  <span style='color:red'>{SelectPhieuThu.SoPhieu}</span>";
    }
    private async Task ConfirmDeleleAsync()
    {
        var result = await _phieuThu.DeleteAsync(int.Parse(NewId != null ? NewId : "0"));
        if (result.IsSuccessed)
        {
            await RefreshAsync();
            if (PhieuThuDtos.Count == 0)
                NavigationManager.NavigateTo($"{SystemConstants.UrlPath.PhieuThu}", true);
            else if (CurrentIndex > PhieuThuDtos.Count - 1)
                CurrentIndex = PhieuThuDtos.Count - 1;
            await DefaultData(CurrentIndex);
            ShowModalMessage = false;
        }
        else
        {
            ShowModalMessage = true;
            IsDeleteMessage = true;
            IsConfirmMessage = false;
            TextMessage = result.Message;
        }
    }
    private async Task Copy()
    {
        QuyenSoDtos = await _quyenSo.GetListAsync(SystemConstants.LoaiPhieu.PhieuThu);
        if (QuyenSoDtos != null)
            this.DefaultValueQuyenSo(QuyenSoDtos);
        ScreenEnabled();
    }
    private async Task FirstAsync()
    {
        await RefreshAsync();
        CurrentIndex = 0;
        await DefaultData(CurrentIndex);
    }

    private async Task PreviousAsync()
    {
        if (CurrentIndex > 0)
        {
            await RefreshAsync();
            CurrentIndex--;
            await DefaultData(CurrentIndex);
        }
    }

    private async Task NextAsync()
    {
        await RefreshAsync();
        if (CurrentIndex < PhieuThuDtos.Count - 1)
        {
            CurrentIndex++;
            await DefaultData(CurrentIndex);
        }
    }

    private async Task LastAsync()
    {
        await RefreshAsync();
        CurrentIndex = PhieuThuDtos.Count - 1;
        await DefaultData(CurrentIndex);
    }
    // Footer menu end
    private async Task DefaultData(int currentIndex, bool isCheck = false)
    {
        if (currentIndex >= 0 && currentIndex < PhieuThuDtos.Count)
        {
            var id = PhieuThuDtos[currentIndex].Id;
            if (!isCheck)
            {
                NewId = id.ToString();
            }
            var phieuThu = await _phieuThu.GetByIdAsync(NewId != null ? int.Parse(NewId) : id);
            if (phieuThu.Id != null)
            {
                CheckEnabledMaGiaoDich = false;
                SelectPhieuThu = _objectMapper.Map<PhieuThuDto, PhieuThuRequest>(phieuThu);
                PhieuThuCtRequests = _objectMapper.Map<List<PhieuThuCTDto>, List<PhieuThuCTRequest>>(phieuThu.PhieuThuCTDtos ?? new List<PhieuThuCTDto>());
                switch (SelectPhieuThu.GiaoDichUd)
                {
                    case "1":
                        ShowScreenGiaoDich1 = true;
                        PhieuXuatDtos = await _phieuXuat.GetListByKhachHangIdAsync(SelectPhieuThu.KhachHangId);
                        foreach (var item in PhieuXuatDtos)
                        {
                            var nt = await _ngoaiTe.GetByIdAsync(item.NgoaiTeId);
                            var tk = await _taiKhoan.GetByIdAsync(item.GhiNoTk);
                            item.GhiNoTkUd = tk.TaiKhoanUd;
                            item.NgoaiTeUd = nt.NgoaiTeUd;
                        }
                        ShowScreenGiaoDich2 = false;
                        ShowScreenGiaoDich3 = false;
                        ShowScreenGiaoDich4 = false;
                        PhieuThuCt01Requests = _objectMapper.Map<List<PhieuThuCTRequest>, List<PhieuThuCt01Request>>(PhieuThuCtRequests);
                        break;
                    case "2":
                        ShowScreenGiaoDich2 = true;
                        ShowScreenGiaoDich1 = false;
                        ShowScreenGiaoDich3 = false;
                        ShowScreenGiaoDich4 = false;
                        PhieuThuCt02Requests = _objectMapper.Map<List<PhieuThuCTRequest>, List<PhieuThuCt02Request>>(PhieuThuCtRequests);
                        break;
                    case "3":
                        ShowScreenGiaoDich3 = true;
                        ShowScreenGiaoDich1 = false;
                        ShowScreenGiaoDich2 = false;
                        ShowScreenGiaoDich4 = false;
                        PhieuThuCt03Requests = _objectMapper.Map<List<PhieuThuCTRequest>, List<PhieuThuCt03Request>>(PhieuThuCtRequests);
                        break;
                    case "4":
                        ShowScreenGiaoDich4 = true;
                        ShowScreenGiaoDich1 = false;
                        ShowScreenGiaoDich2 = false;
                        ShowScreenGiaoDich3 = false;
                        PhieuThuCt04Requests = _objectMapper.Map<List<PhieuThuCTRequest>, List<PhieuThuCt04Request>>(PhieuThuCtRequests);
                        break;
                    default:
                        break;
                }
                if (NgoaiTeDtos.Count > 0 && NgoaiTeDtos.First(x => x.Id == SelectPhieuThu.NgoaiTeId).NgoaiTeUd != "VND")
                    CheckNgoaiTe = true;
                else
                    CheckNgoaiTe = false;
            }
            else
            {
                NavigationManager.NavigateTo("error");
            }
        }
    }

    private async Task RefreshAsync()
    {
        DateTime? tuNgay = await _localStorage.GetItemAsync<string>("TuNgayLamViec") != null ? DateTime.Parse(await _localStorage.GetItemAsync<string>("TuNgayLamViec")) : null;
        DateTime? denNgay = await _localStorage.GetItemAsync<string>("DenNgayLamViec") != null ? DateTime.Parse(await _localStorage.GetItemAsync<string>("DenNgayLamViec")).AddDays(1) : null;
        if (tuNgay != null && denNgay != null)
        {
            PhieuThuDtos = await _phieuThu.GetListAsync(SystemConstants.LoaiPhieu.PhieuThu, tuNgay, denNgay);
            ChiNhanhDtos = await _chiNhanh.GetListAsync();
            MaGiaoDichDtos = await _dmChung.GetListAsync(SystemConstants.DmChung.GiaoDichThu);
            KhachHangDtos = await _khachHang.GetListAsync(SystemConstants.KhachHang.Loai1);
            QuyenSoDtos = await _quyenSo.GetListAsync(SystemConstants.LoaiPhieu.PhieuThu);
            TaiKhoanDtos = await _taiKhoan.GetListAsync();
            NgoaiTeDtos = await _ngoaiTe.GetListAsync();
            DMChungDtos = await _dmChung.GetListAsync(SystemConstants.DmChung.LoaiThue);
            BoPhanHTDtos = await _boPhanHT.GetListAsync();
            //VatTuDtos = await _vatTu.GetListAsync();
            VuViecDtos = await _vuViec.GetListAsync();
            DmMaPhiDtos = await _dmMaPhi.GetListAsync();
            DieuChinhThueTNDnDtos = await _dieuChinhThueTNDN.GetListAsync();
            DmTruongTuDo1Dtos = await _dmTruongTuDo.GetListLoai1Async();
            DmTruongTuDo2Dtos = await _dmTruongTuDo.GetListLoai2Async();
            DmTruongTuDo3Dtos = await _dmTruongTuDo.GetListLoai3Async();
        }
        else
        {
            NavigationManager.NavigateTo(SystemConstants.UrlPath.ThoiGianLamViec, true);
        }
    }

    //Hàm giải phóng bộ nhớ
    async ValueTask IAsyncDisposable.DisposeAsync()
    {
        if (jsModule is not null)
        {
            await jsModule.DisposeAsync();
        }
    }
}
