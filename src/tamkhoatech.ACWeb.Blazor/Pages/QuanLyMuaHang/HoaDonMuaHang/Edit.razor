@page "/hoadonmuahang/edit/{Id}"
@using Blazored.LocalStorage
@using Syncfusion.Blazor.Data
@using Volo.Abp.ObjectMapping
@using tamkhoatech.ACWeb.Blazor.Pages.Common
@using tamkhoatech.ACWeb.Constants
@using tamkhoatech.ACWeb.Dto
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Calendars
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.DropDowns
@using tamkhoatech.ACWeb.IService
@using tamkhoatech.ACWeb.IService.IQuanLyMuaHang
@using tamkhoatech.ACWeb.IService.IUtilities

@inject IJSRuntime JSRunTime
@inject ILocalStorageService _localStorage
@inject IObjectMapper _objectMapper
@inject NavigationManager NavigationManager
@inject IKhachHangService _khachHang
@inject IQuyenSoService _quyenSo
@inject ITaiKhoanService _taiKhoan
@inject INgoaiTeService _ngoaiTe
@inject ISoCaiService _soCai
@inject IVatTuService _vatTu
@inject IKhoService _kho
@inject IVuViecService _vuViec
@inject IDmMaPhiService _dmMaPhi
@inject IDmTruongTuDoService _dmTruongTuDo
@inject IDMChungService _dmChung
@inject IPhieuNhapService _phieuNhap
@inject IChiNhanhService _chiNhanh
@inject ICommonService _common
@inject IThueSuatService _thueSuat

<link rel="stylesheet" href="/Css/them-sua-phieu.css">
@if (hasRefreshed)
{
    <div @onkeyup="@OnKeyUp" @onblur="FocusOnInput">
        <div class="row title">
            <div class="text-center">
                <div class="row align-items-start">
                    <h4><strong>Chỉnh sửa hóa đơn mua dịch vụ</strong></h4>
                </div>
            </div>
        </div>
        <EditForm Model="SelectPhieuNhap" Context="EditFormPN1" OnValidSubmit="@SaveAsync">
            <DataAnnotationsValidator />
            <div class="row">
                <div class="col-sm-12">
                    <div class="bordered-div">
                        <div class="row">
                            <div class="col-sm-4 ">
                                <div class="mb-1">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <label for="ChiNhanhId" class="form-label">Mã chi nhánh <span class="text-danger">*</span></label>
                                        </div>
                                        <div class="col-sm-4">
                                            <div class="d-flex align-items-center">
                                                <SfComboBox @ref="ddCN" @bind-Value="@SelectPhieuNhap.ChiNhanhId" DataSource="@ChiNhanhDtos" AllowFiltering="true" Autofill="true" AllowCustom="false" Enabled="!IsDisabled" CssClass="e-multi-column e-small" PopupWidth="700" PopupHeight="300">
                                                    <ComboBoxEvents TValue="int?" TItem="ChiNhanhDto" Filtering="OnFilteringChiNhanh" ValueChange="OnValueChangeChiNhanh"></ComboBoxEvents>
                                                    <ComboBoxFieldSettings Value="Id" Text="ChiNhanhUd" />
                                                    <ComboBoxTemplates TItem="ChiNhanhDto">
                                                        <HeaderTemplate>
                                                            <table class="header-combo">
                                                                <thead>
                                                                    <tr>
                                                                        <th style="width:150px">Mã chi nhánh</th>
                                                                        <th>Tên chi nhánh</th>
                                                                        <th>Tên 2</th>
                                                                    </tr>
                                                                </thead>
                                                            </table>
                                                        </HeaderTemplate>
                                                        <ItemTemplate Context="itemContext">
                                                            <table>
                                                                <tbody>
                                                                    <tr>
                                                                        <td style="width:150px"><span>@((itemContext as ChiNhanhDto).ChiNhanhUd)</span></td>
                                                                        <td><span>@((itemContext as ChiNhanhDto).ChiNhanhNm)</span></td>
                                                                        <td><span>@((itemContext as ChiNhanhDto).ChiNhanhNm2)</span></td>
                                                                    </tr>
                                                                </tbody>
                                                            </table>
                                                        </ItemTemplate>
                                                    </ComboBoxTemplates>
                                                </SfComboBox>
                                                <SfTooltip ID="TaoCN" Target="#target" Content="Thêm chi nhánh" Position="Position.RightTop" OpensOn="Hover">
                                                    <button id="target" type="button" class="btn-them-nhanh" @onclick="TaoChiNhanh" disabled="@IsDisabled">
                                                        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" class="bi bi-plus-circle" viewBox="0 0 16 16">
                                                            <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16" />
                                                            <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4" />
                                                        </svg>
                                                    </button>
                                                </SfTooltip>
                                            </div>
                                        </div>
                                        <div class="col-sm-8">
                                            <SfTextBox ID="ChiNhanhNm" CssClass="e-small" @bind-Value="@(SelectPhieuNhap.ChiNhanhNm)" Enabled="false"></SfTextBox>
                                        </div>
                                    </div>
                                </div>
                                <div class="mb-1">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <label for="KhachHangId" class="form-label">Mã khách hàng <span class="text-danger">*</span></label>
                                        </div>
                                        <div class="col-sm-4">
                                            <div class="d-flex align-items-center">
                                                <SfComboBox @ref="ddKH" @bind-Value="@SelectPhieuNhap.KhachHangId" DataSource="@KhachHangDtos" AllowFiltering="true" Autofill="true" AllowCustom="false" Enabled="!IsDisabled" CssClass="e-multi-column e-small" PopupWidth="1000" PopupHeight="300">
                                                    <ComboBoxEvents TValue="int?" TItem="KhachHangDto" Filtering="OnFilteringKhachHang" ValueChange="OnValueChangeKhachHang"></ComboBoxEvents>
                                                    <ComboBoxFieldSettings Text="KhachHangUd" Value="Id"></ComboBoxFieldSettings>
                                                    <ComboBoxTemplates TItem="KhachHangDto">
                                                        <HeaderTemplate>
                                                            <table class="header-combo">
                                                                <tr>
                                                                    <th style="width:150px">Mã khách hàng</th>
                                                                    <th>Tên khách</th>
                                                                    <th style="width:150px">Mã số thuế</th>
                                                                    <th style="width:150px">Số dư</th>
                                                                    <th>Địa chỉ</th>
                                                                </tr>
                                                            </table>
                                                        </HeaderTemplate>
                                                        <ItemTemplate Context="itemContext">
                                                            <table>
                                                                <tbody>
                                                                    <tr>
                                                                        <td style="width:130px"><span>@((itemContext as KhachHangDto).KhachHangUd)</span></td>
                                                                        <td><span>@((itemContext as KhachHangDto).KhachHangNm)</span></td>
                                                                        <td style="width:130px"><span>@((itemContext as KhachHangDto).MaSoThue)</span></td>
                                                                        <td style="width:130px"><span>@((itemContext as KhachHangDto).Sodu?.ToString("N0"))</span></td>
                                                                        <td><span>@((itemContext as KhachHangDto).DiaChi)</span></td>
                                                                    </tr>
                                                                </tbody>
                                                            </table>
                                                        </ItemTemplate>
                                                    </ComboBoxTemplates>
                                                </SfComboBox>
                                                <SfTooltip ID="TaoKH" Target="#target" Content="Thêm khách hàng" Position="Position.RightTop" OpensOn="Hover">
                                                    <button id="target" type="button" class="btn-them-nhanh" @onclick="TaoKhachHang" disabled="@IsDisabled">
                                                        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" class="bi bi-plus-circle" viewBox="0 0 16 16">
                                                            <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16" />
                                                            <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4" />
                                                        </svg>
                                                    </button>
                                                </SfTooltip>
                                            </div>

                                        </div>
                                        <div class="col-sm-8">
                                            <SfTextBox ID="KhachHangNm" CssClass="e-small" @bind-Value="@(SelectPhieuNhap.KhachHangNm)" Enabled="false"></SfTextBox>
                                        </div>
                                    </div>
                                </div>
                                <div class="mb-1">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <label for="DiaChi" class="form-label">Địa chỉ</label>
                                        </div>
                                        <div class="col-sm-12">
                                            <SfTextBox ID="DiaChi" CssClass="e-small" @bind-Value="@(SelectPhieuNhap.DiaChi)" Enabled="false"></SfTextBox>
                                        </div>
                                    </div>
                                </div>
                                <div class="mb-1">
                                    <div class="row">
                                        <div class="col-sm-6">
                                            <div class="row">
                                                <div class="col-sm-12">
                                                    <label for="MaSoThue" class="form-label">Mã số thuế</label>
                                                </div>
                                                <div class="col-sm-12">
                                                    <SfTextBox ID="MaSoThue" CssClass="e-small" @bind-Value="@(SelectPhieuNhap.MaSoThue)" Enabled="false"></SfTextBox>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="row">
                                                <div class="col-sm-12">
                                                    <label for="Sodu" class="form-label">Số dư</label>
                                                </div>
                                                <div class="col-sm-12">
                                                    <SfNumericTextBox ShowSpinButton="false" ID="Sodu" Format="N0" CssClass="e-small" @bind-Value="@(SelectPhieuNhap.SoDu)" Enabled="false"></SfNumericTextBox>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="mb-1">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <label for="NguoiGiaoHang" class="form-label">Người giao hàng</label>
                                        </div>
                                        <div class="col-sm-12">
                                            <SfTextBox ID="NguoiGiaoHang" CssClass="e-small" @bind-Value="@(SelectPhieuNhap.NguoiGiaoHang)" Enabled="!IsDisabled"></SfTextBox>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <div class="row">
                                    <div class="col-sm-6">
                                        <div class="mb-1">
                                            <div class="row">
                                                <div class="col-sm-12">
                                                    <label for="QuyenSo" class="form-label">Quyển sổ</label>
                                                </div>
                                                <div class="col-sm-12">
                                                    <div class="d-flex align-items-center">
                                                        <SfComboBox @ref="ddQS" @bind-Value="@SelectPhieuNhap.QuyenSo" DataSource="@QuyenSoDtos" AllowFiltering="true" Autofill="true" AllowCustom="false" Enabled="!IsDisabled" CssClass="e-multi-column e-small" PopupWidth="700" PopupHeight="300">
                                                            <ComboBoxEvents TValue="string" TItem="QuyenSoDto" Filtering="OnFilteringQuyenSo" ValueChange="OnValueChangeQuyenSo"></ComboBoxEvents>
                                                            <ComboBoxFieldSettings Text="SoQuyen" Value="SoQuyen"></ComboBoxFieldSettings>
                                                            <ComboBoxTemplates TItem="QuyenSoDto">
                                                                <HeaderTemplate>
                                                                    <table class="header-combo">
                                                                        <tr>
                                                                            <th>Mã ct</th>
                                                                            <th>Số quyển</th>
                                                                            <th>Số ct hiện tại</th>
                                                                            <th>Sử dụng</th>
                                                                        </tr>
                                                                    </table>
                                                                </HeaderTemplate>
                                                                <ItemTemplate Context="itemContext">
                                                                    <table>
                                                                        <tbody>
                                                                            <tr>
                                                                                <td><span>@((itemContext as QuyenSoDto).MaCt)</span></td>
                                                                                <td><span>@((itemContext as QuyenSoDto).SoQuyen)</span></td>
                                                                                <td><span>@((itemContext as QuyenSoDto).SoCtHienTai)</span></td>
                                                                                <td><span>@((itemContext as QuyenSoDto).IsUser)</span></td>
                                                                            </tr>
                                                                        </tbody>
                                                                    </table>
                                                                </ItemTemplate>
                                                            </ComboBoxTemplates>
                                                        </SfComboBox>
                                                        <SfTooltip ID="TaoQS" Target="#target" Content="Thêm quyển sổ" Position="Position.RightTop" OpensOn="Hover">
                                                            <button id="target" type="button" class="btn-them-nhanh" disabled="@IsDisabled">
                                                                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" class="bi bi-plus-circle" viewBox="0 0 16 16">
                                                                    <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16" />
                                                                    <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4" />
                                                                </svg>
                                                            </button>
                                                        </SfTooltip>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="mb-1">
                                            <div class="row">
                                                <div class="col-sm-12">
                                                    <label for="Sopn" class="form-label">Số phiếu nhập</label>
                                                </div>
                                                <div class="col-sm-12">
                                                    <SfTextBox ID="Sopn" CssClass="e-small" @bind-Value="@(SelectPhieuNhap.Sopn)" Enabled="!IsDisabled"></SfTextBox>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="mb-1">
                                            <div class="row">
                                                <div class="col-sm-12">
                                                    <label for="NgayHt" class="form-label">Ngày hạch toán <span class="text-danger">*</span></label>
                                                </div>
                                                <div class="col-sm-12">
                                                    <SfDatePicker TValue="DateTime?" CssClass="e-small" ShowClearButton="true" @bind-Value="@(SelectPhieuNhap.NgayHt)" Format="dd/MM/yyyy" FullScreen="true" Enabled="!IsDisabled">
                                                        <DatePickerEvents TValue="DateTime?" ValueChange="OnValueChangeNgayht"></DatePickerEvents>
                                                    </SfDatePicker>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="mb-1">
                                            <div class="row">
                                                <div class="col-sm-12">
                                                    <label for="NgayLap" class="form-label">Ngày lập</label>
                                                </div>
                                                <div class="col-sm-12">
                                                    <SfDatePicker ID="NgayLap" CssClass="e-small" @bind-Value="@(SelectPhieuNhap.NgayLap)" Format="dd/MM/yyyy" Enabled="false"></SfDatePicker>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="mb-1">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <label for="GhiCoTk" class="form-label">Ghi có tài khoản <span class="text-danger">*</span></label>
                                        </div>
                                        <div class="col-sm-4">
                                            <SfComboBox @ref="ddTK" @bind-Value="@SelectPhieuNhap.GhiCoTk" DataSource="@TaiKhoanDtos" AllowFiltering="true" Autofill="true" AllowCustom="false" Enabled="!IsDisabled" CssClass="e-multi-column e-small" PopupWidth="800" PopupHeight="300">
                                                <ComboBoxEvents TValue="int?" TItem="TaiKhoanDto" Filtering="OnFilteringTaiKhoan" ValueChange="OnValueChangeTaiKhoan"></ComboBoxEvents>
                                                <ComboBoxFieldSettings Text="TaiKhoanUd" Value="Id"></ComboBoxFieldSettings>
                                                <ComboBoxTemplates TItem="TaiKhoanDto">
                                                    <HeaderTemplate>
                                                        <table class="header-combo">
                                                            <tr>
                                                                <th style="width:150px">Mã tài khoản</th>
                                                                <th>Tên tài khoản</th>
                                                                <th>Tên 2</th>
                                                            </tr>
                                                        </table>
                                                    </HeaderTemplate>
                                                    <ItemTemplate Context="itemContext">
                                                        <table>
                                                            <tbody>
                                                                <tr>
                                                                    <td style="width:150px"><span>@((itemContext as TaiKhoanDto).TaiKhoanUd)</span></td>
                                                                    <td><span>@((itemContext as TaiKhoanDto).TaiKhoanNm)</span></td>
                                                                    <td><span>@((itemContext as TaiKhoanDto).TaiKhoanNm2)</span></td>
                                                                </tr>
                                                            </tbody>
                                                        </table>
                                                    </ItemTemplate>
                                                </ComboBoxTemplates>
                                            </SfComboBox>
                                        </div>
                                        <div class="col-sm-8">
                                            <SfTextBox ID="GhiCoTkNm" CssClass="e-small" @bind-Value="@(SelectPhieuNhap.GhiCoTkNm)" Enabled="false"></SfTextBox>
                                        </div>
                                    </div>
                                </div>
                                <div class="mb-1">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <label for="DienGiai" class="form-label">Diễn giải</label>
                                        </div>
                                        <div class="col-sm-12">
                                            <SfTextBox ID="DienGiai" CssClass="e-small" @bind-Value="@(SelectPhieuNhap.DienGiai)" Enabled="!IsDisabled"></SfTextBox>
                                        </div>
                                    </div>
                                </div>
                                <br />
                                <div class="mb-1">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <SfCheckBox Label="Lấy toàn bộ diễn giải" @bind-Checked="SelectPhieuNhap.IsTaoTuDongToanBoDienGiai" Disabled="IsDisabled"></SfCheckBox>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <div class="row">
                                    <div class="col-sm-6">
                                        <div class="mb-1">
                                            <div class="row">
                                                <div class="col-sm-12">
                                                    <label for="KyHieuMauHD" class="form-label">Ký hiệu mẫu hóa đơn</label>
                                                </div>
                                                <div class="col-sm-12">
                                                    <SfTextBox ID="KyHieuMauHD" CssClass="e-small" @bind-Value="@(SelectPhieuNhap.KyHieuMauHD)" Enabled="!IsDisabled"></SfTextBox>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="mb-1">
                                            <div class="row">
                                                <div class="col-sm-12">
                                                    <label for="SoSeri" class="form-label">Ký hiệu hóa đơn</label>
                                                </div>
                                                <div class="col-sm-12">
                                                    <SfTextBox ID="SoSeri" CssClass="e-small" @bind-Value="@(SelectPhieuNhap.SoSeri)" Enabled="!IsDisabled"></SfTextBox>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="mb-1">
                                            <div class="row">
                                                <div class="col-sm-12">
                                                    <label for="SoHd" class="form-label">Số hóa đơn</label>
                                                </div>
                                                <div class="col-sm-12">
                                                    <SfTextBox ID="SoHd" CssClass="e-small" @bind-Value="@(SelectPhieuNhap.SoHd)" Enabled="!IsDisabled"></SfTextBox>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="mb-1">
                                            <div class="row">
                                                <div class="col-sm-12">
                                                    <label for="NgayHd" class="form-label">Ngày hóa đơn <span class="text-danger">*</span></label>
                                                </div>
                                                <div class="col-sm-12">
                                                    <SfDatePicker ID="NgayHd" CssClass="e-small" @bind-Value="@(SelectPhieuNhap.NgayHd)" Format="dd/MM/yyyy" Enabled="!IsDisabled"></SfDatePicker>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="mb-1">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <label for="NgoaiTeId" class="form-label">Tỷ giá <span class="text-danger">*</span></label>
                                        </div>
                                        <div class="col-sm-4">
                                            <div class="d-flex align-items-center">
                                                <SfComboBox @ref="ddNT" @bind-Value="@SelectPhieuNhap.NgoaiTeId" DataSource="@NgoaiTeDtos" AllowFiltering="true" Autofill="true" AllowCustom="false" Enabled="!IsDisabled" CssClass="e-multi-column e-small" PopupWidth="350" PopupHeight="300">
                                                    <ComboBoxEvents TValue="int?" TItem="NgoaiTeDto" Filtering="OnFilteringNgoaiTe" ValueChange="OnValueChangeNgoaiTe"></ComboBoxEvents>
                                                    <ComboBoxFieldSettings Text="NgoaiTeUd" Value="Id"></ComboBoxFieldSettings>
                                                    <ComboBoxTemplates TItem="NgoaiTeDto">
                                                        <HeaderTemplate>
                                                            <table class="header-combo">
                                                                <tr>
                                                                    <th>Mã ngoại tệ</th>
                                                                    <th>Tên ngoại tệ</th>
                                                                    <th>Tên 2</th>
                                                                </tr>
                                                            </table>
                                                        </HeaderTemplate>
                                                        <ItemTemplate Context="itemContext">
                                                            <table>
                                                                <tbody>
                                                                    <tr>
                                                                        <td><span>@((itemContext as NgoaiTeDto).NgoaiTeUd)</span></td>
                                                                        <td><span>@((itemContext as NgoaiTeDto).NgoaiTeNm)</span></td>
                                                                        <td><span>@((itemContext as NgoaiTeDto).NgoaiTeNm2)</span></td>
                                                                    </tr>
                                                                </tbody>
                                                            </table>
                                                        </ItemTemplate>
                                                    </ComboBoxTemplates>
                                                </SfComboBox>
                                                <SfTooltip ID="TaoTG" Target="#target" Content="Thêm tỷ giá" Position="Position.RightTop" OpensOn="Hover">
                                                    <button id="target" type="button" class="btn-them-nhanh" disabled="@IsDisabled">
                                                        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" class="bi bi-plus-circle" viewBox="0 0 16 16">
                                                            <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16" />
                                                            <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4" />
                                                        </svg>
                                                    </button>
                                                </SfTooltip>
                                            </div>
                                        </div>
                                        <div class="col-sm-4">
                                            <SfNumericTextBox ShowSpinButton="false" ID="TiGia" CssClass="e-small" @bind-Value="@(SelectPhieuNhap.TiGia)" Format="N2" Enabled="!CheckNgoaiTe ? CheckNgoaiTe : !IsDisabled"></SfNumericTextBox>
                                        </div>
                                        <div class="col-sm-4">
                                            <button type="button" class="btn btn-sm btn-them-xoa" disabled="@(!IsDisabled)" @onclick="TaoPhieuChiAsync"> <strong>Tạo phiếu chi</strong></button>
                                        </div>
                                    </div>
                                </div>
                                <br />
                                <div class="text-center">
                                    <button type="button" class="btn btn-sm btn-them-xoa" disabled="@(!IsDisabled)"><strong>Chuyển phiếu nhập phân bổ chi phí</strong></button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-12">
                    <div class="bordered-div">
                        <SfTab @bind-SelectedItem="@SelectedTab">
                            <TabItems>
                                <TabItem>
                                    <ChildContent>
                                        <TabHeader Text="Chi tiết hạch toán"></TabHeader>
                                    </ChildContent>
                                    <ContentTemplate>
                                        <SfGrid @ref="SfGridHoaDonMuaHangCt" @attributes="@GridAttributes" DataSource="@HoaDonMuaHangRequests" AllowSorting="true" AllowResizing="true" Height="200">
                                            <GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true" NewRowPosition="NewRowPosition.Bottom" Mode="EditMode.Normal"></GridEditSettings>
                                            <GridEvents Created="CreatedHoaDonMuaHangCt" OnActionBegin="ActionBeginHoaDonMuaHangCt" OnActionComplete="ActionCompletedHoaDonMuaHangCt" TValue="HoaDonMuaHangRequest"></GridEvents>
                                            <GridColumns>
                                                <GridColumn Field=@nameof(HoaDonMuaHangRequest.Stt) HeaderText="#" IsPrimaryKey="true" Visible="false" AllowAdding="false" AllowEditing="false" TextAlign="TextAlign.Left" Width="60"></GridColumn>
                                                <GridColumn Field=@nameof(HoaDonMuaHangRequest.GhiNoTK) TextAlign="TextAlign.Left" Width="150">
                                                    <HeaderTemplate>
                                                        Ghi nợ tài khoản <span style="color:red">*</span>
                                                    </HeaderTemplate>
                                                    <EditTemplate>
                                                        @{
                                                            var item = (context as HoaDonMuaHangRequest);
                                                            if (item != null)
                                                            {
                                                                <SfComboBox @ref="ddTKCt" @bind-Value="@(item.GhiNoTK)" DataSource="@TaiKhoanDtos" AllowFiltering="true" Autofill="true" AllowCustom="false" CssClass="e-multi-column" PopupWidth="700" PopupHeight="300">
                                                                    <ComboBoxEvents TValue="int?" TItem="TaiKhoanDto" Created="CreatedHoaDonMuaHangCtHandler" Filtering="OnFilteringGhiNoTaiKhoanCt" ValueChange="OnValueChangeGhiNoTaiKhoanCt"></ComboBoxEvents>
                                                                    <ComboBoxFieldSettings Text="TaiKhoanUd" Value="Id"></ComboBoxFieldSettings>
                                                                    <ComboBoxTemplates TItem="TaiKhoanDto">
                                                                        <HeaderTemplate>
                                                                            <table class="header-combo">
                                                                                <tr>
                                                                                    <th style="width:150px">Mã tài khoản</th>
                                                                                    <th>Tên tài khoản</th>
                                                                                    <th>Tên 2</th>
                                                                                </tr>
                                                                            </table>
                                                                        </HeaderTemplate>
                                                                        <ItemTemplate Context="itemContext">
                                                                            <table>
                                                                                <tbody>
                                                                                    <tr>
                                                                                        <td style="width:150px"><span>@((itemContext as TaiKhoanDto).TaiKhoanUd)</span></td>
                                                                                        <td><span>@((itemContext as TaiKhoanDto).TaiKhoanNm)</span></td>
                                                                                        <td><span>@((itemContext as TaiKhoanDto).TaiKhoanNm2)</span></td>
                                                                                    </tr>
                                                                                </tbody>
                                                                            </table>
                                                                        </ItemTemplate>
                                                                    </ComboBoxTemplates>
                                                                </SfComboBox>
                                                                if (CheckOnChangeValueGhiNoTaiKoanCt)
                                                                {
                                                                    item.GhiNoTKUd = SelectGhiNoTaiKhoanCt.TaiKhoanUd;
                                                                    item.GhiNoTKNm = SelectGhiNoTaiKhoanCt.TaiKhoanNm;
                                                                    CheckOnChangeValueGhiNoTaiKoanCt = false;
                                                                }
                                                            }
                                                        }
                                                    </EditTemplate>
                                                    <Template>
                                                        @{
                                                            var item = (context as HoaDonMuaHangRequest);
                                                            <div>@item?.GhiNoTKUd</div>
                                                        }
                                                    </Template>
                                                </GridColumn>
                                                <GridColumn Field=@nameof(HoaDonMuaHangRequest.GhiNoTKNm) HeaderText="Tên tài khoản" TextAlign="TextAlign.Left" Width="300">
                                                    <EditTemplate>
                                                        @{
                                                            var item = (context as HoaDonMuaHangRequest);
                                                            if (item != null)
                                                            {
                                                                <SfTextBox @bind-Value="@(item.GhiNoTKNm)" Enabled="false"></SfTextBox>
                                                            }
                                                        }
                                                    </EditTemplate>
                                                </GridColumn>
                                                <GridColumn Field=@nameof(HoaDonMuaHangRequest.Tien) HeaderText="Thành tiền ngoại tệ" Visible="CheckNgoaiTe" TextAlign="TextAlign.Right" Format="N2" Width="150">
                                                    <EditTemplate>
                                                        @{
                                                            var item = (context as HoaDonMuaHangRequest);
                                                            if (item != null)
                                                            {
                                                                <SfNumericTextBox ShowSpinButton="false" @bind-Value="@(item.Tien)" Format="N2" @onchange="OnValueChangeTienCt"></SfNumericTextBox>
                                                            }
                                                        }
                                                    </EditTemplate>
                                                </GridColumn>
                                                <GridColumn Field=@nameof(HoaDonMuaHangRequest.TienVND) HeaderText="Thành tiền" TextAlign="TextAlign.Right" Format="N0" Width="150">
                                                    <EditTemplate>
                                                        @{
                                                            var item = (context as HoaDonMuaHangRequest);
                                                            if (item != null)
                                                            {
                                                                if (item.Tien == null)
                                                                    item.Tien = 0;
                                                                if (item.TienVND == null)
                                                                    item.TienVND = 0;
                                                                if (CheckNgoaiTe)
                                                                {
                                                                    item.TienVND = item.Tien * SelectPhieuNhap.TiGia;
                                                                    <SfNumericTextBox ShowSpinButton="false" @bind-Value="@(item.TienVND)" Format="N0" Enabled="false"></SfNumericTextBox>
                                                                }
                                                                else
                                                                {
                                                                    <SfNumericTextBox ShowSpinButton="false" @bind-Value="@(item.TienVND)" Format="N0"></SfNumericTextBox>
                                                                }
                                                            }
                                                        }
                                                    </EditTemplate>
                                                </GridColumn>

                                                <GridColumn Field=@nameof(HoaDonMuaHangRequest.VuViecId) HeaderText="Mã vụ việc" TextAlign="TextAlign.Left" Width="150">
                                                    <EditTemplate>
                                                        @{
                                                            var item = (context as HoaDonMuaHangRequest);
                                                            if (item != null)
                                                            {
                                                                <SfComboBox @ref="ddVVCt" @bind-Value="@(item.VuViecId)" DataSource="@VuViecDtos" AllowFiltering="true" Autofill="true" AllowCustom="false" CssClass="e-multi-column" PopupWidth="700" PopupHeight="300">
                                                                    <ComboBoxEvents TValue="int?" TItem="VuViecDto" Filtering="OnFilteringVuViecCt" ValueChange="OnValueChangeVuViecCt"></ComboBoxEvents>
                                                                    <ComboBoxFieldSettings Text="VuViecUd" Value="Id"></ComboBoxFieldSettings>
                                                                    <ComboBoxTemplates TItem="VuViecDto">
                                                                        <HeaderTemplate>
                                                                            <table class="header-combo">
                                                                                <tr>
                                                                                    <th>Mã vụ việc</th>
                                                                                    <th style="width:300px">Tên vụ việc</th>
                                                                                    <th>Tên 2</th>
                                                                                </tr>
                                                                            </table>
                                                                        </HeaderTemplate>
                                                                        <ItemTemplate Context="itemContext">
                                                                            <table>
                                                                                <tbody>
                                                                                    <tr>
                                                                                        <td><span>@((itemContext as VuViecDto).VuViecUd)</span></td>
                                                                                        <td style="width:300px"><span>@((itemContext as VuViecDto).VuViecNm)</span></td>
                                                                                        <td><span>@((itemContext as VuViecDto).VuViecNm2)</span></td>
                                                                                    </tr>
                                                                                </tbody>
                                                                            </table>
                                                                        </ItemTemplate>
                                                                    </ComboBoxTemplates>
                                                                </SfComboBox>
                                                                if (CheckOnChangeValueVuViecCt)
                                                                {
                                                                    item.VuViecUd = SelectVuViecCt.VuViecUd;
                                                                    CheckOnChangeValueVuViecCt = false;
                                                                }
                                                            }
                                                        }
                                                    </EditTemplate>
                                                    <Template>
                                                        @{
                                                            var item = (context as HoaDonMuaHangRequest);
                                                            <div>@item?.VuViecUd</div>
                                                        }
                                                    </Template>
                                                </GridColumn>
                                                <GridColumn Field=@nameof(HoaDonMuaHangRequest.MaPhiId) HeaderText="Mã phí" TextAlign="TextAlign.Left" Width="150">
                                                    <EditTemplate>
                                                        @{
                                                            var item = (context as HoaDonMuaHangRequest);
                                                            if (item != null)
                                                            {
                                                                <SfComboBox @ref="ddMPCt" @bind-Value="@(item.MaPhiId)" DataSource="@DmMaPhiDtos" AllowFiltering="true" Autofill="true" AllowCustom="false" CssClass="e-multi-column" PopupWidth="700" PopupHeight="300">
                                                                    <ComboBoxEvents TValue="int?" TItem="DmMaPhiDto" Filtering="OnFilteringDmMaPhiCt" ValueChange="OnValueChangeDmMaPhiCt"></ComboBoxEvents>
                                                                    <ComboBoxFieldSettings Text="DmMaPhiUd" Value="Id"></ComboBoxFieldSettings>
                                                                    <ComboBoxTemplates TItem="DmMaPhiDto">
                                                                        <HeaderTemplate>
                                                                            <table class="header-combo">
                                                                                <tr>
                                                                                    <th style="width:150px">Mã phí</th>
                                                                                    <th style="width:300px">Tên phí</th>
                                                                                    <th>Tên 2</th>
                                                                                </tr>
                                                                            </table>
                                                                        </HeaderTemplate>
                                                                        <ItemTemplate Context="itemContext">
                                                                            <table>
                                                                                <tbody>
                                                                                    <tr>
                                                                                        <td style="width:150px"><span>@((itemContext as DmMaPhiDto).DmMaPhiUd)</span></td>
                                                                                        <td style="width:300px"><span>@((itemContext as DmMaPhiDto).DmMaPhiNm)</span></td>
                                                                                        <td><span>@((itemContext as DmMaPhiDto).DmMaPhiNm2)</span></td>
                                                                                    </tr>
                                                                                </tbody>
                                                                            </table>
                                                                        </ItemTemplate>
                                                                    </ComboBoxTemplates>
                                                                </SfComboBox>
                                                                if (CheckOnChangeValueDmMaPhiCt)
                                                                {
                                                                    item.MaPhiUd = SelectDmMaPhiCt.DmMaPhiUd;
                                                                    CheckOnChangeValueDmMaPhiCt = false;
                                                                }
                                                            }
                                                        }
                                                    </EditTemplate>
                                                    <Template>
                                                        @{
                                                            var item = (context as HoaDonMuaHangRequest);
                                                            <div>@item?.MaPhiUd</div>
                                                        }
                                                    </Template>
                                                </GridColumn>
                                                <GridColumn Field=@nameof(HoaDonMuaHangRequest.MaTD01) HeaderText="Mã tự do 01" TextAlign="TextAlign.Left" Width="150">
                                                    <EditTemplate>
                                                        @{
                                                            var item = (context as HoaDonMuaHangRequest);
                                                            if (item != null)
                                                            {
                                                                <SfComboBox @ref="ddTTDCt" @bind-Value="@(item.MaTD01)" DataSource="@DmTruongTuDoDtos" AllowFiltering="true" Autofill="true" AllowCustom="false" CssClass="e-multi-column" PopupWidth="700" PopupHeight="300">
                                                                    <ComboBoxEvents TValue="int?" TItem="DmTruongTuDoDto" Filtering="OnFilteringDmTruongTuDoCt" ValueChange="OnValueChangeDmTruongTuDoCt"></ComboBoxEvents>
                                                                    <ComboBoxFieldSettings Text="DmTruongTuDoUd" Value="Id"></ComboBoxFieldSettings>
                                                                    <ComboBoxTemplates TItem="DmTruongTuDoDto">
                                                                        <HeaderTemplate>
                                                                            <table class="header-combo">
                                                                                <tr>
                                                                                    <th>Mã trường tự do</th>
                                                                                    <th style="width:300px">Tên trường tự do</th>
                                                                                    <th>Tên 2</th>
                                                                                </tr>
                                                                            </table>
                                                                        </HeaderTemplate>
                                                                        <ItemTemplate Context="itemContext">
                                                                            <table>
                                                                                <tbody>
                                                                                    <tr>
                                                                                        <td><span>@((itemContext as DmTruongTuDoDto).DmTruongTuDoUd)</span></td>
                                                                                        <td style="width:300px"><span>@((itemContext as DmTruongTuDoDto).DmTruongTuDoNm)</span></td>
                                                                                        <td><span>@((itemContext as DmTruongTuDoDto).DmTruongTuDoNm2)</span></td>
                                                                                    </tr>
                                                                                </tbody>
                                                                            </table>
                                                                        </ItemTemplate>
                                                                    </ComboBoxTemplates>
                                                                </SfComboBox>
                                                                if (CheckOnChangeValueDmTruongTuDoCt)
                                                                {
                                                                    item.MaTD01Ud = SelectDmTruongTuDoCt.DmTruongTuDoUd;
                                                                    CheckOnChangeValueDmTruongTuDoCt = false;
                                                                }
                                                            }
                                                        }
                                                    </EditTemplate>
                                                    <Template>
                                                        @{
                                                            var item = (context as HoaDonMuaHangRequest);
                                                            <div>@item?.MaTD01Ud</div>
                                                        }
                                                    </Template>
                                                </GridColumn>
                                            </GridColumns>
                                        </SfGrid>
                                    </ContentTemplate>
                                </TabItem>
                                <TabItem>
                                    <ChildContent>
                                        <TabHeader Text="Hóa Đơn GTGT"></TabHeader>
                                    </ChildContent>
                                    <ContentTemplate>
                                        <SfGrid @ref="SfGridHoaDonGTGT" @attributes="@GridAttributes" DataSource="@HoaDonRequests" AllowSorting="true" AllowResizing="true" Height="200">
                                            <GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true" NewRowPosition="NewRowPosition.Bottom"></GridEditSettings>
                                            <GridEvents TValue="HoaDonRequest" OnActionBegin="ActionBeginHoaDonGTGT" OnActionComplete="ActionCompletedHoaDonGTGT" RowUpdating="RowUpdatingHoaDonGTGT" OnRecordDoubleClick="RecordDoubleClickHoaDonGTGT"></GridEvents>
                                            <GridColumns>
                                                <GridColumn Field=@nameof(HoaDonRequest.Stt) HeaderText="#" IsPrimaryKey="true" Visible="false" AllowAdding="false" AllowEditing="false" TextAlign="TextAlign.Center" Width="60"></GridColumn>
                                                <GridColumn Field=@nameof(HoaDonRequest.LoaiThue) EditType="EditType.DropDownEdit" TextAlign="TextAlign.Left" Width="150">
                                                    <HeaderTemplate>
                                                        Loại thuế <span style="color:red">*</span>
                                                    </HeaderTemplate>
                                                    <EditTemplate>
                                                        @{
                                                            var item = (context as HoaDonRequest);
                                                            if (item != null)
                                                            {
                                                                <SfComboBox @ref="ddLoaiThueGTGT" @bind-Value="@(item.LoaiThue)" DataSource="@DMChungDtos" AllowFiltering="true" Autofill="true" AllowCustom="false" CssClass="e-multi-column" PopupWidth="600" PopupHeight="300">
                                                                    <ComboBoxEvents TValue="int?" TItem="DmChungDto" Created="CreatedComboBoxHoaDonGTGT" Filtering="OnFilteringLoaiThueGTGT" ValueChange="OnValueChangeLoaiThueGTGT"></ComboBoxEvents>
                                                                    <ComboBoxFieldSettings Text="DMChungUd" Value="Id"></ComboBoxFieldSettings>
                                                                    <ComboBoxTemplates TItem="DmChungDto">
                                                                        <HeaderTemplate>
                                                                            <table class="header-combo">
                                                                                <tr>
                                                                                    <th style="width:150px">Mã mẫu</th>
                                                                                    <th>Tên mẫu</th>
                                                                                </tr>
                                                                            </table>
                                                                        </HeaderTemplate>
                                                                        <ItemTemplate Context="itemContext">
                                                                            <table>
                                                                                <tbody>
                                                                                    <tr>
                                                                                        <td style="width:150px"><span>@((itemContext as DmChungDto).DMChungUd)</span></td>
                                                                                        <td><span>@((itemContext as DmChungDto).DMChungNm)</span></td>
                                                                                    </tr>
                                                                                </tbody>
                                                                            </table>
                                                                        </ItemTemplate>
                                                                    </ComboBoxTemplates>
                                                                </SfComboBox>
                                                            }
                                                        }
                                                    </EditTemplate>
                                                    <Template>
                                                        @{
                                                            var item = (context as HoaDonRequest);
                                                            <div>@item?.LoaiThueUd</div>
                                                        }
                                                    </Template>
                                                </GridColumn>
                                                <GridColumn Field=@nameof(HoaDonRequest.SoCt0) TextAlign="TextAlign.Left" Width="150">
                                                    <HeaderTemplate>
                                                        Số hóa đơn <span style="color:red">*</span>
                                                    </HeaderTemplate>
                                                    <EditTemplate>
                                                        @{
                                                            var item = (context as HoaDonRequest);
                                                            if (item != null)
                                                            {
                                                                <SfTextBox @bind-Value="@(item.SoCt0)" @onchange="OnValueChangeSoHdGTGT"></SfTextBox>
                                                            }
                                                        }
                                                    </EditTemplate>
                                                </GridColumn>
                                                <GridColumn Field=@nameof(HoaDonRequest.NgayCt0) Format="dd/MM/yyyy" EditType="EditType.DatePickerEdit" TextAlign="TextAlign.Left" Width="150">
                                                    <HeaderTemplate>
                                                        Ngày hóa đơn <span style="color:red">*</span>
                                                    </HeaderTemplate>
                                                    <EditTemplate>
                                                        @{
                                                            var item = (context as HoaDonRequest);
                                                            if (item != null)
                                                            {
                                                                <SfDatePicker @bind-Value="@(item.NgayCt0)" Format="dd/MM/yyyy">
                                                                    <DatePickerEvents TValue="DateTime?" ValueChange="OnValueChangeNgayHdGTGT"></DatePickerEvents>
                                                                </SfDatePicker>
                                                            }
                                                        }
                                                    </EditTemplate>
                                                </GridColumn>
                                                <GridColumn Field=@nameof(HoaDonRequest.SoSeri0) HeaderText="Kí hiệu hóa đơn" TextAlign="TextAlign.Left" Width="150">
                                                    <EditTemplate>
                                                        <SfTextBox Value="@TempHoaDonCt.SoSeri0" @onchange="OnValueChangeKyHieuHdGTGT"></SfTextBox>
                                                    </EditTemplate>
                                                </GridColumn>
                                                <GridColumn Field=@nameof(HoaDonRequest.KyHieuMauHD) HeaderText="Kí hiệu mẫu hóa đơn" TextAlign="TextAlign.Left" Width="150">
                                                    <EditTemplate>
                                                        <SfTextBox Value="@TempHoaDonCt.KyHieuMauHD" @onchange="OnValueChangeKyHieuMauHdGTGT"></SfTextBox>
                                                    </EditTemplate>
                                                </GridColumn>
                                                <GridColumn Field=@nameof(HoaDonRequest.KhachHangId) EditType="EditType.DropDownEdit" TextAlign="TextAlign.Left" Width="150">
                                                    <HeaderTemplate>
                                                        Mã khách <span style="color:red">*</span>
                                                    </HeaderTemplate>
                                                    <EditTemplate>
                                                        @{
                                                            var item = (context as HoaDonRequest);
                                                            if (item != null)
                                                            {
                                                                <SfComboBox @ref="ddKHGTGT" @bind-Value="@(item.KhachHangId)" DataSource="@KhachHangDtos" AllowFiltering="true" Autofill="true" AllowCustom="false" CssClass="e-multi-column" PopupWidth="1000" PopupHeight="300">
                                                                    <ComboBoxEvents TValue="int?" TItem="KhachHangDto" Filtering="OnFilteringKhachHangGTGT" ValueChange="OnValueChangeKhachHangGTGT"></ComboBoxEvents>
                                                                    <ComboBoxFieldSettings Text="KhachHangUd" Value="Id"></ComboBoxFieldSettings>
                                                                    <ComboBoxTemplates TItem="KhachHangDto">
                                                                        <HeaderTemplate>
                                                                            <table class="header-combo">
                                                                                <tr>
                                                                                    <th style="width:150px">Mã khách hàng</th>
                                                                                    <th>Tên khách</th>
                                                                                    <th style="width:150px">Mã số thuế</th>
                                                                                    <th style="width:150px">Số dư</th>
                                                                                    <th>Địa chỉ</th>
                                                                                </tr>
                                                                            </table>
                                                                        </HeaderTemplate>
                                                                        <ItemTemplate Context="itemContext">
                                                                            <table>
                                                                                <tbody>
                                                                                    <tr>
                                                                                        <td style="width:130px"><span>@((itemContext as KhachHangDto).KhachHangUd)</span></td>
                                                                                        <td><span>@((itemContext as KhachHangDto).KhachHangNm)</span></td>
                                                                                        <td style="width:130px"><span>@((itemContext as KhachHangDto).MaSoThue)</span></td>
                                                                                        <td style="width:130px"><span>@((itemContext as KhachHangDto).Sodu?.ToString("N0"))</span></td>
                                                                                        <td><span>@((itemContext as KhachHangDto).DiaChi)</span></td>
                                                                                    </tr>
                                                                                </tbody>
                                                                            </table>
                                                                        </ItemTemplate>
                                                                    </ComboBoxTemplates>
                                                                </SfComboBox>
                                                            }
                                                        }
                                                    </EditTemplate>
                                                    <Template>
                                                        @{
                                                            var item = (context as HoaDonRequest);
                                                            <div>@item?.KhachHangUd</div>
                                                        }
                                                    </Template>
                                                </GridColumn>
                                                <GridColumn Field=@nameof(HoaDonRequest.KhachHangNm) HeaderText="Tên khách" TextAlign="TextAlign.Left" Width="300">
                                                    <EditTemplate>
                                                        <SfTextBox Value="@(TempHoaDonCt.KhachHangNm)" Enabled="false"></SfTextBox>
                                                    </EditTemplate>
                                                </GridColumn>
                                                <GridColumn Field=@nameof(HoaDonRequest.DiaChi) HeaderText="Địa chỉ" TextAlign="TextAlign.Left" Width="300">
                                                    <EditTemplate>
                                                        <SfTextBox Value="@(TempHoaDonCt.DiaChi)" Enabled="false"></SfTextBox>
                                                    </EditTemplate>
                                                    <Template>
                                                        @{
                                                            var item = (context as HoaDonRequest);
                                                            <div>@item?.DiaChi</div>
                                                        }
                                                    </Template>
                                                </GridColumn>
                                                <GridColumn Field=@nameof(HoaDonRequest.MaSoThue) HeaderText="Mã số thuế" TextAlign="TextAlign.Right" Width="150">
                                                    <EditTemplate>
                                                        <SfTextBox Value="@(TempHoaDonCt.MaSoThue)" Enabled="false"></SfTextBox>
                                                    </EditTemplate>
                                                </GridColumn>
                                                <GridColumn Field=@nameof(HoaDonRequest.VatTu) HeaderText="Tên hàng hóa, dịch vụ" TextAlign="TextAlign.Left" Width="150">
                                                    <EditTemplate>
                                                        <SfTextBox Value="@TempHoaDonCt.VatTu" @onchange="OnValueChangeVatTuGTGT"></SfTextBox>
                                                    </EditTemplate>
                                                </GridColumn>
                                                <GridColumn Field=@nameof(HoaDonRequest.Tien) HeaderText="Thành tiền ngoại tệ" Visible="CheckNgoaiTe" EditType="EditType.NumericEdit" Format="N2" TextAlign="TextAlign.Center" Width="150">
                                                    <EditTemplate>
                                                        <SfNumericTextBox ShowSpinButton="false" Value="@TempHoaDonCt.Tien" @onchange="OnValueChangeTienGTGT" Format="N2"></SfNumericTextBox>
                                                    </EditTemplate>
                                                </GridColumn>
                                                <GridColumn Field=@nameof(HoaDonRequest.TienVND) HeaderText="Thành tiền" EditType="EditType.NumericEdit" Format="N0" TextAlign="TextAlign.Right" Width="150">
                                                    <EditTemplate>
                                                        <SfNumericTextBox ShowSpinButton="false" Value="@TempHoaDonCt.TienVND" @onchange="OnValueChangeTienVNDGTGT" Format="N0"></SfNumericTextBox>
                                                    </EditTemplate>
                                                </GridColumn>
                                                <GridColumn Field=@nameof(HoaDonRequest.MaThue) EditType="EditType.DropDownEdit" TextAlign="TextAlign.Left" Width="150">
                                                    <HeaderTemplate>
                                                        Mã thuế
                                                    </HeaderTemplate>
                                                    <EditTemplate>
                                                        @{
                                                            var item = (context as HoaDonRequest);
                                                            if (item != null)
                                                            {
                                                                <SfComboBox @ref="ddTSGTGT" @bind-Value="@(item.MaThue)" DataSource="@ThueSuatDtos" AllowFiltering="true" Autofill="true" AllowCustom="false" CssClass="e-multi-column" PopupWidth="700" PopupHeight="300">
                                                                    <ComboBoxEvents TValue="int?" TItem="ThueSuatDto" Filtering="OnFilteringThueSuatGTGT" ValueChange="OnValueChangeThueSuatGTGT"></ComboBoxEvents>
                                                                    <ComboBoxFieldSettings Text="ThueSuatUd" Value="Id"></ComboBoxFieldSettings>
                                                                    <ComboBoxTemplates TItem="ThueSuatDto">
                                                                        <HeaderTemplate>
                                                                            <table class="header-combo">
                                                                                <tr>
                                                                                    <th>Mã thuế</th>
                                                                                    <th style="width:250px">Tên thuế</th>
                                                                                    <th>Tên 2</th>
                                                                                    <th>Thuế suất</th>
                                                                                    <th>Tk có</th>
                                                                                    <th>Tk nợ</th>
                                                                                </tr>
                                                                            </table>
                                                                        </HeaderTemplate>
                                                                        <ItemTemplate Context="itemContext">
                                                                            <table>
                                                                                <tbody>
                                                                                    <tr>
                                                                                        <td><span>@((itemContext as ThueSuatDto).ThueSuatUd)</span></td>
                                                                                        <td style="width:250px"><span>@((itemContext as ThueSuatDto).ThueSuatNm)</span></td>
                                                                                        <td><span>@((itemContext as ThueSuatDto).ThueSuatNm2)</span></td>
                                                                                        <td><span>@((itemContext as ThueSuatDto).GiaTri?.ToString("N2"))</span></td>
                                                                                        <td><span>@((itemContext as ThueSuatDto).TkCoUd)</span></td>
                                                                                        <td><span>@((itemContext as ThueSuatDto).TkNoUd)</span></td>
                                                                                    </tr>
                                                                                </tbody>
                                                                            </table>
                                                                        </ItemTemplate>
                                                                    </ComboBoxTemplates>
                                                                </SfComboBox>
                                                            }
                                                        }
                                                    </EditTemplate>
                                                    <Template>
                                                        @{
                                                            var item = (context as HoaDonRequest);
                                                            <div>@item?.MaThueUd</div>
                                                        }
                                                    </Template>
                                                </GridColumn>
                                                <GridColumn Field=@nameof(HoaDonRequest.ThueSuat) HeaderText="Thuế suất(%)" EditType="EditType.NumericEdit" Format="N2" TextAlign="TextAlign.Right" Width="150">
                                                    <EditTemplate>
                                                        <SfNumericTextBox ShowSpinButton="false" Value="@TempHoaDonCt.ThueSuat" Enabled="false" Format="N2"></SfNumericTextBox>
                                                    </EditTemplate>
                                                </GridColumn>
                                                <GridColumn Field=@nameof(HoaDonRequest.Thue) HeaderText="Tiền thuế ngoại tệ" Visible="CheckNgoaiTe" EditType="EditType.NumericEdit" Format="N2" TextAlign="TextAlign.Right" Width="150">
                                                    <EditTemplate>
                                                        <SfNumericTextBox ShowSpinButton="false" Value="@TempHoaDonCt.Thue" @onchange="OnValueChangeThueGTGT" Format="N2"></SfNumericTextBox>
                                                    </EditTemplate>
                                                </GridColumn>
                                                <GridColumn Field=@nameof(HoaDonRequest.ThueVND) HeaderText="Tiền thuế" EditType="EditType.NumericEdit" Format="N0" TextAlign="TextAlign.Right" Width="150">
                                                    <EditTemplate>
                                                        <SfNumericTextBox ShowSpinButton="false" Value="@TempHoaDonCt.ThueVND" @onchange="OnValueChangeThueVNDGTGT" Format="N0"></SfNumericTextBox>
                                                    </EditTemplate>
                                                </GridColumn>
                                                <GridColumn Field=@nameof(HoaDonRequest.TkThue) TextAlign="TextAlign.Left" Width="150">
                                                    <HeaderTemplate>
                                                        Tài khoản thuế <span style="color:red">*</span>
                                                    </HeaderTemplate>
                                                    <EditTemplate>
                                                        @{
                                                            var item = (context as HoaDonRequest);
                                                            if (item != null)
                                                            {
                                                                <SfComboBox @ref="ddTKTGTGT" @bind-Value="@(item.TkThue)" DataSource="@TaiKhoanDtos" AllowFiltering="true" Autofill="true" AllowCustom="false" CssClass="e-multi-column" PopupWidth="700" PopupHeight="300">
                                                                    <ComboBoxEvents TValue="int?" TItem="TaiKhoanDto" Filtering="OnFilteringTKThueGTGT" ValueChange="OnValueChangeTKThueGTGT"></ComboBoxEvents>
                                                                    <ComboBoxFieldSettings Text="TaiKhoanUd" Value="Id"></ComboBoxFieldSettings>
                                                                    <ComboBoxTemplates TItem="TaiKhoanDto">
                                                                        <HeaderTemplate>
                                                                            <table class="header-combo">
                                                                                <tr>
                                                                                    <th style="width:150px">Mã tài khoản</th>
                                                                                    <th>Tên tài khoản</th>
                                                                                    <th>Tên 2</th>
                                                                                </tr>
                                                                            </table>
                                                                        </HeaderTemplate>
                                                                        <ItemTemplate Context="itemContext">
                                                                            <table>
                                                                                <tbody>
                                                                                    <tr>
                                                                                        <td style="width:150px"><span>@((itemContext as TaiKhoanDto).TaiKhoanUd)</span></td>
                                                                                        <td><span>@((itemContext as TaiKhoanDto).TaiKhoanNm)</span></td>
                                                                                        <td><span>@((itemContext as TaiKhoanDto).TaiKhoanNm2)</span></td>
                                                                                    </tr>
                                                                                </tbody>
                                                                            </table>
                                                                        </ItemTemplate>
                                                                    </ComboBoxTemplates>
                                                                </SfComboBox>
                                                            }
                                                        }
                                                    </EditTemplate>
                                                    <Template>
                                                        @{
                                                            var item = (context as HoaDonRequest);
                                                            <div>@item?.TkThueUd</div>
                                                        }
                                                    </Template>
                                                </GridColumn>
                                                <GridColumn Field=@nameof(HoaDonRequest.GhiChu) HeaderText="Ghi chú" TextAlign="TextAlign.Left" Width="300">
                                                    <EditTemplate>
                                                        <SfTextBox Value="@TempHoaDonCt.GhiChu" @onchange="OnValueChangeGhiChuGTGT"></SfTextBox>
                                                    </EditTemplate>
                                                </GridColumn>
                                            </GridColumns>
                                        </SfGrid>
                                    </ContentTemplate>
                                </TabItem>
                            </TabItems>
                        </SfTab>
                        <div class="d-flex align-items-Left">
                            <button type="button" class="btn btn-sm btn-them-xoa m-2" @onclick="AddRowCtAsync" disabled="@IsDisabled">Thêm dòng <b>F4</b></button>
                            <button type="button" class="btn btn-sm btn-them-xoa m-2" @onclick="DeleteRowCtAsync" disabled="@IsDisabled">Xóa dòng <b>F8</b> </button>
                            <button type="button" class="btn btn-sm btn-them-xoa m-2" @onclick="CancelCtAsync" disabled="@IsDisabled">Hủy thao tác <b>F9</b></button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-12">
                    <div class="bordered-div">
                        <div class="row">
                            <div class="col-sm-2">
                                <div class="mb-1">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <label for="HoaDonGTGT" class="form-label">Hóa đơn GTGT</label>
                                        </div>
                                        <div class="col-sm-12">
                                            <SfNumericTextBox @ref="SfHoaDonGtgt" ShowSpinButton="false" ID="HoaDonGTGT" CssClass="e-small" @bind-Value="@(SelectPhieuNhap.HoaDonGTGT)" Format="N0" Min="0" @onblur="SoLuongHoaDonGTGTBlur" @onchange="SoLuongHoaDonGTGTValueChange" Enabled="CheckHoaDonGtgt ? !CheckHoaDonGtgt : !IsDisabled"></SfNumericTextBox>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-2">
                                <div class="mb-1">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <label for="TkThueUd" class="form-label">Tk thuế</label>
                                        </div>
                                        <div class="col-sm-12">
                                            <SfTextBox ID="TkThueUd" CssClass="e-small" @bind-Value="@(SelectPhieuNhap.TkThueVatUd)" Enabled="false"></SfTextBox>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="mb-1">
                                    <div class="row">
                                        <div class="col-sm-3">
                                            <label for="TienHangVND" class="form-label">Tiền hàng</label>
                                        </div>
                                        <div class="col-sm-4">
                                            <SfNumericTextBox ShowSpinButton="false" ID="TienHangVND" CssClass="e-small" TValue="decimal?" @bind-Value="@(SelectPhieuNhap.TienHangVND)" Format="N0" Enabled="false"></SfNumericTextBox>
                                        </div>
                                        @if (CheckNgoaiTe)
                                        {
                                            <div class="col-sm-4">
                                                <SfNumericTextBox ShowSpinButton="false" ID="TienHang" CssClass="e-small" TValue="decimal?" @bind-Value="@(SelectPhieuNhap.TienHang)" Format="N2" Enabled="false"></SfNumericTextBox>
                                            </div>
                                        }
                                    </div>
                                </div>
                                <div class="mb-1">
                                    <div class="row">
                                        <div class="col-sm-3">
                                            <label for="ThueVatVND" class="form-label">Tiền thuế</label>
                                        </div>
                                        <div class="col-sm-4">
                                            <SfNumericTextBox ShowSpinButton="false" ID="ThueVatVND" CssClass="e-small" TValue="decimal?" @bind-Value="@(SelectPhieuNhap.ThueVatVND)" Format="N0" Enabled="false"></SfNumericTextBox>
                                        </div>
                                        @if (CheckNgoaiTe)
                                        {
                                            <div class="col-sm-4">
                                                <SfNumericTextBox ShowSpinButton="false" ID="ThueVat" CssClass="e-small" TValue="decimal?" @bind-Value="@(SelectPhieuNhap.ThueVat)" Format="N2" Enabled="false"></SfNumericTextBox>
                                            </div>
                                        }
                                    </div>
                                </div>
                                <div class="mb-1">
                                    <div class="row">
                                        <div class="col-sm-3">
                                            <label for="TongTienVND" class="form-label">Tổng thanh toán</label>
                                        </div>
                                        <div class="col-sm-4">
                                            <SfNumericTextBox ShowSpinButton="false" ID="TongTienVND" CssClass="e-small" TValue="decimal?" @bind-Value="@(SelectPhieuNhap.TongTienVND)" Format="N0" Enabled="false"></SfNumericTextBox>
                                        </div>
                                        @if (CheckNgoaiTe)
                                        {
                                            <div class="col-sm-4">
                                                <SfNumericTextBox ShowSpinButton="false" ID="TongTienVND" CssClass="e-small" TValue="decimal?" @bind-Value="@(SelectPhieuNhap.TongTien)" Format="N2" Enabled="false"></SfNumericTextBox>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <br />
            <FooterMenu IsSave="true" IsSaveDisabled="IsSaveDisabled" IsCancel="true" IsCancelDisabled="IsCancelDisabled" OnValidSubmitCancel="Cancel"
                        IsAdd="true" IsAddDisabled="IsAddDisabled" OnValidSubmitAdd="Add"
                        IsEdit="true" IsEditDisabled="IsEditDisabled" OnValidSubmitEdit="_Edit"
                        IsDelete="true" IsDeleteDisabled="IsDeleteDisabled" OnValidSubmitDelete="Delete"
                        IsPrint="true" IsPrintDisabled="IsPrintDisabled"
                        IsCopy="true" IsCopyDisabled="IsCopyDisabled" OnValidSubmitCopy="Copy"
                        IsClose="true" IsCloseDisabled="IsCloseDisabled" OnValidSubmitClose="Close"
                        IsNextDisabled="IsNextDisabled" IsNext="true" OnValidSubmitFirst="FirstAsync" OnValidSubmitPrevious="PreviousAsync" OnValidSubmitNext="NextAsync" OnValidSubmitLast="LastAsync" />
        </EditForm>
        <br />
    </div>

    <!-- ModalCreate -->
    <SfDialog ID="modalCreateCN" @bind-Visible="ShowModalTaoMoiCN" Width="640px" AllowPrerender="true" IsModal="true">
        <DialogTemplates>
            <Header>
                <div>
                    <h1 class="modal-title fs-5">
                        <img src="/images/Button/Moi.png" alt="icon" width="16" height="16">
                        <strong>Thêm mới</strong>
                    </h1>
                </div>
            </Header>
            <Content>
                <TaoMoiChiNhanh OnValidSubmitModalCreate="CloseModal" />
            </Content>
        </DialogTemplates>
    </SfDialog>

    <SfDialog ID="modalCreateKH" @bind-Visible="ShowModalTaoMoiKH" Width="840px" AllowPrerender="true" IsModal="true">
        <DialogTemplates>
            <Header>
                <div>
                    <h1 class="modal-title fs-5">
                        <img src="/images/Button/Moi.png" alt="icon" width="16" height="16">
                        <strong>Thêm mới</strong>
                    </h1>
                </div>
            </Header>
            <Content>
                <TaoMoiKhachHang OnValidSubmitModalCreate="CloseModal" LoaiPhieu="@SystemConstants.LoaiPhieu.PhieuThu" />
            </Content>
        </DialogTemplates>
    </SfDialog>

    <ModalErrorMessage ShowModalMessage="@ShowModalMessage" CheckMessage="@CheckMessage" TextMessage="@TextMessage" IsDelete="@IsDeleteMessage"
                       OnCloseMessage="CloseModalMessage" OnConfirmDelele="ConfirmDeleleAsync" IsConfirm="@IsConfirmMessage" OnConfirm="ConfirmCancelAsync" />

}
else
{
    <h3>Vui lòng chờ....</h3>
}

@code {
    [Parameter]
    public string? Id { set; get; }
    private bool hasRefreshed = false;
    private PhieuNhapRequest SelectPhieuNhap = new PhieuNhapRequest()
        {
            NgayLap = DateTime.Now,
            NgayHt = DateTime.Now,
            NgayHd = DateTime.Now,
            HoaDonGTGT = 0, 
            ThueSuat = 0,
            SoLuong = 0,
            TienHang= 0,
            TienHangVND=0,
            TienChietKhau = 0,
            TienChietKhauVND =0, 
            ChietKhau = 0,
            ChietKhauVND =0, 
            ChietKhauDaBan = 0,
            ChietKhauDaBanVND = 0,
            ChietKhauDungDePhanBo = 0,
            ChietKhauDungDePhanBoVND = 0,
            ChiPhi = 0 ,
            ChiPhiVND =0,
            ThueVat =0,
            ThueVatVND =0,
            TongTien =0,
            TongTienVND =0,
            PhuongPhapChietKhau = 1,
            TkThueNk = 0,
            IsChiPhiTinhThue = true,
            KyHieuMauHD = "01GTKT0/001"
        };
    private List<SoCaiRequest> SoCaiRequests = new List<SoCaiRequest>();
    private List<ChiNhanhDto> ChiNhanhDtos = new List<ChiNhanhDto>();
    private SfComboBox<int?, ChiNhanhDto> ddCN = new SfComboBox<int?, ChiNhanhDto>();
    private List<KhachHangDto> KhachHangDtos = new List<KhachHangDto>();
    private SfComboBox<int?, KhachHangDto> ddKH = new SfComboBox<int?, KhachHangDto>();
    private SfComboBox<int?, KhachHangDto> ddKHGTGT = new SfComboBox<int?, KhachHangDto>();
    private List<QuyenSoDto> QuyenSoDtos = new List<QuyenSoDto>();
    private SfComboBox<string?, QuyenSoDto> ddQS = new SfComboBox<string?, QuyenSoDto>();
    private List<TaiKhoanDto> TaiKhoanDtos = new List<TaiKhoanDto>();
    private SfComboBox<int?, TaiKhoanDto> ddTK = new SfComboBox<int?, TaiKhoanDto>();
    private SfComboBox<int?, TaiKhoanDto> ddTKCt = new SfComboBox<int?, TaiKhoanDto>();
    private SfComboBox<int?, TaiKhoanDto> ddTKTGTGT = new SfComboBox<int?, TaiKhoanDto>();
    private TaiKhoanDto SelectGhiNoTaiKhoanCt = new TaiKhoanDto();
    private bool CheckOnChangeValueGhiNoTaiKoanCt = false;
    private List<NgoaiTeDto> NgoaiTeDtos = new List<NgoaiTeDto>();
    private SfComboBox<int?, NgoaiTeDto> ddNT = new SfComboBox<int?, NgoaiTeDto>();
    private int SelectedTab { get; set; } = 0;
    private List<HoaDonMuaHangRequest> HoaDonMuaHangRequests = new List<HoaDonMuaHangRequest>();
    private SfGrid<HoaDonMuaHangRequest> SfGridHoaDonMuaHangCt = new SfGrid<HoaDonMuaHangRequest>();

    private List<VatTuDto> VatTuDtos = new List<VatTuDto>();
    private SfComboBox<int?, VatTuDto> ddVTCt = new SfComboBox<int?, VatTuDto>();
    private VatTuDto SelectVatTuCt = new VatTuDto();
    private bool CheckOnChangeValueVatTuCt = false;

    private List<KhoDto> KhoDtos = new List<KhoDto>();
    private KhoDto SelectKhoCt = new KhoDto();
    private bool CheckOnChangeValueKhoCt = false;

    private List<VuViecDto> VuViecDtos = new List<VuViecDto>();
    private SfComboBox<int?, VuViecDto> ddVVCt = new SfComboBox<int?, VuViecDto>();
    private VuViecDto SelectVuViecCt = new VuViecDto();
    private bool CheckOnChangeValueVuViecCt = false;

    private List<DmMaPhiDto> DmMaPhiDtos = new List<DmMaPhiDto>();
    private SfComboBox<int?, DmMaPhiDto> ddMPCt = new SfComboBox<int?, DmMaPhiDto>();
    private DmMaPhiDto SelectDmMaPhiCt = new DmMaPhiDto();
    private bool CheckOnChangeValueDmMaPhiCt = false;

    private SfNumericTextBox<int?> SfHoaDonGtgt = new SfNumericTextBox<int?>();
    private bool CheckHoaDonGtgt = false;

    private List<DmTruongTuDoDto> DmTruongTuDoDtos = new List<DmTruongTuDoDto>();
    private SfComboBox<int?, DmTruongTuDoDto> ddTTDCt = new SfComboBox<int?, DmTruongTuDoDto>();
    private DmTruongTuDoDto SelectDmTruongTuDoCt = new DmTruongTuDoDto();
    private bool CheckOnChangeValueDmTruongTuDoCt = false;
    private List<HoaDonRequest> HoaDonRequests = new List<HoaDonRequest>();
    private SfGrid<HoaDonRequest> SfGridHoaDonGTGT = new SfGrid<HoaDonRequest>();
    private HoaDonRequest TempHoaDonCt = new HoaDonRequest();
    private List<DmChungDto> DMChungDtos = new List<DmChungDto>();
    private SfComboBox<int?, DmChungDto> ddLoaiThueGTGT = new SfComboBox<int?, DmChungDto>();
    private List<ThueSuatDto>? ThueSuatDtos;
    private SfComboBox<int?, ThueSuatDto> ddTSGTGT = new SfComboBox<int?, ThueSuatDto>();



    private bool CheckNgoaiTe = false;
    private bool ShowModalTaoMoiKH = false;
    private bool ShowModalTaoMoiCN = false;

    private string? TextMessageConfirmSave { set; get; }

    // Thông báo message
    private bool ShowModalMessage = false;
    private bool CheckMessage = false;
    private string? TextMessage { set; get; }
    private bool IsDeleteMessage { set; get; }
    private bool IsConfirmMessage { set; get; }
    // Thông báo message end

    //Footer menu
    public bool IsDisabled { set; get; } = false;
    public bool IsSaveDisabled { set; get; }
    public bool IsCancelDisabled { set; get; }
    public bool IsAddDisabled { set; get; } = true;
    public bool IsEditDisabled { set; get; } = true;
    public bool IsDeleteDisabled { set; get; } = true;
    public bool IsPrintDisabled { set; get; } = true;
    public bool IsCopyDisabled { set; get; } = true;
    public bool IsCloseDisabled { set; get; } = true;
    public bool IsNextDisabled { set; get; } = true;
    private Dictionary<string, object> GridAttributes { get; set; } = new Dictionary<string, object>();
    public List<PhieuNhapDto> PhieuNhapDtos = new List<PhieuNhapDto>();
    private int CurrentIndex = 0;
    //Footer menu end

    protected override async Task OnInitializedAsync()
    {
        if (!hasRefreshed && Id != null)
        {
            ChiNhanhDtos = await _chiNhanh.GetListAsync();
            KhachHangDtos = await _khachHang.GetListAsync(SystemConstants.KhachHang.Loai0);
            NgoaiTeDtos = await _ngoaiTe.GetListAsync();
            QuyenSoDtos = await _quyenSo.GetListAsync(SystemConstants.LoaiPhieu.HoaDonMuaHang);
            TaiKhoanDtos = await _taiKhoan.GetListAsync();
            VatTuDtos = await _vatTu.GetListAsync(string.Empty);
            ThueSuatDtos = await _thueSuat.GetListAsync();
            KhoDtos = await _kho.GetListAsync();
            DMChungDtos = await _dmChung.GetListAsync(SystemConstants.DmChung.LoaiThue);
            VuViecDtos = await _vuViec.GetListAsync();
            DmMaPhiDtos = await _dmMaPhi.GetListAsync();
            DmTruongTuDoDtos = await _dmTruongTuDo.GetListLoai1Async();
            var phieuNhap = await _phieuNhap.GetByIdAsync(Int32.Parse(Id));
            SelectPhieuNhap = _objectMapper.Map<PhieuNhapDto, PhieuNhapRequest>(phieuNhap);
            if (NgoaiTeDtos.Count > 0 && NgoaiTeDtos?.FirstOrDefault(x => x.Id == SelectPhieuNhap.NgoaiTeId)?.NgoaiTeUd != "VND")
                CheckNgoaiTe = true;
            if (phieuNhap.HoaDonMuaHangDtos?.Count > 0)
                HoaDonMuaHangRequests = _objectMapper.Map<List<HoaDonMuaHangDto>, List<HoaDonMuaHangRequest>>(phieuNhap.HoaDonMuaHangDtos);
            if (phieuNhap.HoaDonGtgtDtos?.Count > 0)
                HoaDonRequests = _objectMapper.Map<List<HoaDonGtgtDto>, List<HoaDonRequest>>(phieuNhap.HoaDonGtgtDtos);
            hasRefreshed = true;  
        }
    }
    private async Task OnKeyUp(KeyboardEventArgs args)
    {
        if (SelectedTab == 0)
        {
            if (args.Key == "F4")
            {
                if (!SelectPhieuNhap.KhachHangId.HasValue)
                {
                    TextMessage = "Hãy nhập mã khách hàng !";
                    CheckMessage = false;
                    IsDeleteMessage = false;
                    IsConfirmMessage = false;
                    ShowModalMessage = true;
                    await ddKH.FocusAsync();
                }
                else
                {
                    await this.SfGridHoaDonMuaHangCt.AddRecordAsync();
                }

            }
            else if (args.Key == "F9")
            {
                await this.SfGridHoaDonMuaHangCt.CloseEditAsync();
                await ddKH.FocusAsync();
            }
            else if (args.Key == "F8")
            {
                await this.SfGridHoaDonMuaHangCt.DeleteRecordAsync();
                await ddKH.FocusAsync();
            }
        }
        else if(SelectedTab == 1)
        {
            if (args.Key == "F4")
            {
                if (SelectPhieuNhap.HoaDonGTGT == 0)
                {
                    TextMessage = "Hãy nhập hóa đơn giá trị gia tăng !";
                    CheckMessage = false;
                    IsDeleteMessage = false;
                    IsConfirmMessage = false;
                    ShowModalMessage = true;
                    await SfHoaDonGtgt.FocusAsync();
                }
                else
                {
                    await this.SfGridHoaDonGTGT.AddRecordAsync();
                }
            }
            else if (args.Key == "F9")
            {
                await this.SfGridHoaDonGTGT.CloseEditAsync();
                await ddKH.FocusAsync();
            }
            else if (args.Key == "F8")
            {
                await this.SfGridHoaDonGTGT.DeleteRecordAsync();
                await ddKH.FocusAsync();
            }
        }
    }
    private async Task FocusOnInput()
    {
        await ddKH.FocusAsync();
    }
    private async Task SaveAsync()
    {
        List<SoCaiRequest> soCaiRequests = new List<SoCaiRequest>();
        bool checkAddCt = false;
        bool checkBreak = false;

        var giaoDich = await _dmChung.GetByIdAsync(SystemConstants.DmChung.GiaoDichNhapKhox, "1");
        if (HoaDonMuaHangRequests.Count > 0)
        {
            checkAddCt = true;
            foreach (var item in HoaDonMuaHangRequests)
            {
                soCaiRequests.Add(new SoCaiRequest()
                    {
                        MaNk = SystemConstants.LoaiPhieu.HoaDonMuaHang,
                        MaGd = giaoDich?.Id,
                        NgayHt = SelectPhieuNhap.NgayHt,
                        NgayLap = SelectPhieuNhap.NgayLap,
                        SoCt = SelectPhieuNhap.Sopn,
                        KhachHangId = SelectPhieuNhap.KhachHangId,
                        DienGiai = SelectPhieuNhap.DienGiai,
                        NhomDinhKhoan = SystemConstants.NhomDinhKhoan.DoanhThu,
                        Tk = SelectPhieuNhap.GhiCoTk,
                        TkDoiUng = item.GhiNoTK,
                        NgoaiTeId = SelectPhieuNhap.NgoaiTeId,
                        TyGia = SelectPhieuNhap.TiGia,
                        TyGiaHt = SelectPhieuNhap.TiGia,
                        TyGiaHt2 = SelectPhieuNhap.TiGia,
                        PhatSinhNo = 0,
                        PhatSinhCo = item.Tien,
                        PhatSinhNoVND = 0,
                        PhatSinhCoVND = item.TienVND,
                        VuViecId = item.VuViecId,
                        MaPhiId = item.MaPhiId,
                        MaTD01 = item.MaTD01,
                        MaTD02 = item.MaTD02,
                        MaTD03 = item.MaTD03,
                        ChiNhanhId = SelectPhieuNhap.ChiNhanhId,
                        SoHd = SelectPhieuNhap.SoHd,
                        SoSeri = SelectPhieuNhap.SoSeri,
                        NgayHd = SelectPhieuNhap.NgayHd,                       
                        SoQuyen = SelectPhieuNhap.QuyenSo,
                        DieuChinhThueTNDNId = item.DieuChinhThueTNDNId,
                    });
                soCaiRequests.Add(new SoCaiRequest()
                    {
                        MaNk = SystemConstants.LoaiPhieu.HoaDonMuaHang,
                        MaGd = giaoDich?.Id,
                        NgayHt = SelectPhieuNhap.NgayHt,
                        NgayLap = SelectPhieuNhap.NgayLap,
                        SoCt = SelectPhieuNhap.Sopn,
                        KhachHangId = SelectPhieuNhap.KhachHangId,
                        DienGiai = SelectPhieuNhap.DienGiai,
                        NhomDinhKhoan = SystemConstants.NhomDinhKhoan.DoanhThu,
                        Tk = item.GhiNoTK,
                        TkDoiUng = SelectPhieuNhap.GhiCoTk,
                        NgoaiTeId = SelectPhieuNhap.NgoaiTeId,
                        TyGia = SelectPhieuNhap.TiGia,
                        TyGiaHt = SelectPhieuNhap.TiGia,
                        TyGiaHt2 = SelectPhieuNhap.TiGia,
                        PhatSinhNo = item.Tien,
                        PhatSinhCo = 0,
                        PhatSinhNoVND = item.TienVND,
                        PhatSinhCoVND = 0,
                        VuViecId = item.VuViecId,
                        MaPhiId = item.MaPhiId,
                        MaTD01 = item.MaTD01,
                        MaTD02 = item.MaTD02,
                        MaTD03 = item.MaTD03,
                        ChiNhanhId = SelectPhieuNhap.ChiNhanhId,
                        SoHd = SelectPhieuNhap.SoHd,
                        SoSeri = SelectPhieuNhap.SoSeri,
                        NgayHd = SelectPhieuNhap.NgayHd,                       
                        SoQuyen = SelectPhieuNhap.QuyenSo,
                        DieuChinhThueTNDNId = item.DieuChinhThueTNDNId,
                    });            
            }
        }
        if (HoaDonRequests.Count > 0)
        {
            foreach (var gtgt in HoaDonRequests)
            {
                if (gtgt.SoCt0 == null)
                {
                    SelectedTab = 1;
                    TextMessage = $"Bạn chưa nhập Số hđ trong Hóa đơn GTGT!";
                    CheckMessage = false;
                    IsDeleteMessage = false;
                    IsConfirmMessage = false;
                    ShowModalMessage = true;
                    checkBreak = true;
                    break;
                }
                else if (!gtgt.NgayCt0.HasValue)
                {
                    SelectedTab = 1;
                    TextMessage = $"Bạn chưa nhập Ngày hđ trong Hóa đơn GTGT!";
                    CheckMessage = false;
                    IsDeleteMessage = false;
                    IsConfirmMessage = false;
                    ShowModalMessage = true;
                    checkBreak = true;
                    break;
                }
                else if (!gtgt.KhachHangId.HasValue)
                {
                    SelectedTab = 1;
                    TextMessage = $"Bạn chưa nhập Mã khách hàng trong Hóa đơn GTGT!";
                    CheckMessage = false;
                    IsDeleteMessage = false;
                    IsConfirmMessage = false;
                    ShowModalMessage = true;
                    checkBreak = true;
                    break;
                }
                else if (!gtgt.TkThue.HasValue)
                {
                    SelectedTab = 1;
                    TextMessage = $"Bạn chưa nhập tài khoản thuế trong Hóa đơn GTGT!";
                    CheckMessage = false;
                    IsDeleteMessage = false;
                    IsConfirmMessage = false;
                    ShowModalMessage = true;
                    checkBreak = true;
                    break;
                }
                else
                {
                    soCaiRequests.Add(new SoCaiRequest()
                        {
                            MaNk = SystemConstants.LoaiPhieu.HoaDonMuaHang,
                            MaGd = giaoDich?.Id,
                            NgayHt = SelectPhieuNhap.NgayHt,
                            NgayLap = SelectPhieuNhap.NgayLap,
                            SoCt = SelectPhieuNhap.Sopn,
                            KhachHangId = SelectPhieuNhap.KhachHangId,
                            DienGiai = SelectPhieuNhap.DienGiai,
                            NhomDinhKhoan = SystemConstants.NhomDinhKhoan.Thue,
                            Tk = SelectPhieuNhap.GhiCoTk,
                            TkDoiUng = gtgt.TkThue,
                            NgoaiTeId = SelectPhieuNhap.NgoaiTeId,
                            TyGia = SelectPhieuNhap.TiGia,
                            TyGiaHt = SelectPhieuNhap.TiGia,
                            TyGiaHt2 = SelectPhieuNhap.TiGia,
                            PhatSinhNo = 0,
                            PhatSinhCo = gtgt.Thue,
                            PhatSinhNoVND = 0,
                            PhatSinhCoVND = gtgt.ThueVND,
                            VuViecId = gtgt.VuViecId,
                            MaPhiId = gtgt.MaPhiId,
                            MaTD01 = gtgt.MaTD01,
                            MaTD02 = gtgt.MaTD02,
                            MaTD03 = gtgt.MaTD03,
                            ChiNhanhId = SelectPhieuNhap.ChiNhanhId,
                            SoHd = gtgt.SoCt0,
                            SoSeri = gtgt.SoSeri0,
                            NgayHd = gtgt.NgayCt0,
                            SoQuyen = SelectPhieuNhap.QuyenSo,
                            DieuChinhThueTNDNId = gtgt.DieuChinhThueTNDNId
                        });
                    soCaiRequests.Add(new SoCaiRequest()
                        {
                            MaNk = SystemConstants.LoaiPhieu.HoaDonMuaHang,
                            MaGd = giaoDich?.Id,
                            NgayHt = SelectPhieuNhap.NgayHt,
                            NgayLap = SelectPhieuNhap.NgayLap,
                            SoCt = SelectPhieuNhap.Sopn,
                            KhachHangId = SelectPhieuNhap.KhachHangId,
                            DienGiai = SelectPhieuNhap.DienGiai,
                            NhomDinhKhoan = SystemConstants.NhomDinhKhoan.Thue,
                            Tk = gtgt.TkThue,
                            TkDoiUng = SelectPhieuNhap.GhiCoTk,
                            NgoaiTeId = SelectPhieuNhap.NgoaiTeId,
                            TyGia = SelectPhieuNhap.TiGia,
                            TyGiaHt = SelectPhieuNhap.TiGia,
                            TyGiaHt2 = SelectPhieuNhap.TiGia,
                            PhatSinhNo = gtgt.Thue,
                            PhatSinhCo = 0,
                            PhatSinhNoVND = gtgt.ThueVND,
                            PhatSinhCoVND = 0,
                            VuViecId = gtgt.VuViecId,
                            MaPhiId = gtgt.MaPhiId,
                            MaTD01 = gtgt.MaTD01,
                            MaTD02 = gtgt.MaTD02,
                            MaTD03 = gtgt.MaTD03,
                            ChiNhanhId = SelectPhieuNhap.ChiNhanhId,
                            SoHd = gtgt.SoCt0,
                            SoSeri = gtgt.SoSeri0,
                            NgayHd = gtgt.NgayCt0,
                            SoQuyen = SelectPhieuNhap.QuyenSo,
                            DieuChinhThueTNDNId = gtgt.DieuChinhThueTNDNId
                    });
                }
            }
        }
        if (checkAddCt)
        {
            SoCaiRequests = soCaiRequests;
            if (!checkBreak)
            {
                SelectPhieuNhap.HoaDonMuaHangRequests = HoaDonMuaHangRequests;
                SelectPhieuNhap.HoaDonRequests = HoaDonRequests;
                SelectPhieuNhap.SoCaiRequests = SoCaiRequests;
                SelectPhieuNhap.LoaiPhieu = SystemConstants.LoaiPhieu.HoaDonMuaHang;
                if (Id != null)
                {
                    var result = await _phieuNhap.UpdateAsync(int.Parse(Id), SelectPhieuNhap);
                    if (result.IsSuccessed)
                    {
                        if (SelectPhieuNhap.QuyenSo != null && SelectPhieuNhap.Sopn != null)
                        {
                            await _quyenSo.UpdateSoCTAsync(SystemConstants.LoaiPhieu.HoaDonMuaHang, SelectPhieuNhap.QuyenSo, SelectPhieuNhap.Sopn);
                        }
                        if (SelectPhieuNhap.GhiCoTkUd != null && SelectPhieuNhap.GhiCoTkUd.Contains("111"))
                        {
                            await _common.TaoPhieuChiAsync(int.Parse(Id ?? "0"), SelectPhieuNhap);
                        }
                        ScreenDisable();

                    }
                    else
                    {
                        TextMessage = result.Message;
                        CheckMessage = false;
                        IsDeleteMessage = false;
                        IsConfirmMessage = false;
                        ShowModalMessage = true;
                    }
                }
            }
        }
        else
        {
            TextMessage = "Chưa nhập chi tiết hạch toán!";
            CheckMessage = false;
            IsDeleteMessage = false;
            IsConfirmMessage = false;
            ShowModalMessage = true;
        }
    }

    public async Task OnFilteringChiNhanh(Syncfusion.Blazor.DropDowns.FilteringEventArgs args)
    {
        args.PreventDefaultAction = true;
        var orWhere = WhereFilter.Or(new List<WhereFilter> {
            new WhereFilter() { Field = "ChiNhanhUd", Operator = "contains", value = args.Text, IgnoreCase = true },
            new WhereFilter() { Field = "ChiNhanhNm", Operator = "contains", value = args.Text, IgnoreCase = true }
        });
        var query = new Query().Where(orWhere);
        query = !string.IsNullOrEmpty(args.Text) ? query : new Query();
        await ddCN.FilterAsync(ChiNhanhDtos, query);
    }
    private void OnValueChangeChiNhanh(ChangeEventArgs<int?, ChiNhanhDto> args)
    {
        if (args.ItemData != null)
        {
            SelectPhieuNhap.ChiNhanhNm = args.ItemData.ChiNhanhNm;
        }

    }
    public async Task OnFilteringKhachHang(Syncfusion.Blazor.DropDowns.FilteringEventArgs args)
    {
        args.PreventDefaultAction = true;
        var orWhere = WhereFilter.Or(new List<WhereFilter> {
            new WhereFilter() { Field = "KhachHangUd", Operator = "contains", value = args.Text, IgnoreCase = true },
            new WhereFilter() { Field = "KhachHangNm", Operator = "contains", value = args.Text, IgnoreCase = true }
        });
        var query = new Query().Where(orWhere);
        query = !string.IsNullOrEmpty(args.Text) ? query : new Query();
        await ddKH.FilterAsync(KhachHangDtos, query);
    }
    private void OnValueChangeKhachHang(ChangeEventArgs<int?, KhachHangDto> args)
    {
        if (args.ItemData != null)
        {
            SelectPhieuNhap.DiaChi = args.ItemData.DiaChi;
            SelectPhieuNhap.MaSoThue = args.ItemData.MaSoThue;
            SelectPhieuNhap.KhachHangUd = args.ItemData.KhachHangUd;
            SelectPhieuNhap.KhachHangNm = args.ItemData.KhachHangNm;
            SelectPhieuNhap.SoDu = args.ItemData.Sodu;
        }
    }
    public void TaoChiNhanh()
    {
        ShowModalTaoMoiCN = true;
    }
    public void TaoKhachHang()
    {
        ShowModalTaoMoiKH = true;
    }
    public async Task OnFilteringQuyenSo(Syncfusion.Blazor.DropDowns.FilteringEventArgs args)
    {
        args.PreventDefaultAction = true;
        var orWhere = WhereFilter.Or(new List<WhereFilter> {
            new WhereFilter() { Field = "MaCt", Operator = "contains", value = args.Text, IgnoreCase = true },
            new WhereFilter() { Field = "SoQuyen", Operator = "contains", value = args.Text, IgnoreCase = true }
        });
        var query = new Query().Where(orWhere);
        query = !string.IsNullOrEmpty(args.Text) ? query : new Query();
        await ddQS.FilterAsync(QuyenSoDtos, query);
    }
    private void OnValueChangeQuyenSo(ChangeEventArgs<string, QuyenSoDto> args)
    {
        if (args.ItemData != null)
        {
            SelectPhieuNhap.Sopn = args.ItemData.SoCtHienTai.HasValue ? (args.ItemData.SoCtHienTai.Value + 1).ToString("D6") : "0";
        }
    }

    private async Task OnValueChangeNgayht(ChangedEventArgs<DateTime?> args)
    {
        DateTime? tuNgay = await _localStorage.GetItemAsync<string>("TuNgayLamViec") != null ? DateTime.Parse(await _localStorage.GetItemAsync<string>("TuNgayLamViec")) : null;
        DateTime? denNgay = await _localStorage.GetItemAsync<string>("DenNgayLamViec") != null ? DateTime.Parse(await _localStorage.GetItemAsync<string>("DenNgayLamViec")).AddDays(1) : null;
        if (args.Value.HasValue && args.Value >= tuNgay && args.Value < denNgay)
        {
            SelectPhieuNhap.NgayLap = args.Value;
        }
        else
        {
            SelectPhieuNhap.NgayHt = null;
            TextMessage = "Ngày hạch toán phải nằm trong thời gian làm việc !";
            CheckMessage = false;
            IsDeleteMessage = false;
            IsConfirmMessage = false;
            ShowModalMessage = true;
        }
    }
    public async Task OnFilteringTaiKhoan(Syncfusion.Blazor.DropDowns.FilteringEventArgs args)
    {
        args.PreventDefaultAction = true;
        var orWhere = WhereFilter.Or(new List<WhereFilter> {
            new WhereFilter() { Field = "TaiKhoanUd", Operator = "contains", value = args.Text, IgnoreCase = true },
            new WhereFilter() { Field = "TaiKhoanNm", Operator = "contains", value = args.Text, IgnoreCase = true }
        });
        var query = new Query().Where(orWhere);
        query = !string.IsNullOrEmpty(args.Text) ? query : new Query();
        await ddTK.FilterAsync(TaiKhoanDtos, query);
    }
    private void OnValueChangeTaiKhoan(ChangeEventArgs<int?, TaiKhoanDto> args)
    {
        if (args.ItemData != null)
        {
            SelectPhieuNhap.GhiCoTkNm = args.ItemData.TaiKhoanNm;
            SelectPhieuNhap.GhiCoTkUd = args.ItemData.TaiKhoanUd;
        }
    }
    public async Task OnFilteringNgoaiTe(Syncfusion.Blazor.DropDowns.FilteringEventArgs args)
    {
        args.PreventDefaultAction = true;
        var orWhere = WhereFilter.Or(new List<WhereFilter> {
            new WhereFilter() { Field = "NgoaiTeUd", Operator = "contains", value = args.Text, IgnoreCase = true },
            new WhereFilter() { Field = "NgoaiTeNm", Operator = "contains", value = args.Text, IgnoreCase = true }
        });
        var query = new Query().Where(orWhere);
        query = !string.IsNullOrEmpty(args.Text) ? query : new Query();
        await ddNT.FilterAsync(NgoaiTeDtos, query);
    }
    private async void OnValueChangeNgoaiTe(ChangeEventArgs<int?, NgoaiTeDto> args)
    {
        if (args.ItemData != null)
        {
            if (args.ItemData.NgoaiTeUd != "VND")
            {
                CheckNgoaiTe = true;
            }
            else
            {
                CheckNgoaiTe = false;
            }
            SelectPhieuNhap.NgoaiTeId = args.ItemData.Id;
            var ngoaiTe = await _ngoaiTe.GetByIdAsync(args.ItemData.Id);
            var item = ngoaiTe.TyGiaNgoaiTeDtos?.First();
            SelectPhieuNhap.TiGia = item?.TyGia;
            StateHasChanged();//cập nhật giao diện ngay tức thì
            this.SfGridHoaDonMuaHangCt?.Refresh();
        }
    }
    private async Task ClickFocus()
    {
        await ddKH.FocusAsync();
    }
    public async Task CreatedHoaDonMuaHangCt()
    {
        if (!SelectPhieuNhap.KhachHangId.HasValue)
            await ddKH.FocusAsync();
    }
    private void ActionBeginHoaDonMuaHangCt(ActionEventArgs<HoaDonMuaHangRequest> arg)
    {
        this.SfGridHoaDonMuaHangCt.PreventRender(false);
        if (arg.RequestType.Equals(Syncfusion.Blazor.Grids.Action.Add))
        {
            int? maxId = HoaDonMuaHangRequests?.Any() == true ? HoaDonMuaHangRequests.Max(x => x.Stt) : 0;
            arg.Data.Stt = maxId + 1; // Tăng giá trị Id lên 1
        }

    }
    public void ActionCompletedHoaDonMuaHangCt(ActionEventArgs<HoaDonMuaHangRequest> args)
    {
        if (HoaDonMuaHangRequests.Count > 0)
        {
            decimal? tienHang = 0; decimal? tienHangVND = 0;
            foreach (var item in HoaDonMuaHangRequests)
            {
                tienHang += item.Tien;
                tienHangVND += item.TienVND;
            }
            SelectPhieuNhap.TienHang = tienHang;
            SelectPhieuNhap.TienHangVND = tienHangVND;
            SelectPhieuNhap.TongTien = SelectPhieuNhap.TienHang + SelectPhieuNhap.ThueVat;
            SelectPhieuNhap.TongTienVND = SelectPhieuNhap.TienHangVND + SelectPhieuNhap.ThueVatVND;
        }
        else
        {
            SelectPhieuNhap.TienHang = 0;
            SelectPhieuNhap.TienHangVND = 0;
            SelectPhieuNhap.TongTien = 0;
            SelectPhieuNhap.TongTienVND = 0;
        }

    }
    private async Task CreatedVatTuCtHandler(Object args)
    {
        await ddVTCt.FocusAsync();
    }
    private void OnValueChangeVatTuCt(ChangeEventArgs<int?, VatTuDto> args)
    {
        CheckOnChangeValueVatTuCt = true;
        this.SfGridHoaDonMuaHangCt.PreventRender(false);
        if (args.ItemData != null)
        {
            SelectVatTuCt = args.ItemData;
        }
    }
    private void OnValueChangeKhoCt(ChangeEventArgs<int?, KhoDto> args)
    {
        CheckOnChangeValueKhoCt = true;
        this.SfGridHoaDonMuaHangCt.PreventRender(false);
        if (args.ItemData != null)
        {
            SelectKhoCt = args.ItemData;
        }
    }
    private void OnValueChangeDonGiaVND()
    {
        this.SfGridHoaDonMuaHangCt.PreventRender(false);
    }
    private void OnValueChangeDonGia()
    {
        this.SfGridHoaDonMuaHangCt.PreventRender(false);
    }
    private async Task CreatedHoaDonMuaHangCtHandler(Object args)
    {
        await ddTKCt.FocusAsync();
    }
    public async Task OnFilteringGhiNoTaiKhoanCt(Syncfusion.Blazor.DropDowns.FilteringEventArgs args)
    {
        args.PreventDefaultAction = true;
        var orWhere = WhereFilter.Or(new List<WhereFilter> {
            new WhereFilter() { Field = "TaiKhoanUd", Operator = "contains", value = args.Text, IgnoreCase = true },
            new WhereFilter() { Field = "TaiKhoanNm", Operator = "contains", value = args.Text, IgnoreCase = true }
        });
        var query = new Query().Where(orWhere);
        query = !string.IsNullOrEmpty(args.Text) ? query : new Query();
        await ddTKCt.FilterAsync(TaiKhoanDtos, query);
    }
    private void OnValueChangeGhiNoTaiKhoanCt(ChangeEventArgs<int?, TaiKhoanDto> args)
    {
        CheckOnChangeValueGhiNoTaiKoanCt = true;
        this.SfGridHoaDonMuaHangCt.PreventRender(false);
        if (args.ItemData != null)
        {
            SelectGhiNoTaiKhoanCt = args.ItemData;
        }
    }
    private void OnValueChangeTienCt()
    {
        this.SfGridHoaDonMuaHangCt.PreventRender(false);
    }
    public async Task OnFilteringVuViecCt(Syncfusion.Blazor.DropDowns.FilteringEventArgs args)
    {
        args.PreventDefaultAction = true;
        var orWhere = WhereFilter.Or(new List<WhereFilter> {
            new WhereFilter() { Field = "VuViecUd", Operator = "contains", value = args.Text, IgnoreCase = true },
            new WhereFilter() { Field = "VuViecNm", Operator = "contains", value = args.Text, IgnoreCase = true }
        });
        var query = new Query().Where(orWhere);
        query = !string.IsNullOrEmpty(args.Text) ? query : new Query();
        await ddVVCt.FilterAsync(VuViecDtos, query);
    }
    private void OnValueChangeVuViecCt(ChangeEventArgs<int?, VuViecDto> args)
    {
        CheckOnChangeValueVuViecCt = true;
        this.SfGridHoaDonMuaHangCt.PreventRender(false);
        if (args.ItemData != null)
        {
            SelectVuViecCt = args.ItemData;
        }
    }
    public async Task OnFilteringDmMaPhiCt(Syncfusion.Blazor.DropDowns.FilteringEventArgs args)
    {
        args.PreventDefaultAction = true;
        var orWhere = WhereFilter.Or(new List<WhereFilter> {
            new WhereFilter() { Field = "DmMaPhiUd", Operator = "contains", value = args.Text, IgnoreCase = true },
            new WhereFilter() { Field = "DmMaPhiNm", Operator = "contains", value = args.Text, IgnoreCase = true }
        });
        var query = new Query().Where(orWhere);
        query = !string.IsNullOrEmpty(args.Text) ? query : new Query();
        await ddMPCt.FilterAsync(DmMaPhiDtos, query);
    }
    private void OnValueChangeDmMaPhiCt(ChangeEventArgs<int?, DmMaPhiDto> args)
    {
        CheckOnChangeValueDmMaPhiCt = true;
        this.SfGridHoaDonMuaHangCt.PreventRender(false);
        if (args.ItemData != null)
        {
            SelectDmMaPhiCt = args.ItemData;
        }
    }
    public async Task OnFilteringDmTruongTuDoCt(Syncfusion.Blazor.DropDowns.FilteringEventArgs args)
    {
        args.PreventDefaultAction = true;
        var orWhere = WhereFilter.Or(new List<WhereFilter> {
            new WhereFilter() { Field = "DmTruongTuDoUd", Operator = "contains", value = args.Text, IgnoreCase = true },
            new WhereFilter() { Field = "DmTruongTuDoNm", Operator = "contains", value = args.Text, IgnoreCase = true }
        });
        var query = new Query().Where(orWhere);
        query = !string.IsNullOrEmpty(args.Text) ? query : new Query();
        await ddTTDCt.FilterAsync(DmTruongTuDoDtos, query);
    }
    private void OnValueChangeDmTruongTuDoCt(ChangeEventArgs<int?, DmTruongTuDoDto> args)
    {
        CheckOnChangeValueDmTruongTuDoCt = true;
        this.SfGridHoaDonMuaHangCt.PreventRender(false);
        if (args.ItemData != null)
        {
            SelectDmTruongTuDoCt = args.ItemData;
        }
    }
    //Màn hình hóa đơn chi tiết
    private void ActionBeginHoaDonGTGT(ActionEventArgs<HoaDonRequest> arg)
    {
        this.SfGridHoaDonGTGT.PreventRender(false);
        if (arg.RequestType.Equals(Syncfusion.Blazor.Grids.Action.Add))
        {
            int? maxId = HoaDonRequests?.Any() == true ? HoaDonRequests.Max(x => x.Stt) : 0;
            arg.Data.Stt = maxId + 1; // Tăng giá trị Id lên 1
        }
    }
    public async Task ActionCompletedHoaDonGTGT(ActionEventArgs<HoaDonRequest> args)
    {
        if (HoaDonRequests.Count > 0)
        {
            decimal? tienThue = 0; decimal? tienThueVND = 0;
            foreach (var item in HoaDonRequests)
            {
                if (item.Thue == null)
                    item.Thue = 0;
                if (item.ThueVND == null)
                    item.ThueVND = 0;
                tienThue += item.Thue;
                tienThueVND += item.ThueVND;
            }
            SelectPhieuNhap.ThueVat = tienThue;
            SelectPhieuNhap.ThueVatVND = tienThueVND;
            SelectPhieuNhap.HoaDonGTGT = HoaDonRequests.Count;
            CheckHoaDonGtgt = true;
        }
        else
        {
            CheckHoaDonGtgt = false;
            await SfHoaDonGtgt.FocusAsync();
            SelectPhieuNhap.HoaDonGTGT = 0;
            SelectPhieuNhap.ThueVat = 0;
            SelectPhieuNhap.ThueVatVND = 0;
        }
        SelectPhieuNhap.TongTien = SelectPhieuNhap.TienHang + SelectPhieuNhap.ThueVat;
        SelectPhieuNhap.TongTienVND = SelectPhieuNhap.TienHangVND + SelectPhieuNhap.ThueVatVND;
    }
    public void RowUpdatingHoaDonGTGT(RowUpdatingEventArgs<HoaDonRequest> args)
    {
        args.Data.LoaiThue = TempHoaDonCt.LoaiThue;
        args.Data.LoaiThueUd = TempHoaDonCt.LoaiThueUd;
        args.Data.SoCt0 = TempHoaDonCt.SoCt0;
        args.Data.NgayCt0 = TempHoaDonCt.NgayCt0;
        args.Data.SoSeri0 = TempHoaDonCt.SoSeri0;
        args.Data.KyHieuMauHD = TempHoaDonCt.KyHieuMauHD;
        args.Data.KhachHangId = TempHoaDonCt.KhachHangId;
        args.Data.KhachHangUd = TempHoaDonCt.KhachHangUd;
        args.Data.KhachHangNm = TempHoaDonCt.KhachHangNm;
        args.Data.DiaChi = TempHoaDonCt.DiaChi;
        args.Data.MaSoThue = TempHoaDonCt.MaSoThue;
        args.Data.VatTu = TempHoaDonCt.VatTu;
        args.Data.Tien = TempHoaDonCt.Tien;
        args.Data.TienVND = TempHoaDonCt.TienVND;
        args.Data.ThueSuat = TempHoaDonCt.ThueSuat;
        args.Data.Thue = TempHoaDonCt.Thue;
        args.Data.ThueVND = TempHoaDonCt.ThueVND;
        args.Data.TkThue = TempHoaDonCt.TkThue;
        args.Data.TkThueUd = TempHoaDonCt.TkThueUd;
        args.Data.GhiChu = TempHoaDonCt.GhiChu;

    }
    public void RecordDoubleClickHoaDonGTGT(RecordDoubleClickEventArgs<HoaDonRequest> args)
    {
        this.SfGridHoaDonGTGT.PreventRender(false);
        TempHoaDonCt = args.RowData;
    }
    public async Task OnFilteringLoaiThueGTGT(Syncfusion.Blazor.DropDowns.FilteringEventArgs args)
    {
        args.PreventDefaultAction = true;
        var orWhere = WhereFilter.Or(new List<WhereFilter> {
            new WhereFilter() { Field = "DMChungUd", Operator = "contains", value = args.Text, IgnoreCase = true },
            new WhereFilter() { Field = "DMChungNm", Operator = "contains", value = args.Text, IgnoreCase = true }
        });
        var query = new Query().Where(orWhere);
        query = !string.IsNullOrEmpty(args.Text) ? query : new Query();
        await ddLoaiThueGTGT.FilterAsync(DMChungDtos, query);
    }
    private void OnValueChangeLoaiThueGTGT(ChangeEventArgs<int?, DmChungDto> args)
    {
        this.SfGridHoaDonGTGT.PreventRender(false);
        if (args.ItemData != null)
        {
            TempHoaDonCt.LoaiThue = args.ItemData.Id;
            TempHoaDonCt.LoaiThueUd = args.ItemData.DMChungUd;
        }
    }
    private void OnValueChangeSoHdGTGT(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        this.SfGridHoaDonGTGT.PreventRender(false);
        TempHoaDonCt.SoCt0 = args.Value?.ToString();
    }
    private void OnValueChangeNgayHdGTGT(ChangedEventArgs<DateTime?> args)
    {
        this.SfGridHoaDonGTGT.PreventRender(false);
        if (DateTime.TryParse(args.Value?.ToString(), out DateTime parsedDate))
        {
            TempHoaDonCt.NgayCt0 = parsedDate;
        }
        else
        {
            TempHoaDonCt.NgayCt0 = null;
        }
    }
    private void OnValueChangeKyHieuHdGTGT(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        this.SfGridHoaDonGTGT.PreventRender(false);
        TempHoaDonCt.SoSeri0 = args.Value?.ToString();
    }
    private void OnValueChangeKyHieuMauHdGTGT(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        this.SfGridHoaDonGTGT.PreventRender(false);
        TempHoaDonCt.KyHieuMauHD = args.Value?.ToString();
    }
    public async Task OnFilteringKhachHangGTGT(Syncfusion.Blazor.DropDowns.FilteringEventArgs args)
    {
        args.PreventDefaultAction = true;
        var orWhere = WhereFilter.Or(new List<WhereFilter> {
            new WhereFilter() { Field = "KhachHangUd", Operator = "contains", value = args.Text, IgnoreCase = true },
            new WhereFilter() { Field = "KhachHangNm", Operator = "contains", value = args.Text, IgnoreCase = true }
        });
        var query = new Query().Where(orWhere);
        query = !string.IsNullOrEmpty(args.Text) ? query : new Query();
        await ddKHGTGT.FilterAsync(KhachHangDtos, query);
    }
    private void OnValueChangeKhachHangGTGT(ChangeEventArgs<int?, KhachHangDto> args)
    {
        if (args.ItemData != null)
        {
            TempHoaDonCt.KhachHangId = args.ItemData.Id;
            TempHoaDonCt.KhachHangUd = args.ItemData.KhachHangUd;
            TempHoaDonCt.KhachHangNm = args.ItemData.KhachHangNm;
            TempHoaDonCt.DiaChi = args.ItemData.DiaChi;
            TempHoaDonCt.MaSoThue = args.ItemData.MaSoThue;
        }
    }
    private void OnValueChangeVatTuGTGT(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        this.SfGridHoaDonGTGT.PreventRender(false);
        TempHoaDonCt.VatTu = args.Value?.ToString();
    }
    private void OnValueChangeTienGTGT(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        this.SfGridHoaDonGTGT.PreventRender(false);
        TempHoaDonCt.Tien = decimal.Parse(args.Value?.ToString() == "" ? "0" : args.Value?.ToString() ?? "0");
        if (TempHoaDonCt.Tien != 0)
            TempHoaDonCt.TienVND = TempHoaDonCt.Tien * SelectPhieuNhap.TiGia;
    }
    private void OnValueChangeTienVNDGTGT(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        this.SfGridHoaDonGTGT.PreventRender(false);
        TempHoaDonCt.TienVND = decimal.Parse(args.Value?.ToString() == "" ? "0" : args.Value?.ToString() ?? "0");
    }
    public async Task OnFilteringThueSuatGTGT(Syncfusion.Blazor.DropDowns.FilteringEventArgs args)
    {
        args.PreventDefaultAction = true;
        var orWhere = WhereFilter.Or(new List<WhereFilter> {
            new WhereFilter() { Field = "ThueSuatUd", Operator = "contains", value = args.Text, IgnoreCase = true },
            new WhereFilter() { Field = "ThueSuatNm", Operator = "contains", value = args.Text, IgnoreCase = true }
        });
        var query = new Query().Where(orWhere);
        query = !string.IsNullOrEmpty(args.Text) ? query : new Query();
        await ddTSGTGT.FilterAsync(ThueSuatDtos, query);
    }
    private void OnValueChangeThueSuatGTGT(ChangeEventArgs<int?, ThueSuatDto> args)
    {
        this.SfGridHoaDonGTGT.PreventRender(false);
        if (args.ItemData != null)
        {
            TempHoaDonCt.MaThue = args.ItemData.Id;
            TempHoaDonCt.MaThueUd = args.ItemData.ThueSuatUd;
            TempHoaDonCt.ThueSuat = args.ItemData.GiaTri.HasValue ? args.ItemData.GiaTri : 0;
        }
        else
        {
            TempHoaDonCt.MaThue = null;
            TempHoaDonCt.MaThueUd = null;
            TempHoaDonCt.ThueSuat = 0;
        }
        if (TempHoaDonCt.Thue == 0)
            TempHoaDonCt.Thue = TempHoaDonCt.Tien * TempHoaDonCt.ThueSuat / 100;
        if (TempHoaDonCt.ThueVND == 0)
            TempHoaDonCt.ThueVND = TempHoaDonCt.TienVND * TempHoaDonCt.ThueSuat / 100;
    }
    private void OnValueChangeThueGTGT(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        this.SfGridHoaDonGTGT.PreventRender(false);
        TempHoaDonCt.Thue = decimal.Parse(args.Value?.ToString() == "" ? "0" : args.Value?.ToString() ?? "0");
        if (TempHoaDonCt.Thue == 0)
            TempHoaDonCt.Thue = TempHoaDonCt.Tien * TempHoaDonCt.ThueSuat / 100;
    }
    private void OnValueChangeThueVNDGTGT(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        this.SfGridHoaDonGTGT.PreventRender(false);
        TempHoaDonCt.ThueVND = decimal.Parse(args.Value?.ToString() == "" ? "0" : args.Value?.ToString() ?? "0");
        if (TempHoaDonCt.ThueVND == 0)
            TempHoaDonCt.ThueVND = TempHoaDonCt.TienVND * TempHoaDonCt.ThueSuat / 100;
    }
    public async Task OnFilteringTKThueGTGT(Syncfusion.Blazor.DropDowns.FilteringEventArgs args)
    {
        args.PreventDefaultAction = true;
        var orWhere = WhereFilter.Or(new List<WhereFilter> {
            new WhereFilter() { Field = "TaiKhoanUd", Operator = "contains", value = args.Text, IgnoreCase = true },
            new WhereFilter() { Field = "TaiKhoanNm", Operator = "contains", value = args.Text, IgnoreCase = true }
        });
        var query = new Query().Where(orWhere);
        query = !string.IsNullOrEmpty(args.Text) ? query : new Query();
        await ddTKTGTGT.FilterAsync(TaiKhoanDtos, query);
    }
    private void OnValueChangeTKThueGTGT(ChangeEventArgs<int?, TaiKhoanDto> args)
    {
        this.SfGridHoaDonGTGT.PreventRender(false);
        if (args.ItemData != null)
        {
            TempHoaDonCt.TkThue = args.ItemData.Id;
            TempHoaDonCt.TkThueUd = args.ItemData.TaiKhoanUd;
            SelectPhieuNhap.TkThueVat = args.ItemData.Id;
            SelectPhieuNhap.TkThueVatUd = args.ItemData.TaiKhoanUd;
        }
    }
    private void OnValueChangeGhiChuGTGT(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        this.SfGridHoaDonGTGT.PreventRender(false);
        TempHoaDonCt.GhiChu = args.Value?.ToString();
    }
    private async Task CreatedComboBoxHoaDonGTGT(Object args)
    {
        await ddLoaiThueGTGT.FocusAsync();
    }
    //Màn hình hóa đơn chi tiết end
    private async Task AddRowCtAsync()
    {
        if (!SelectPhieuNhap.KhachHangId.HasValue)
        {
            TextMessage = "Hãy nhập mã khách hàng !";
            CheckMessage = false;
            IsDeleteMessage = false;
            IsConfirmMessage = false;
            ShowModalMessage = true;
            await ddKH.FocusAsync();
        }
        else
        {
            if (SelectedTab == 0)
                await this.SfGridHoaDonMuaHangCt.AddRecordAsync();
            else if(SelectedTab == 1)
            {
                if(SelectPhieuNhap.HoaDonGTGT == 0)
                {
                    TextMessage = "Hãy nhập hóa đơn giá trị gia tăng !";
                    CheckMessage = false;
                    IsDeleteMessage = false;
                    IsConfirmMessage = false;
                    ShowModalMessage = true;
                    await SfHoaDonGtgt.FocusAsync();
                }
                else{
                    await this.SfGridHoaDonGTGT.AddRecordAsync();
                }
            }
        }
    }
    private async Task DeleteRowCtAsync()
    {
        if (SelectedTab == 0)
            await this.SfGridHoaDonMuaHangCt.DeleteRecordAsync();
        else if (SelectedTab == 1)
            await this.SfGridHoaDonGTGT.DeleteRecordAsync();
    }
    private async Task CancelCtAsync()
    {
        if (SelectedTab == 0)
            await this.SfGridHoaDonMuaHangCt.CloseEditAsync();
        else if (SelectedTab == 1)
            await this.SfGridHoaDonGTGT.CloseEditAsync();
    }
    private async Task SoLuongHoaDonGTGTBlur()
    {
        if (SelectPhieuNhap.HoaDonGTGT > 0 && HoaDonMuaHangRequests.Count > 0)
        {
            await this.SfGridHoaDonGTGT.SelectRowAsync(0);
            await SfGridHoaDonGTGT.StartEditAsync();
        }
    }
    private void SoLuongHoaDonGTGTValueChange()
    {
        if (SelectPhieuNhap.HoaDonGTGT > 0 && HoaDonMuaHangRequests.Count > 0)
        {
            this.BindValueHoaDonGTGT();
        }
        else
        {
            SelectPhieuNhap.HoaDonGTGT = 0;
            TextMessage = "Hãy thêm chi tiết hạch toán !";
            CheckMessage = false;
            IsDeleteMessage = false;
            IsConfirmMessage = false;
            ShowModalMessage = true;
        }
    }
    private void BindValueHoaDonGTGT()
    {

        bool check = false;
        HoaDonRequests = new List<HoaDonRequest>();
        SelectPhieuNhap.TkThueVat = 25;
        SelectPhieuNhap.TkThueVatUd = "13311";
        foreach (var item in HoaDonMuaHangRequests)
        {
            if (item.TienVND != 0)
            {
                check = true;

                HoaDonRequests.Add(new HoaDonRequest()
                    {
                        Stt = item.Stt,
                        TkThue = 25,
                        TkThueUd = "13311",
                        VuViecId = item.VuViecId,
                        MaPhiId = item.MaPhiId,
                        MaTD01 = item.MaTD01,
                        MaTD02 = item.MaTD02,
                        MaTD03 = item.MaTD03,
                        VuViecUd = item.VuViecUd,
                        MaPhiUd = item.MaPhiUd,
                        MaTD01Ud = item.MaTD01Ud,
                        SoCt0 = SelectPhieuNhap.SoHd,
                        NgayCt0 = SelectPhieuNhap.NgayHd,
                        SoSeri0 = SelectPhieuNhap.SoSeri,
                        KyHieuMauHD = SelectPhieuNhap.KyHieuMauHD,
                        KhachHangId = SelectPhieuNhap.KhachHangId,
                        KhachHangUd = SelectPhieuNhap.KhachHangUd,
                        KhachHangNm = SelectPhieuNhap.KhachHangNm,
                        DiaChi = SelectPhieuNhap.DiaChi,
                        MaSoThue = SelectPhieuNhap.MaSoThue,
                        Tien = SelectPhieuNhap.TongTien,
                        TienVND = SelectPhieuNhap.TongTienVND,
                        MaCt = SystemConstants.LoaiPhieu.PhieuNhapMuaHang,
                        MauBC = SystemConstants.MauBC,
                        DieuChinhThueTNDNId = item.DieuChinhThueTNDNId,
                    });
                break;
            }
        }
        if (!check)
        {
            TextMessage = "Hãy thêm giá trị cho cột thành tiền trong tab Chi Tiết Hạch toán!";
            CheckMessage = false;
            IsDeleteMessage = false;
            IsConfirmMessage = false;
            ShowModalMessage = true;
        }
        else
        {
            SelectedTab = 1;
        }
        SelectPhieuNhap.HoaDonGTGT = HoaDonRequests.Count;
    }

    private void ThueSuatValueChange(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        var value = args.Value?.ToString();
        SelectPhieuNhap.ThueSuat = value == null ? 0 : decimal.Parse(value);
    }
        private async Task TaoPhieuChiAsync()
    {
        var result = await _common.TaoPhieuChiAsync(int.Parse(Id ?? "0"), SelectPhieuNhap);
        if (result.IsSuccessed)
        {
            TextMessage = result.Message;
            CheckMessage = true;
            IsDeleteMessage = false;
            IsConfirmMessage = false;
            ShowModalMessage = true;
        }
        else
        {
            TextMessage = result.Message;
            CheckMessage = false;
            IsDeleteMessage = false;
            IsConfirmMessage = false;
            ShowModalMessage = true;
        }
    }
    // ẩn màn hình
    private void ScreenDisable()
    {
        GridAttributes["disable"] = "yes";
        IsDisabled = true;
        IsSaveDisabled = true;
        IsCancelDisabled = true;
        IsAddDisabled = false;
        IsEditDisabled = false;
        IsDeleteDisabled = false;
        IsPrintDisabled = false;
        IsCopyDisabled = false;
        IsCloseDisabled = false;
        IsNextDisabled = false;
    }
    // Hiện màn hình
    private void ScreenEnabled()
    {
        GridAttributes["disable"] = "no";
        IsDisabled = false;
        IsSaveDisabled = false;
        IsCancelDisabled = false;
        IsAddDisabled = true;
        IsEditDisabled = true;
        IsDeleteDisabled = true;
        IsPrintDisabled = true;
        IsCopyDisabled = true;
        IsCloseDisabled = true;
        IsNextDisabled = true;
    }

    // footer menu
    private void Cancel()
    {

        IsDeleteMessage = false;
        IsConfirmMessage = true;
        CheckMessage = true;
        TextMessage = "Dữ liệu trên form chưa được lưu. Bạn muốn thoát không cần lưu?";
        ShowModalMessage = true;

    }
    private async Task ConfirmCancelAsync()
    {
        ScreenDisable();
        await RefreshAsync();
        if (PhieuNhapDtos.Count == 0)
            NavigationManager.NavigateTo($"{SystemConstants.UrlPath.HoaDonMuaHang}", true);
        else
        {
            await DefaultData(CurrentIndex);
            ShowModalMessage = false;
            CheckMessage = false;
            IsDeleteMessage = false;
            IsConfirmMessage = false;
        }
    }
    private void Close()
    {
        NavigationManager.NavigateTo($"{SystemConstants.UrlPath.HoaDonMuaHang}", true);
    }
    private void Add()
    {
        NavigationManager.NavigateTo($"{SystemConstants.UrlPath.HoaDonMuaHang}/create", true);
    }
    private void _Edit()
    {
        NavigationManager.NavigateTo($"{SystemConstants.UrlPath.HoaDonMuaHang}/edit/{Id}", true);
    }
    private void Delete()
    {
        ShowModalMessage = true;
        IsDeleteMessage = true;
        IsConfirmMessage = false;
        TextMessage = $"Xác nhận xóa phiếu có số chứng từ  <span style='color:red'>{SelectPhieuNhap.Sopn}</span>";
    }
    private async Task ConfirmDeleleAsync()
    {
        var result = await _phieuNhap.DeleteAsync(int.Parse(Id != null ? Id : "0"));
        if (result.IsSuccessed)
        {
            await RefreshAsync();
            if (PhieuNhapDtos.Count == 0)
                NavigationManager.NavigateTo($"{SystemConstants.UrlPath.HoaDonMuaHang}", true);
            else if (CurrentIndex > PhieuNhapDtos.Count - 1)
                CurrentIndex = PhieuNhapDtos.Count - 1;
            await DefaultData(CurrentIndex);
            ShowModalMessage = false;
        }
        else
        {
            ShowModalMessage = true;
            IsDeleteMessage = true;
            IsConfirmMessage = false;
            TextMessage = result.Message;
        }
    }
    private void Copy()
    {
        NavigationManager.NavigateTo($"{SystemConstants.UrlPath.HoaDonMuaHang}/create?copyId={Id}", true);
    }
    private async Task FirstAsync()
    {
        await RefreshAsync();
        CurrentIndex = 0;
        await DefaultData(CurrentIndex);
    }

    private async Task PreviousAsync()
    {
        if (CurrentIndex > 0)
        {
            await RefreshAsync();
            CurrentIndex--;
            await DefaultData(CurrentIndex);
        }
    }

    private async Task NextAsync()
    {
        await RefreshAsync();
        if (CurrentIndex < PhieuNhapDtos.Count - 1)
        {
            CurrentIndex++;
            await DefaultData(CurrentIndex);
        }
    }

    private async Task LastAsync()
    {
        await RefreshAsync();
        CurrentIndex = PhieuNhapDtos.Count - 1;
        await DefaultData(CurrentIndex);
    }
    // Footer menu end
    private async Task DefaultData(int currentIndex, bool isCheck = false)
    {
        if (currentIndex >= 0 && currentIndex < PhieuNhapDtos.Count)
        {
            PhieuNhapDto phieuNhap = new PhieuNhapDto();
            var id = PhieuNhapDtos[currentIndex].Id;
            if (!isCheck)
            {
                Id = id.ToString();
            }
            phieuNhap = await _phieuNhap.GetByIdAsync(Id != null ? int.Parse(Id) : id);
            if (phieuNhap.Id != null)
            {
                SelectPhieuNhap = _objectMapper.Map<PhieuNhapDto, PhieuNhapRequest>(phieuNhap);
                if (NgoaiTeDtos.Count > 0 && NgoaiTeDtos?.FirstOrDefault(x => x.Id == SelectPhieuNhap.NgoaiTeId)?.NgoaiTeUd != "VND")
                    CheckNgoaiTe = true;
                else
                    CheckNgoaiTe = false;
                if (phieuNhap.HoaDonMuaHangDtos?.Count > 0)
                    HoaDonMuaHangRequests = _objectMapper.Map<List<HoaDonMuaHangDto>, List<HoaDonMuaHangRequest>>(phieuNhap.HoaDonMuaHangDtos);
                if (phieuNhap.HoaDonGtgtDtos?.Count > 0)
                    HoaDonRequests = _objectMapper.Map<List<HoaDonGtgtDto>, List<HoaDonRequest>>(phieuNhap.HoaDonGtgtDtos);
                SelectPhieuNhap.HoaDonMuaHangRequests = HoaDonMuaHangRequests;
                SelectPhieuNhap.HoaDonRequests = HoaDonRequests;
            }
            else
            {
                NavigationManager.NavigateTo("error");
            }
        }
    }

    private async Task RefreshAsync()
    {
        DateTime? tuNgay = await _localStorage.GetItemAsync<string>("TuNgayLamViec") != null ? DateTime.Parse(await _localStorage.GetItemAsync<string>("TuNgayLamViec")) : null;
        DateTime? denNgay = await _localStorage.GetItemAsync<string>("DenNgayLamViec") != null ? DateTime.Parse(await _localStorage.GetItemAsync<string>("DenNgayLamViec")).AddDays(1) : null;
        if (tuNgay != null && denNgay != null)
        {
            PhieuNhapDtos = await _phieuNhap.GetListAsync(SystemConstants.LoaiPhieu.HoaDonMuaHang,tuNgay, denNgay);
            ChiNhanhDtos = await _chiNhanh.GetListAsync();
            KhachHangDtos = await _khachHang.GetListAsync(SystemConstants.KhachHang.Loai0);
            NgoaiTeDtos = await _ngoaiTe.GetListAsync();
            QuyenSoDtos = await _quyenSo.GetListAsync(SystemConstants.LoaiPhieu.HoaDonMuaHang);
            TaiKhoanDtos = await _taiKhoan.GetListAsync();
            VatTuDtos = await _vatTu.GetListAsync(string.Empty);
            KhoDtos = await _kho.GetListAsync();
            DMChungDtos = await _dmChung.GetListAsync(SystemConstants.DmChung.LoaiThue);
            VuViecDtos = await _vuViec.GetListAsync();
            DmMaPhiDtos = await _dmMaPhi.GetListAsync();
            DmTruongTuDoDtos = await _dmTruongTuDo.GetListLoai1Async();
            ThueSuatDtos = await _thueSuat.GetListAsync();
        }
        else
        {
            NavigationManager.NavigateTo(SystemConstants.UrlPath.ThoiGianLamViec, true);
        }
    }

    private void CloseModalMessage()
    {
        ShowModalMessage = false;
    }
    public async Task CloseModal()
    {
        switch (true)
        {
            case var _ when ShowModalTaoMoiCN:
                var chiNhanhUd = await _localStorage.GetItemAsync<string>("TaoMoiChiNhanhUd");
                if (!chiNhanhUd.IsNullOrEmpty())
                {
                    ChiNhanhDtos = await _chiNhanh.GetListAsync();
                    var item = ChiNhanhDtos.First(x => x.ChiNhanhUd == chiNhanhUd);
                    SelectPhieuNhap.ChiNhanhId = item.Id;
                    SelectPhieuNhap.ChiNhanhNm = item.ChiNhanhNm;
                    await _localStorage.RemoveItemAsync("TaoMoiChiNhanhUd");
                }
                ShowModalTaoMoiCN = false;
                break;
            case var _ when ShowModalTaoMoiKH:
                var khachHangUd = await _localStorage.GetItemAsync<string>("TaoMoiKhachHangUd");
                if (!khachHangUd.IsNullOrEmpty())
                {
                    KhachHangDtos = await _khachHang.GetListAsync(SystemConstants.KhachHang.Loai0);
                    var item = KhachHangDtos.First(x => x.KhachHangUd == khachHangUd);
                    SelectPhieuNhap.KhachHangId = item.Id;
                    SelectPhieuNhap.KhachHangNm = item.KhachHangNm;
                    SelectPhieuNhap.DiaChi = item.DiaChi;
                    await _localStorage.RemoveItemAsync("TaoMoiKhachHangUd");
                }
                ShowModalTaoMoiKH = false;
                break;
        }
        StateHasChanged();
    }


    private void DefaultValueChiNhanh(List<ChiNhanhDto> chiNhanhDtos)
    {
        var item = chiNhanhDtos.FirstOrDefault();
        SelectPhieuNhap.ChiNhanhId = item?.Id;
        SelectPhieuNhap.ChiNhanhNm = item?.ChiNhanhNm;
    }
}
